--This file establishes refinment and basic assertions of the versions of the semantics created in Constant_Setting.csp.
--Involving P3 with normal AnglePID controller.  

--Imports for Parallel version P1 (no longer used).
include "segwaycomparison_cspgen/defs/file_AnglePID_defs.csp"
include "segwaycomparison_cspgen/defs/file_BalanceSTM_P1_defs.csp"
include "segwaycomparison_cspgen/defs/file_RotationPID_S_defs.csp"
include "segwaycomparison_cspgen/defs/file_Segway_P1.csp"
include "segwaycomparison_cspgen/defs/file_SpeedPID_defs.csp"
include "segwaycomparison_cspgen/defs/file_Segway_P1_defs.csp"
include "segwaycomparison_cspgen/defs/file_SpeedPID_S_defs.csp"
include "segwaycomparison_cspgen/defs/file_BalanceSTM_defs.csp"
include "segwaycomparison_cspgen/defs/file_RotationPID_defs.csp"
include "segwaycomparison_cspgen/defs/file_AnglePID_S_defs.csp"
include "segwaycomparison_cspgen/defs/file_Segway_defs.csp"
include "segwaycomparison_cspgen/defs/file_SegwayRP_defs.csp"

--Imports for Sequential version. 
include "segwaycomparison_cspgen/defs/file_Segway.csp"

--Imports for P2 parallel version. 
include "segwaycomparison_cspgen/defs/file_BalanceSTM_P2_defs.csp"
include "segwaycomparison_cspgen/defs/file_Segway_P2_defs.csp"
include "segwaycomparison_cspgen/defs/file_Segway_P2.csp"

--Imports for P3 parallel version 
include "segwaycomparison_cspgen/defs/file_Segway_P3_defs.csp"
include "segwaycomparison_cspgen/defs/file_Segway_P3.csp"

--Universal Imports
include "segwaycomparison_cspgen/defs/state_defs.csp"
include "segwaycomparison_cspgen/defs/core_defs.csp"
include "segwaycomparison_cspgen/defs/robochart_defs.csp"
include "segwaycomparison_cspgen/instantiations.csp"
channel r__

include "constants.csp"

--PROCESSES -- 

P_Segway = let
	id__ = 0
	const_Segway_SegwayController_stm_ref0_maxAngle = BalanceSTM_maxAngle
	const_Segway_SegwayController_stm_ref0_loopTime = BalanceSTM_loopTime
	const_Segway_SegwayController_stm_ref0_startupDelay = BalanceSTM_startupDelay
	const_Segway_SegwayController_stm_ref0_speedUpdate = BalanceSTM_speedUpdate
	const_Segway_SegwayController_stm_ref0_rotationUpdate = BalanceSTM_rotationUpdate
	const_Segway_SegwayController_stm_ref0_angleBudget = BalanceSTM_angleBudget
	const_Segway_SegwayController_stm_ref0_speedBudget = BalanceSTM_speedBudget
	const_Segway_SegwayController_stm_ref0_rotationBudget = BalanceSTM_rotationBudget
	const_Segway_SegwayController_stm_ref0_motorBudget = BalanceSTM_motorBudget
		
	const_Segway_SegwayController_op_ref1_P = SpeedPID_P
	const_Segway_SegwayController_op_ref1_I = SpeedPID_I
	const_Segway_SegwayController_op_ref1_maxIntegral = SpeedPID_maxIntegral
	const_Segway_SegwayController_op_ref2_D = RotationPID_D
	const_Segway_SegwayController_op_ref0_P = AnglePID_P
	const_Segway_SegwayController_op_ref0_D = AnglePID_D
	
within
	Segway::O__(id__,
			    const_Segway_SegwayController_stm_ref0_maxAngle,
			    const_Segway_SegwayController_stm_ref0_loopTime,
			    const_Segway_SegwayController_stm_ref0_startupDelay,
			    const_Segway_SegwayController_stm_ref0_speedUpdate,
			    const_Segway_SegwayController_stm_ref0_rotationUpdate,
			    const_Segway_SegwayController_stm_ref0_angleBudget,
			    const_Segway_SegwayController_stm_ref0_speedBudget,
			    const_Segway_SegwayController_stm_ref0_rotationBudget,
			    const_Segway_SegwayController_stm_ref0_motorBudget,
			   	const_Segway_SegwayController_op_ref0_P,
			   	const_Segway_SegwayController_op_ref0_D,
			   	const_Segway_SegwayController_op_ref1_P,
			   	const_Segway_SegwayController_op_ref1_I,
			   	const_Segway_SegwayController_op_ref1_maxIntegral,
			   	const_Segway_SegwayController_op_ref2_D)
				

-- generate Segway_P1, which is the Parallel Segway module semantics, version 1. 
P_Segway_P2 = let
	id__ = 0
	const_Segway_P2_SegwayController_stm_ref1_P = AnglePID_P
	const_Segway_P2_SegwayController_stm_ref1_D = AnglePID_D
	const_Segway_P2_SegwayController_stm_ref2_P = SpeedPID_P
	const_Segway_P2_SegwayController_stm_ref2_I = SpeedPID_I
	const_Segway_P2_SegwayController_stm_ref2_maxIntegral = SpeedPID_maxIntegral
	const_Segway_P2_SegwayController_stm_ref0_maxAngle = BalanceSTM_maxAngle
	const_Segway_P2_SegwayController_stm_ref0_loopTime = BalanceSTM_loopTime
	const_Segway_P2_SegwayController_stm_ref0_startupDelay = BalanceSTM_startupDelay
	const_Segway_P2_SegwayController_stm_ref0_speedUpdate = BalanceSTM_speedUpdate
	const_Segway_P2_SegwayController_stm_ref0_rotationUpdate = BalanceSTM_rotationUpdate
	const_Segway_P2_SegwayController_stm_ref0_motorBudget = BalanceSTM_motorBudget
	const_Segway_P2_SegwayController_stm_ref0_angleBudget = BalanceSTM_angleBudget
	const_Segway_P2_SegwayController_stm_ref0_speedBudget = BalanceSTM_speedBudget
	const_Segway_P2_SegwayController_stm_ref0_rotationBudget = BalanceSTM_rotationBudget
	const_Segway_P2_SegwayController_stm_ref3_D = RotationPID_D
		
	
within
	Segway_P2::O__(id__,
			    const_Segway_P2_SegwayController_stm_ref0_maxAngle,
			    const_Segway_P2_SegwayController_stm_ref0_loopTime,
			    const_Segway_P2_SegwayController_stm_ref0_startupDelay,
			    const_Segway_P2_SegwayController_stm_ref0_speedUpdate,
			    const_Segway_P2_SegwayController_stm_ref0_rotationUpdate,
			    const_Segway_P2_SegwayController_stm_ref0_motorBudget,
			    const_Segway_P2_SegwayController_stm_ref0_angleBudget,
			    const_Segway_P2_SegwayController_stm_ref0_speedBudget,
			    const_Segway_P2_SegwayController_stm_ref0_rotationBudget,
			    const_Segway_P2_SegwayController_stm_ref1_P,
			    const_Segway_P2_SegwayController_stm_ref1_D,
			    const_Segway_P2_SegwayController_stm_ref2_P,
			    const_Segway_P2_SegwayController_stm_ref2_I,
			    const_Segway_P2_SegwayController_stm_ref2_maxIntegral,
			    const_Segway_P2_SegwayController_stm_ref3_D)
				

P_Segway_P3 = let
	id__ = 0
	const_Segway_P3_AnglePID_C_stm_ref0_P = AnglePID_P
	const_Segway_P3_AnglePID_C_stm_ref0_D = AnglePID_D
	const_Segway_P3_SegwayController_stm_ref2_P = SpeedPID_P
	const_Segway_P3_SegwayController_stm_ref2_I = SpeedPID_I
	const_Segway_P3_SegwayController_stm_ref2_maxIntegral = SpeedPID_maxIntegral
	const_Segway_P3_SegwayController_stm_ref0_maxAngle = BalanceSTM_maxAngle
	const_Segway_P3_SegwayController_stm_ref0_loopTime = BalanceSTM_loopTime
	const_Segway_P3_SegwayController_stm_ref0_startupDelay = BalanceSTM_startupDelay
	const_Segway_P3_SegwayController_stm_ref0_speedUpdate = BalanceSTM_speedUpdate
	const_Segway_P3_SegwayController_stm_ref0_rotationUpdate = BalanceSTM_rotationUpdate
	const_Segway_P3_SegwayController_stm_ref0_motorBudget = BalanceSTM_motorBudget
	const_Segway_P3_SegwayController_stm_ref0_angleBudget = BalanceSTM_angleBudget
	const_Segway_P3_SegwayController_stm_ref0_speedBudget = BalanceSTM_speedBudget
	const_Segway_P3_SegwayController_stm_ref0_rotationBudget = BalanceSTM_rotationBudget
	const_Segway_P3_SegwayController_stm_ref3_D = RotationPID_D
		
	
within
	Segway_P3::O__(id__,
			    const_Segway_P3_SegwayController_stm_ref0_maxAngle,
			    const_Segway_P3_SegwayController_stm_ref0_loopTime,
			    const_Segway_P3_SegwayController_stm_ref0_startupDelay,
			    const_Segway_P3_SegwayController_stm_ref0_speedUpdate,
			    const_Segway_P3_SegwayController_stm_ref0_rotationUpdate,
			    const_Segway_P3_SegwayController_stm_ref0_motorBudget,
			    const_Segway_P3_SegwayController_stm_ref0_angleBudget,
			    const_Segway_P3_SegwayController_stm_ref0_speedBudget,
			    const_Segway_P3_SegwayController_stm_ref0_rotationBudget,
			    const_Segway_P3_SegwayController_stm_ref2_P,
			    const_Segway_P3_SegwayController_stm_ref2_I,
			    const_Segway_P3_SegwayController_stm_ref2_maxIntegral,
			    const_Segway_P3_SegwayController_stm_ref3_D,
			    const_Segway_P3_AnglePID_C_stm_ref0_P,
			    const_Segway_P3_AnglePID_C_stm_ref0_D)


-- generate Segway_P2_Renamed

P_Segway_P2_Renamed = P_Segway_P2[[
  Segway_P2::leftMotorVelocity <- Segway::leftMotorVelocity,
  Segway_P2::rightMotorVelocity <- Segway::rightMotorVelocity,
  Segway_P2::angle <- Segway::angle,
  Segway_P2::gyroX <- Segway::gyroX,
  Segway_P2::gyroY <- Segway::gyroY,
  Segway_P2::gyroZ <- Segway::gyroZ,
  Segway_P2::setLeftMotorSpeedCall <- Segway::setLeftMotorSpeedCall,
  Segway_P2::setRightMotorSpeedCall <- Segway::setRightMotorSpeedCall,
  Segway_P2::enableInterruptsCall <- Segway::enableInterruptsCall,
  Segway_P2::disableInterruptsCall <- Segway::disableInterruptsCall
  ]]
  
-- generate Segway_P3_Renamed

P_Segway_P3_Renamed = P_Segway_P3[[
  Segway_P3::leftMotorVelocity <- Segway::leftMotorVelocity,
  Segway_P3::rightMotorVelocity <- Segway::rightMotorVelocity,
  Segway_P3::angle <- Segway::angle,
  Segway_P3::gyroX <- Segway::gyroX,
  Segway_P3::gyroY <- Segway::gyroY,
  Segway_P3::gyroZ <- Segway::gyroZ,
  Segway_P3::setLeftMotorSpeedCall <- Segway::setLeftMotorSpeedCall,
  Segway_P3::setRightMotorSpeedCall <- Segway::setRightMotorSpeedCall,
  Segway_P3::enableInterruptsCall <- Segway::enableInterruptsCall,
  Segway_P3::disableInterruptsCall <- Segway::disableInterruptsCall
  ]]
  
--ASSERTIONS --

--BASIC ASSERTIONS --

assert P_Segway :[deadlock-free]	
assert P_Segway;RUN({r__}) :[deadlock-free]
assert P_Segway :[deterministic]
assert P_Segway :[divergence-free]

assert P_Segway_P2_Renamed :[deadlock-free]	
assert P_Segway_P2_Renamed;RUN({r__}) :[deadlock-free]
assert P_Segway_P2_Renamed :[deterministic]
assert P_Segway_P2_Renamed :[divergence-free]

assert P_Segway_P3_Renamed :[deadlock-free]	
assert P_Segway_P3_Renamed;RUN({r__}) :[deadlock-free]
assert P_Segway_P3_Renamed :[deterministic]
assert P_Segway_P3_Renamed :[divergence-free]


--REFINEMENT ASSERTIONS --

assert P_Segway_P2_Renamed [T= P_Segway
assert P_Segway [T= P_Segway_P2_Renamed

assert P_Segway_P3_Renamed [T= P_Segway 
assert P_Segway [T= P_Segway_P3_Renamed