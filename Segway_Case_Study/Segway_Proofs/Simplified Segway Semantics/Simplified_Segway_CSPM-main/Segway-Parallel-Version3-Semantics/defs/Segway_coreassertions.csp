
--
-- RoboChart generator version 3.0.0.202401231330
-- Automatically generated on 06-02-2025 12:14:59
--
-- Iterated compression status: true
-- Assertions compression status: false
--

include "core_defs.csp"
include "state_defs.csp"
include "Segway.csp"
include "file_Segway_defs.csp"
include "robochart_defs.csp"
include "../instantiations.csp"
channel r__
-- generate Segway
P_Segway = let
	id__ = 0
	
	
	
	const_Segway_SegwayController_stm_ref2_P = const_SpeedPID_P
	const_Segway_SegwayController_stm_ref2_I = const_SpeedPID_I
	const_Segway_SegwayController_stm_ref2_maxIntegral = const_SpeedPID_maxIntegral
	const_Segway_SegwayController_stm_ref0_maxAngle = const_BalanceSTM_maxAngle
	const_Segway_SegwayController_stm_ref0_loopTime = const_BalanceSTM_loopTime
	const_Segway_SegwayController_stm_ref0_startupDelay = const_BalanceSTM_startupDelay
	const_Segway_SegwayController_stm_ref0_speedUpdate = const_BalanceSTM_speedUpdate
	const_Segway_SegwayController_stm_ref0_rotationUpdate = const_BalanceSTM_rotationUpdate
	const_Segway_SegwayController_stm_ref0_motorBudget = const_BalanceSTM_motorBudget
	const_Segway_SegwayController_stm_ref0_angleBudget = const_BalanceSTM_angleBudget
	const_Segway_SegwayController_stm_ref0_speedBudget = const_BalanceSTM_speedBudget
	const_Segway_SegwayController_stm_ref0_rotationBudget = const_BalanceSTM_rotationBudget
	const_Segway_SegwayController_stm_ref3_D = const_RotationPID_D
	const_Segway_AnglePID_C_stm_ref0_P = const_AnglePID_P
	const_Segway_AnglePID_C_stm_ref0_D = const_AnglePID_D
		
	
within
	Segway::O__(id__,
			    const_Segway_SegwayController_stm_ref0_maxAngle,
			    const_Segway_SegwayController_stm_ref0_loopTime,
			    const_Segway_SegwayController_stm_ref0_startupDelay,
			    const_Segway_SegwayController_stm_ref0_speedUpdate,
			    const_Segway_SegwayController_stm_ref0_rotationUpdate,
			    const_Segway_SegwayController_stm_ref0_motorBudget,
			    const_Segway_SegwayController_stm_ref0_angleBudget,
			    const_Segway_SegwayController_stm_ref0_speedBudget,
			    const_Segway_SegwayController_stm_ref0_rotationBudget,
			    const_Segway_SegwayController_stm_ref2_P,
			    const_Segway_SegwayController_stm_ref2_I,
			    const_Segway_SegwayController_stm_ref2_maxIntegral,
			    const_Segway_SegwayController_stm_ref3_D,
			    const_Segway_AnglePID_C_stm_ref0_P,
			    const_Segway_AnglePID_C_stm_ref0_D)
assert P_Segway :[deadlock-free]	
assert P_Segway;RUN({r__}) :[deadlock-free]
assert P_Segway :[deterministic]
assert P_Segway :[divergence-free]

-- generate Segway_SegwayController
P_Segway_SegwayController = let
	id__ = 0
	
	
	
	const_Segway_SegwayController_stm_ref0_maxAngle = const_BalanceSTM_maxAngle
	const_Segway_SegwayController_stm_ref0_loopTime = const_BalanceSTM_loopTime
	const_Segway_SegwayController_stm_ref0_startupDelay = const_BalanceSTM_startupDelay
	const_Segway_SegwayController_stm_ref0_speedUpdate = const_BalanceSTM_speedUpdate
	const_Segway_SegwayController_stm_ref0_rotationUpdate = const_BalanceSTM_rotationUpdate
	const_Segway_SegwayController_stm_ref0_motorBudget = const_BalanceSTM_motorBudget
	const_Segway_SegwayController_stm_ref0_angleBudget = const_BalanceSTM_angleBudget
	const_Segway_SegwayController_stm_ref0_speedBudget = const_BalanceSTM_speedBudget
	const_Segway_SegwayController_stm_ref0_rotationBudget = const_BalanceSTM_rotationBudget
	const_Segway_SegwayController_stm_ref2_P = const_SpeedPID_P
	const_Segway_SegwayController_stm_ref2_I = const_SpeedPID_I
	const_Segway_SegwayController_stm_ref2_maxIntegral = const_SpeedPID_maxIntegral
	const_Segway_SegwayController_stm_ref3_D = const_RotationPID_D
		
within
	Segway::SegwayController::O__(id__,
			    const_Segway_SegwayController_stm_ref0_maxAngle,
			    const_Segway_SegwayController_stm_ref0_loopTime,
			    const_Segway_SegwayController_stm_ref0_startupDelay,
			    const_Segway_SegwayController_stm_ref0_speedUpdate,
			    const_Segway_SegwayController_stm_ref0_rotationUpdate,
			    const_Segway_SegwayController_stm_ref0_motorBudget,
			    const_Segway_SegwayController_stm_ref0_angleBudget,
			    const_Segway_SegwayController_stm_ref0_speedBudget,
			    const_Segway_SegwayController_stm_ref0_rotationBudget,
			    const_Segway_SegwayController_stm_ref2_P,
			    const_Segway_SegwayController_stm_ref2_I,
			    const_Segway_SegwayController_stm_ref2_maxIntegral,
			    const_Segway_SegwayController_stm_ref3_D)

assert P_Segway_SegwayController :[deadlock-free]	
assert P_Segway_SegwayController;RUN({r__}) :[deadlock-free]
assert P_Segway_SegwayController :[deterministic]
assert P_Segway_SegwayController :[divergence-free]

-- generate Segway_SegwayController_stm_ref0
P_Segway_SegwayController_stm_ref0 = let
	id__ = 0
	
	
	
within
	Segway::SegwayController::stm_ref0::O__(
		id__,
		const_BalanceSTM_maxAngle,
		const_BalanceSTM_loopTime,
		const_BalanceSTM_startupDelay,
		const_BalanceSTM_speedUpdate,
		const_BalanceSTM_rotationUpdate,
		const_BalanceSTM_motorBudget,
		const_BalanceSTM_angleBudget,
		const_BalanceSTM_speedBudget,
		const_BalanceSTM_rotationBudget
	)
assert P_Segway_SegwayController_stm_ref0 :[deadlock-free]	
assert P_Segway_SegwayController_stm_ref0;RUN({r__}) :[deadlock-free]
assert P_Segway_SegwayController_stm_ref0 :[deterministic]
assert P_Segway_SegwayController_stm_ref0 :[divergence-free]
-- generate Segway_SegwayController_stm_ref2
P_Segway_SegwayController_stm_ref2 = let
	id__ = 0
	
	
	
within
	Segway::SegwayController::stm_ref2::O__(
		id__,
		const_SpeedPID_P,
		const_SpeedPID_I,
		const_SpeedPID_maxIntegral
	)
assert P_Segway_SegwayController_stm_ref2 :[deadlock-free]	
assert P_Segway_SegwayController_stm_ref2;RUN({r__}) :[deadlock-free]
assert P_Segway_SegwayController_stm_ref2 :[deterministic]
assert P_Segway_SegwayController_stm_ref2 :[divergence-free]
-- generate Segway_SegwayController_stm_ref3
P_Segway_SegwayController_stm_ref3 = let
	id__ = 0
	
	
	
within
	Segway::SegwayController::stm_ref3::O__(
		id__,
		const_RotationPID_D
	)
assert P_Segway_SegwayController_stm_ref3 :[deadlock-free]	
assert P_Segway_SegwayController_stm_ref3;RUN({r__}) :[deadlock-free]
assert P_Segway_SegwayController_stm_ref3 :[deterministic]
assert P_Segway_SegwayController_stm_ref3 :[divergence-free]
-- generate Segway_AnglePID_C
P_Segway_AnglePID_C = let
	id__ = 0
	
	
	
	const_Segway_AnglePID_C_stm_ref0_P = const_AnglePID_P
	const_Segway_AnglePID_C_stm_ref0_D = const_AnglePID_D
		
within
	Segway::AnglePID_C::O__(id__,
			    const_Segway_AnglePID_C_stm_ref0_P,
			    const_Segway_AnglePID_C_stm_ref0_D)

assert P_Segway_AnglePID_C :[deadlock-free]	
assert P_Segway_AnglePID_C;RUN({r__}) :[deadlock-free]
assert P_Segway_AnglePID_C :[deterministic]
assert P_Segway_AnglePID_C :[divergence-free]

-- generate Segway_AnglePID_C_stm_ref0
P_Segway_AnglePID_C_stm_ref0 = let
	id__ = 0
	
	
	
within
	Segway::AnglePID_C::stm_ref0::O__(
		id__,
		const_AnglePID_P,
		const_AnglePID_D
	)
assert P_Segway_AnglePID_C_stm_ref0 :[deadlock-free]	
assert P_Segway_AnglePID_C_stm_ref0;RUN({r__}) :[deadlock-free]
assert P_Segway_AnglePID_C_stm_ref0 :[deterministic]
assert P_Segway_AnglePID_C_stm_ref0 :[divergence-free]
