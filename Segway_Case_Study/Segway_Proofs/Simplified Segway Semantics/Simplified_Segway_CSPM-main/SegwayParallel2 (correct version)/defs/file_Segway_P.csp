
module Segway			
	exports
	
	transparent diamond
	transparent sbisim
	transparent chase			
	
	-- declaring channels
	-- declaring robotic platform events
	channel leftMotorVelocity: InOut.core_real
	channel rightMotorVelocity: InOut.core_real
	channel angle: InOut.core_real
	channel gyroX: InOut.core_real
	channel gyroY: InOut.core_real
	channel gyroZ: InOut.core_real
	
	channel setLeftMotorSpeedCall: core_real
	channel setRightMotorSpeedCall: core_real
	channel enableInterruptsCall
	channel disableInterruptsCall
	
	-- declaring module termination channel
	channel terminate
				
	-- declaring robotic platform variables
	
	-- declaring controller
		module SegwayController
			shared_variable_events = {|
			|}		
			
		exports
			transparent diamond
			transparent sbisim
			transparent chase
	
		
			-- declaring call and ret events for undefined operations
			channel disableInterruptsCall
			channel setLeftMotorSpeedCall: core_real
			channel setRightMotorSpeedCall: core_real
			channel enableInterruptsCall
		
			CALL__disableInterrupts(id__) =  disableInterruptsCall -> SKIP
			
			CALL__setLeftMotorSpeed(id__,
					    speed) =  setLeftMotorSpeedCall.speed -> SKIP
			
			CALL__setRightMotorSpeed(id__,
					    speed) =  setRightMotorSpeedCall.speed -> SKIP
			
			CALL__enableInterrupts(id__) =  enableInterruptsCall -> SKIP
			
		
		
			module stm_ref0
			exports
				-- flow channels
				channel internal__ : TIDS
				channel enteredV, enterV, exitV, exitedV : SIDS
				channel enter, entered: SIDS.SIDS
				channel exit,exited: SIDS.SIDS
				channel terminate
				
				-- variable channels
				channel get_currAngle, set_currAngle: core_real
				channel get_currGyroX, set_currGyroX: core_real
				channel get_currGyroY, set_currGyroY: core_real
				channel get_currGyroZ, set_currGyroZ: core_real
				channel get_currLeftVel, set_currLeftVel: core_real
				channel get_currRightVel, set_currRightVel: core_real
				channel get_speedCount, set_speedCount: core_nat
				channel get_rotationCount, set_rotationCount: core_nat
				channel get_angleOutput, set_angleOutput: core_real
				channel get_speedOutput, set_speedOutput: core_real
				channel get_rotationOutput, set_rotationOutput: core_real
				channel get_speedSent, set_speedSent: core_boolean
				channel get_angleSent, set_angleSent: core_boolean
				channel get_rotationSent, set_rotationSent: core_boolean
				channel get_angleReceived, set_angleReceived: core_boolean
				channel get_speedIntegral, set_speedIntegral: core_real
						
				-- shared variable channels
				
				-- local variable channels for defined operations that are required by the state machine
				
				-- declaring state machine events
				channel leftMotorVelocity__: TIDS.InOut.core_real
				channel leftMotorVelocity: InOut.core_real
				channel rightMotorVelocity__: TIDS.InOut.core_real
				channel rightMotorVelocity: InOut.core_real
				channel angle__: TIDS.InOut.core_real
				channel angle: InOut.core_real
				channel gyroX__: TIDS.InOut.core_real
				channel gyroX: InOut.core_real
				channel gyroY__: TIDS.InOut.core_real
				channel gyroY: InOut.core_real
				channel gyroZ__: TIDS.InOut.core_real
				channel gyroZ: InOut.core_real
				channel angleOutputE__: TIDS.InOut.core_real
				channel angleOutputE: InOut.core_real
				channel anewError__: TIDS.InOut.core_real
				channel anewError: InOut.core_real
				channel adiff__: TIDS.InOut.core_real
				channel adiff: InOut.core_real
				channel snewError__: TIDS.InOut.core_real
				channel snewError: InOut.core_real
				channel speedOutputE__: TIDS.InOut.core_real
				channel speedOutputE: InOut.core_real
				channel rdiff__: TIDS.InOut.core_real
				channel rdiff: InOut.core_real
				channel rotationOutputE__: TIDS.InOut.core_real
				channel rotationOutputE: InOut.core_real
				
				-- declaring call and ret events for undefined operations
				channel disableInterruptsCall
				channel setLeftMotorSpeedCall: core_real
				channel setRightMotorSpeedCall: core_real
				channel enableInterruptsCall
				
				-- Only the undefined operations are declared here.
				-- If the state machine is in isolation, all required operations will be undefined.
				-- If it is in the context of a controller, the required operations not provided by the
				-- controller will be declared here, and the defined operations will be defined in the
				-- context of the Controller module, and therefore within scope of the state machien module.
				CALL__disableInterrupts(id__) =  disableInterruptsCall -> SKIP
				
				CALL__setLeftMotorSpeed(id__,
						    speed) =  setLeftMotorSpeedCall.speed -> SKIP
				
				CALL__setRightMotorSpeed(id__,
						    speed) =  setRightMotorSpeedCall.speed -> SKIP
				
				CALL__enableInterrupts(id__) =  enableInterruptsCall -> SKIP
				
				
				
				-- definition of functions used to expose flow channels
				ShowEvents(P,E) = P[[ entered.x____.y____ <- enteredV.y____ | entered.x____.y____ <- E]]
								   [[ enter.x____.y____ <- enterV.y____ | enter.x____.y____ <- E]]
								   [[ exit.x____.y____ <- exitV.y____ | exit.x____.y____ <- E]]
								   [[ exited.x____.y____ <- exitedV.y____ | exited.x____.y____ <- E ]]
									 
				ShowEnteredV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				ShowEnterV(P) = P[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				ShowExitV(P) = P[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				ShowExitedV(P) = P[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				ShowV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS]]
							[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS]]
							[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				
				-- declaring identifiers of state and final states
				datatype SIDS = SID_BalanceSTM
				              | SID_BalanceSTM_Initialisation
				              | SID_BalanceSTM_WaitForNextIteration
				              | SID_BalanceSTM_Setup
				              | SID_BalanceSTM_ReceiveInput
				              | SID_BalanceSTM_SendSpeed
				              | SID_BalanceSTM_SendAngle
				              | SID_BalanceSTM_SendRotation
				              | SID_BalanceSTM_SetMotors
				              | SID_BalanceSTM_StopMotors
				
				-- declaring identifiers of transitions
				datatype TIDS = NULLTRANSITION__
				              | TID_BalanceSTM_t6
				              | TID_BalanceSTM_t5
				              | TID_BalanceSTM_t8
				              | TID_BalanceSTM_t7
				              | TID_BalanceSTM_t11
				              | TID_BalanceSTM_t13
				              | TID_BalanceSTM_t14
				              | TID_BalanceSTM_t15
				              | TID_BalanceSTM_t16
				              | TID_BalanceSTM_t17
				              | TID_BalanceSTM_t1
				              | TID_BalanceSTM_t4
				              | TID_BalanceSTM_t12
				              | TID_BalanceSTM_t18
				              | TID_BalanceSTM_t9
				              | TID_BalanceSTM_t10
				              | TID_BalanceSTM_t19
				              | TID_BalanceSTM_t20
				
				-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
				
				ITIDS = {
					TID_BalanceSTM_t6,	TID_BalanceSTM_t5,	TID_BalanceSTM_t8,	TID_BalanceSTM_t7,	TID_BalanceSTM_t11,	TID_BalanceSTM_t13,	TID_BalanceSTM_t14,	TID_BalanceSTM_t15,	TID_BalanceSTM_t16,	TID_BalanceSTM_t17,	TID_BalanceSTM_t4,	TID_BalanceSTM_t12,	TID_BalanceSTM_t18,	TID_BalanceSTM_t19,	TID_BalanceSTM_t20
				}
				
				int_int = {|
					leftMotorVelocity__.TID_BalanceSTM_t6,
					rightMotorVelocity__.TID_BalanceSTM_t6,
					angle__.TID_BalanceSTM_t6,
					gyroX__.TID_BalanceSTM_t6,
					gyroY__.TID_BalanceSTM_t6,
					gyroZ__.TID_BalanceSTM_t6,
					angleOutputE__.TID_BalanceSTM_t6,
					anewError__.TID_BalanceSTM_t6,
					adiff__.TID_BalanceSTM_t6,
					snewError__.TID_BalanceSTM_t6,
					speedOutputE__.TID_BalanceSTM_t6,
					rdiff__.TID_BalanceSTM_t6,
					rotationOutputE__.TID_BalanceSTM_t6,
					internal__.TID_BalanceSTM_t6,
					leftMotorVelocity__.TID_BalanceSTM_t5,
					rightMotorVelocity__.TID_BalanceSTM_t5,
					angle__.TID_BalanceSTM_t5,
					gyroX__.TID_BalanceSTM_t5,
					gyroY__.TID_BalanceSTM_t5,
					gyroZ__.TID_BalanceSTM_t5,
					angleOutputE__.TID_BalanceSTM_t5,
					anewError__.TID_BalanceSTM_t5,
					adiff__.TID_BalanceSTM_t5,
					snewError__.TID_BalanceSTM_t5,
					speedOutputE__.TID_BalanceSTM_t5,
					rdiff__.TID_BalanceSTM_t5,
					rotationOutputE__.TID_BalanceSTM_t5,
					internal__.TID_BalanceSTM_t5,
					leftMotorVelocity__.TID_BalanceSTM_t8,
					rightMotorVelocity__.TID_BalanceSTM_t8,
					angle__.TID_BalanceSTM_t8,
					gyroX__.TID_BalanceSTM_t8,
					gyroY__.TID_BalanceSTM_t8,
					gyroZ__.TID_BalanceSTM_t8,
					angleOutputE__.TID_BalanceSTM_t8,
					anewError__.TID_BalanceSTM_t8,
					adiff__.TID_BalanceSTM_t8,
					snewError__.TID_BalanceSTM_t8,
					speedOutputE__.TID_BalanceSTM_t8,
					rdiff__.TID_BalanceSTM_t8,
					rotationOutputE__.TID_BalanceSTM_t8,
					internal__.TID_BalanceSTM_t8,
					leftMotorVelocity__.TID_BalanceSTM_t7,
					rightMotorVelocity__.TID_BalanceSTM_t7,
					angle__.TID_BalanceSTM_t7,
					gyroX__.TID_BalanceSTM_t7,
					gyroY__.TID_BalanceSTM_t7,
					gyroZ__.TID_BalanceSTM_t7,
					angleOutputE__.TID_BalanceSTM_t7,
					anewError__.TID_BalanceSTM_t7,
					adiff__.TID_BalanceSTM_t7,
					snewError__.TID_BalanceSTM_t7,
					speedOutputE__.TID_BalanceSTM_t7,
					rdiff__.TID_BalanceSTM_t7,
					rotationOutputE__.TID_BalanceSTM_t7,
					internal__.TID_BalanceSTM_t7,
					leftMotorVelocity__.TID_BalanceSTM_t11,
					rightMotorVelocity__.TID_BalanceSTM_t11,
					angle__.TID_BalanceSTM_t11,
					gyroX__.TID_BalanceSTM_t11,
					gyroY__.TID_BalanceSTM_t11,
					gyroZ__.TID_BalanceSTM_t11,
					angleOutputE__.TID_BalanceSTM_t11,
					anewError__.TID_BalanceSTM_t11,
					adiff__.TID_BalanceSTM_t11,
					snewError__.TID_BalanceSTM_t11,
					speedOutputE__.TID_BalanceSTM_t11,
					rdiff__.TID_BalanceSTM_t11,
					rotationOutputE__.TID_BalanceSTM_t11,
					internal__.TID_BalanceSTM_t11,
					leftMotorVelocity__.TID_BalanceSTM_t13,
					rightMotorVelocity__.TID_BalanceSTM_t13,
					angle__.TID_BalanceSTM_t13,
					gyroX__.TID_BalanceSTM_t13,
					gyroY__.TID_BalanceSTM_t13,
					gyroZ__.TID_BalanceSTM_t13,
					angleOutputE__.TID_BalanceSTM_t13,
					anewError__.TID_BalanceSTM_t13,
					adiff__.TID_BalanceSTM_t13,
					snewError__.TID_BalanceSTM_t13,
					speedOutputE__.TID_BalanceSTM_t13,
					rdiff__.TID_BalanceSTM_t13,
					rotationOutputE__.TID_BalanceSTM_t13,
					internal__.TID_BalanceSTM_t13,
					leftMotorVelocity__.TID_BalanceSTM_t14,
					rightMotorVelocity__.TID_BalanceSTM_t14,
					angle__.TID_BalanceSTM_t14,
					gyroX__.TID_BalanceSTM_t14,
					gyroY__.TID_BalanceSTM_t14,
					gyroZ__.TID_BalanceSTM_t14,
					angleOutputE__.TID_BalanceSTM_t14,
					anewError__.TID_BalanceSTM_t14,
					adiff__.TID_BalanceSTM_t14,
					snewError__.TID_BalanceSTM_t14,
					speedOutputE__.TID_BalanceSTM_t14,
					rdiff__.TID_BalanceSTM_t14,
					rotationOutputE__.TID_BalanceSTM_t14,
					internal__.TID_BalanceSTM_t14,
					leftMotorVelocity__.TID_BalanceSTM_t15,
					rightMotorVelocity__.TID_BalanceSTM_t15,
					angle__.TID_BalanceSTM_t15,
					gyroX__.TID_BalanceSTM_t15,
					gyroY__.TID_BalanceSTM_t15,
					gyroZ__.TID_BalanceSTM_t15,
					angleOutputE__.TID_BalanceSTM_t15,
					anewError__.TID_BalanceSTM_t15,
					adiff__.TID_BalanceSTM_t15,
					snewError__.TID_BalanceSTM_t15,
					speedOutputE__.TID_BalanceSTM_t15,
					rdiff__.TID_BalanceSTM_t15,
					rotationOutputE__.TID_BalanceSTM_t15,
					internal__.TID_BalanceSTM_t15,
					leftMotorVelocity__.TID_BalanceSTM_t16,
					rightMotorVelocity__.TID_BalanceSTM_t16,
					angle__.TID_BalanceSTM_t16,
					gyroX__.TID_BalanceSTM_t16,
					gyroY__.TID_BalanceSTM_t16,
					gyroZ__.TID_BalanceSTM_t16,
					angleOutputE__.TID_BalanceSTM_t16,
					anewError__.TID_BalanceSTM_t16,
					adiff__.TID_BalanceSTM_t16,
					snewError__.TID_BalanceSTM_t16,
					speedOutputE__.TID_BalanceSTM_t16,
					rdiff__.TID_BalanceSTM_t16,
					rotationOutputE__.TID_BalanceSTM_t16,
					internal__.TID_BalanceSTM_t16,
					leftMotorVelocity__.TID_BalanceSTM_t17,
					rightMotorVelocity__.TID_BalanceSTM_t17,
					angle__.TID_BalanceSTM_t17,
					gyroX__.TID_BalanceSTM_t17,
					gyroY__.TID_BalanceSTM_t17,
					gyroZ__.TID_BalanceSTM_t17,
					angleOutputE__.TID_BalanceSTM_t17,
					anewError__.TID_BalanceSTM_t17,
					adiff__.TID_BalanceSTM_t17,
					snewError__.TID_BalanceSTM_t17,
					speedOutputE__.TID_BalanceSTM_t17,
					rdiff__.TID_BalanceSTM_t17,
					rotationOutputE__.TID_BalanceSTM_t17,
					internal__.TID_BalanceSTM_t17,
					leftMotorVelocity__.TID_BalanceSTM_t4,
					rightMotorVelocity__.TID_BalanceSTM_t4,
					angle__.TID_BalanceSTM_t4,
					gyroX__.TID_BalanceSTM_t4,
					gyroY__.TID_BalanceSTM_t4,
					gyroZ__.TID_BalanceSTM_t4,
					angleOutputE__.TID_BalanceSTM_t4,
					anewError__.TID_BalanceSTM_t4,
					adiff__.TID_BalanceSTM_t4,
					snewError__.TID_BalanceSTM_t4,
					speedOutputE__.TID_BalanceSTM_t4,
					rdiff__.TID_BalanceSTM_t4,
					rotationOutputE__.TID_BalanceSTM_t4,
					internal__.TID_BalanceSTM_t4,
					leftMotorVelocity__.TID_BalanceSTM_t12,
					rightMotorVelocity__.TID_BalanceSTM_t12,
					angle__.TID_BalanceSTM_t12,
					gyroX__.TID_BalanceSTM_t12,
					gyroY__.TID_BalanceSTM_t12,
					gyroZ__.TID_BalanceSTM_t12,
					angleOutputE__.TID_BalanceSTM_t12,
					anewError__.TID_BalanceSTM_t12,
					adiff__.TID_BalanceSTM_t12,
					snewError__.TID_BalanceSTM_t12,
					speedOutputE__.TID_BalanceSTM_t12,
					rdiff__.TID_BalanceSTM_t12,
					rotationOutputE__.TID_BalanceSTM_t12,
					internal__.TID_BalanceSTM_t12,
					leftMotorVelocity__.TID_BalanceSTM_t18,
					rightMotorVelocity__.TID_BalanceSTM_t18,
					angle__.TID_BalanceSTM_t18,
					gyroX__.TID_BalanceSTM_t18,
					gyroY__.TID_BalanceSTM_t18,
					gyroZ__.TID_BalanceSTM_t18,
					angleOutputE__.TID_BalanceSTM_t18,
					anewError__.TID_BalanceSTM_t18,
					adiff__.TID_BalanceSTM_t18,
					snewError__.TID_BalanceSTM_t18,
					speedOutputE__.TID_BalanceSTM_t18,
					rdiff__.TID_BalanceSTM_t18,
					rotationOutputE__.TID_BalanceSTM_t18,
					internal__.TID_BalanceSTM_t18,
					leftMotorVelocity__.TID_BalanceSTM_t19,
					rightMotorVelocity__.TID_BalanceSTM_t19,
					angle__.TID_BalanceSTM_t19,
					gyroX__.TID_BalanceSTM_t19,
					gyroY__.TID_BalanceSTM_t19,
					gyroZ__.TID_BalanceSTM_t19,
					angleOutputE__.TID_BalanceSTM_t19,
					anewError__.TID_BalanceSTM_t19,
					adiff__.TID_BalanceSTM_t19,
					snewError__.TID_BalanceSTM_t19,
					speedOutputE__.TID_BalanceSTM_t19,
					rdiff__.TID_BalanceSTM_t19,
					rotationOutputE__.TID_BalanceSTM_t19,
					internal__.TID_BalanceSTM_t19,
					leftMotorVelocity__.TID_BalanceSTM_t20,
					rightMotorVelocity__.TID_BalanceSTM_t20,
					angle__.TID_BalanceSTM_t20,
					gyroX__.TID_BalanceSTM_t20,
					gyroY__.TID_BalanceSTM_t20,
					gyroZ__.TID_BalanceSTM_t20,
					angleOutputE__.TID_BalanceSTM_t20,
					anewError__.TID_BalanceSTM_t20,
					adiff__.TID_BalanceSTM_t20,
					snewError__.TID_BalanceSTM_t20,
					speedOutputE__.TID_BalanceSTM_t20,
					rdiff__.TID_BalanceSTM_t20,
					rotationOutputE__.TID_BalanceSTM_t20,
					internal__.TID_BalanceSTM_t20
				|}
					
				
				internal_events = {|enter,entered,exit,exited|}
				shared_variable_events = {|
				|}
						
				
				-- declaring all states
				CS_BalanceSTM_Initialisation_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_BalanceSTM_Initialisation,SID_BalanceSTM_WaitForNextIteration,SID_BalanceSTM_Setup,SID_BalanceSTM_ReceiveInput,SID_BalanceSTM_SendSpeed,SID_BalanceSTM_SendAngle,SID_BalanceSTM_SendRotation,SID_BalanceSTM_SetMotors,SID_BalanceSTM_StopMotors},
					y____ <- {SID_BalanceSTM_Initialisation}
				|}
				
				
				BalanceSTM_Initialisation_triggers = {|
					internal__.TID_BalanceSTM_t7,
					internal__.TID_BalanceSTM_t8,
					internal__.TID_BalanceSTM_t13,
					internal__.TID_BalanceSTM_t14,
					internal__.TID_BalanceSTM_t6,
					internal__.TID_BalanceSTM_t16,
					internal__.TID_BalanceSTM_t12,
					internal__.TID_BalanceSTM_t20,
					internal__.TID_BalanceSTM_t4,
					internal__.TID_BalanceSTM_t9,
					rotationOutputE__.TID_BalanceSTM_t15,
					internal__.TID_BalanceSTM_t17,
					speedOutputE__.TID_BalanceSTM_t11,
					internal__.TID_BalanceSTM_t19,
					internal__.TID_BalanceSTM_t18,
					angleOutputE__.TID_BalanceSTM_t5,
					internal__.TID_BalanceSTM_t10
				|}
				
				State_BalanceSTM_Initialisation(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = let
					T_BalanceSTM_t4(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = internal__!TID_BalanceSTM_t4 ->  exit.SID_BalanceSTM_Initialisation.SID_BalanceSTM_Initialisation -> SKIP;
										SKIP;exited.SID_BalanceSTM_Initialisation.SID_BalanceSTM_Initialisation -> SKIP;
										enter!SID_BalanceSTM_Initialisation!SID_BalanceSTM_WaitForNextIteration -> entered!SID_BalanceSTM_Initialisation!SID_BalanceSTM_WaitForNextIteration ->
										State_BalanceSTM_Initialisation(id__,
												    const_BalanceSTM_maxAngle,
												    const_BalanceSTM_loopTime,
												    const_BalanceSTM_startupDelay,
												    const_BalanceSTM_speedUpdate,
												    const_BalanceSTM_rotationUpdate,
												    const_BalanceSTM_motorBudget,
												    const_BalanceSTM_angleBudget,
												    const_BalanceSTM_speedBudget,
												    const_BalanceSTM_rotationBudget)
					State_BalanceSTM_Initialisation_execute(id__,o____) = true & (set_speedCount!0 -> SKIP);true & (set_rotationCount!0 -> SKIP);SKIP;SKIP;true & (set_speedSent!false -> SKIP);true & (set_angleSent!false -> SKIP);true & (set_rotationSent!false -> SKIP); 
						entered!o____!SID_BalanceSTM_Initialisation ->
						(SKIP; STOP /\ (
							T_BalanceSTM_t4(id__,
									    const_BalanceSTM_maxAngle,
									    const_BalanceSTM_loopTime,
									    const_BalanceSTM_startupDelay,
									    const_BalanceSTM_speedUpdate,
									    const_BalanceSTM_rotationUpdate,
									    const_BalanceSTM_motorBudget,
									    const_BalanceSTM_angleBudget,
									    const_BalanceSTM_speedBudget,
									    const_BalanceSTM_rotationBudget)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t4,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10}) -> exit?y____:diff(SIDS,{SID_BalanceSTM_Initialisation})!SID_BalanceSTM_Initialisation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Initialisation -> SKIP);
									State_BalanceSTM_Initialisation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] leftMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t4,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Initialisation})!SID_BalanceSTM_Initialisation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Initialisation -> SKIP);
									State_BalanceSTM_Initialisation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rightMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t4,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Initialisation})!SID_BalanceSTM_Initialisation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Initialisation -> SKIP);
									State_BalanceSTM_Initialisation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angle__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t4,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Initialisation})!SID_BalanceSTM_Initialisation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Initialisation -> SKIP);
									State_BalanceSTM_Initialisation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroX__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t4,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Initialisation})!SID_BalanceSTM_Initialisation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Initialisation -> SKIP);
									State_BalanceSTM_Initialisation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroY__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t4,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Initialisation})!SID_BalanceSTM_Initialisation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Initialisation -> SKIP);
									State_BalanceSTM_Initialisation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroZ__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t4,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Initialisation})!SID_BalanceSTM_Initialisation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Initialisation -> SKIP);
									State_BalanceSTM_Initialisation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angleOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t4,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Initialisation})!SID_BalanceSTM_Initialisation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Initialisation -> SKIP);
									State_BalanceSTM_Initialisation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] anewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t4,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Initialisation})!SID_BalanceSTM_Initialisation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Initialisation -> SKIP);
									State_BalanceSTM_Initialisation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] adiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t4,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Initialisation})!SID_BalanceSTM_Initialisation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Initialisation -> SKIP);
									State_BalanceSTM_Initialisation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] snewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t4,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Initialisation})!SID_BalanceSTM_Initialisation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Initialisation -> SKIP);
									State_BalanceSTM_Initialisation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] speedOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t4,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Initialisation})!SID_BalanceSTM_Initialisation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Initialisation -> SKIP);
									State_BalanceSTM_Initialisation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rdiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t4,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Initialisation})!SID_BalanceSTM_Initialisation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Initialisation -> SKIP);
									State_BalanceSTM_Initialisation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rotationOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t4,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Initialisation})!SID_BalanceSTM_Initialisation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Initialisation -> SKIP);
									State_BalanceSTM_Initialisation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
						))
				within
					enter?x____:diff(SIDS,{SID_BalanceSTM_Initialisation})!SID_BalanceSTM_Initialisation -> (State_BalanceSTM_Initialisation_execute(id__,x____))
				
				CS_BalanceSTM_WaitForNextIteration_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_BalanceSTM_Initialisation,SID_BalanceSTM_WaitForNextIteration,SID_BalanceSTM_Setup,SID_BalanceSTM_ReceiveInput,SID_BalanceSTM_SendSpeed,SID_BalanceSTM_SendAngle,SID_BalanceSTM_SendRotation,SID_BalanceSTM_SetMotors,SID_BalanceSTM_StopMotors},
					y____ <- {SID_BalanceSTM_WaitForNextIteration}
				|}
				
				
				BalanceSTM_WaitForNextIteration_triggers = {|
					internal__.TID_BalanceSTM_t7,
					internal__.TID_BalanceSTM_t8,
					internal__.TID_BalanceSTM_t13,
					internal__.TID_BalanceSTM_t14,
					internal__.TID_BalanceSTM_t6,
					internal__.TID_BalanceSTM_t16,
					internal__.TID_BalanceSTM_t12,
					internal__.TID_BalanceSTM_t20,
					internal__.TID_BalanceSTM_t9,
					rotationOutputE__.TID_BalanceSTM_t15,
					internal__.TID_BalanceSTM_t17,
					speedOutputE__.TID_BalanceSTM_t11,
					internal__.TID_BalanceSTM_t19,
					internal__.TID_BalanceSTM_t18,
					angleOutputE__.TID_BalanceSTM_t5,
					internal__.TID_BalanceSTM_t10
				|}
				
				State_BalanceSTM_WaitForNextIteration(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = let
					T_BalanceSTM_t12(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = internal__!TID_BalanceSTM_t12 ->  exit.SID_BalanceSTM_WaitForNextIteration.SID_BalanceSTM_WaitForNextIteration -> SKIP;
										SKIP;exited.SID_BalanceSTM_WaitForNextIteration.SID_BalanceSTM_WaitForNextIteration -> SKIP;
										true&CALL__disableInterrupts(
													id__
												);enter!SID_BalanceSTM_WaitForNextIteration!SID_BalanceSTM_Setup -> entered!SID_BalanceSTM_WaitForNextIteration!SID_BalanceSTM_Setup ->
										State_BalanceSTM_WaitForNextIteration(id__,
												    const_BalanceSTM_maxAngle,
												    const_BalanceSTM_loopTime,
												    const_BalanceSTM_startupDelay,
												    const_BalanceSTM_speedUpdate,
												    const_BalanceSTM_rotationUpdate,
												    const_BalanceSTM_motorBudget,
												    const_BalanceSTM_angleBudget,
												    const_BalanceSTM_speedBudget,
												    const_BalanceSTM_rotationBudget)
					State_BalanceSTM_WaitForNextIteration_execute(id__,o____) = SKIP; 
						entered!o____!SID_BalanceSTM_WaitForNextIteration ->
						(SKIP; STOP /\ (
							T_BalanceSTM_t12(id__,
									    const_BalanceSTM_maxAngle,
									    const_BalanceSTM_loopTime,
									    const_BalanceSTM_startupDelay,
									    const_BalanceSTM_speedUpdate,
									    const_BalanceSTM_rotationUpdate,
									    const_BalanceSTM_motorBudget,
									    const_BalanceSTM_angleBudget,
									    const_BalanceSTM_speedBudget,
									    const_BalanceSTM_rotationBudget)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10}) -> exit?y____:diff(SIDS,{SID_BalanceSTM_WaitForNextIteration})!SID_BalanceSTM_WaitForNextIteration -> (
									SKIP;
									exited!y____!SID_BalanceSTM_WaitForNextIteration -> SKIP);
									State_BalanceSTM_WaitForNextIteration(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] leftMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_WaitForNextIteration})!SID_BalanceSTM_WaitForNextIteration -> (
									SKIP;
									exited!y____!SID_BalanceSTM_WaitForNextIteration -> SKIP);
									State_BalanceSTM_WaitForNextIteration(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rightMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_WaitForNextIteration})!SID_BalanceSTM_WaitForNextIteration -> (
									SKIP;
									exited!y____!SID_BalanceSTM_WaitForNextIteration -> SKIP);
									State_BalanceSTM_WaitForNextIteration(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angle__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_WaitForNextIteration})!SID_BalanceSTM_WaitForNextIteration -> (
									SKIP;
									exited!y____!SID_BalanceSTM_WaitForNextIteration -> SKIP);
									State_BalanceSTM_WaitForNextIteration(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroX__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_WaitForNextIteration})!SID_BalanceSTM_WaitForNextIteration -> (
									SKIP;
									exited!y____!SID_BalanceSTM_WaitForNextIteration -> SKIP);
									State_BalanceSTM_WaitForNextIteration(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroY__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_WaitForNextIteration})!SID_BalanceSTM_WaitForNextIteration -> (
									SKIP;
									exited!y____!SID_BalanceSTM_WaitForNextIteration -> SKIP);
									State_BalanceSTM_WaitForNextIteration(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroZ__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_WaitForNextIteration})!SID_BalanceSTM_WaitForNextIteration -> (
									SKIP;
									exited!y____!SID_BalanceSTM_WaitForNextIteration -> SKIP);
									State_BalanceSTM_WaitForNextIteration(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angleOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_WaitForNextIteration})!SID_BalanceSTM_WaitForNextIteration -> (
									SKIP;
									exited!y____!SID_BalanceSTM_WaitForNextIteration -> SKIP);
									State_BalanceSTM_WaitForNextIteration(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] anewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_WaitForNextIteration})!SID_BalanceSTM_WaitForNextIteration -> (
									SKIP;
									exited!y____!SID_BalanceSTM_WaitForNextIteration -> SKIP);
									State_BalanceSTM_WaitForNextIteration(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] adiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_WaitForNextIteration})!SID_BalanceSTM_WaitForNextIteration -> (
									SKIP;
									exited!y____!SID_BalanceSTM_WaitForNextIteration -> SKIP);
									State_BalanceSTM_WaitForNextIteration(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] snewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_WaitForNextIteration})!SID_BalanceSTM_WaitForNextIteration -> (
									SKIP;
									exited!y____!SID_BalanceSTM_WaitForNextIteration -> SKIP);
									State_BalanceSTM_WaitForNextIteration(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] speedOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_WaitForNextIteration})!SID_BalanceSTM_WaitForNextIteration -> (
									SKIP;
									exited!y____!SID_BalanceSTM_WaitForNextIteration -> SKIP);
									State_BalanceSTM_WaitForNextIteration(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rdiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_WaitForNextIteration})!SID_BalanceSTM_WaitForNextIteration -> (
									SKIP;
									exited!y____!SID_BalanceSTM_WaitForNextIteration -> SKIP);
									State_BalanceSTM_WaitForNextIteration(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rotationOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_WaitForNextIteration})!SID_BalanceSTM_WaitForNextIteration -> (
									SKIP;
									exited!y____!SID_BalanceSTM_WaitForNextIteration -> SKIP);
									State_BalanceSTM_WaitForNextIteration(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
						))
				within
					enter?x____:diff(SIDS,{SID_BalanceSTM_WaitForNextIteration})!SID_BalanceSTM_WaitForNextIteration -> (State_BalanceSTM_WaitForNextIteration_execute(id__,x____))
				
				CS_BalanceSTM_Setup_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_BalanceSTM_Initialisation,SID_BalanceSTM_WaitForNextIteration,SID_BalanceSTM_Setup,SID_BalanceSTM_ReceiveInput,SID_BalanceSTM_SendSpeed,SID_BalanceSTM_SendAngle,SID_BalanceSTM_SendRotation,SID_BalanceSTM_SetMotors,SID_BalanceSTM_StopMotors},
					y____ <- {SID_BalanceSTM_Setup}
				|}
				
				
				BalanceSTM_Setup_triggers = {|
					internal__.TID_BalanceSTM_t7,
					internal__.TID_BalanceSTM_t8,
					internal__.TID_BalanceSTM_t13,
					internal__.TID_BalanceSTM_t14,
					internal__.TID_BalanceSTM_t6,
					internal__.TID_BalanceSTM_t16,
					internal__.TID_BalanceSTM_t12,
					internal__.TID_BalanceSTM_t20,
					internal__.TID_BalanceSTM_t9,
					rotationOutputE__.TID_BalanceSTM_t15,
					internal__.TID_BalanceSTM_t17,
					speedOutputE__.TID_BalanceSTM_t11,
					internal__.TID_BalanceSTM_t19,
					internal__.TID_BalanceSTM_t18,
					angleOutputE__.TID_BalanceSTM_t5,
					internal__.TID_BalanceSTM_t10
				|}
				
				State_BalanceSTM_Setup(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = let
					T_BalanceSTM_t18(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = internal__!TID_BalanceSTM_t18 ->  exit.SID_BalanceSTM_Setup.SID_BalanceSTM_Setup -> SKIP;
										SKIP;exited.SID_BalanceSTM_Setup.SID_BalanceSTM_Setup -> SKIP;
										enter!SID_BalanceSTM_Setup!SID_BalanceSTM_ReceiveInput -> entered!SID_BalanceSTM_Setup!SID_BalanceSTM_ReceiveInput ->
										State_BalanceSTM_Setup(id__,
												    const_BalanceSTM_maxAngle,
												    const_BalanceSTM_loopTime,
												    const_BalanceSTM_startupDelay,
												    const_BalanceSTM_speedUpdate,
												    const_BalanceSTM_rotationUpdate,
												    const_BalanceSTM_motorBudget,
												    const_BalanceSTM_angleBudget,
												    const_BalanceSTM_speedBudget,
												    const_BalanceSTM_rotationBudget)
					State_BalanceSTM_Setup_execute(id__,o____) = true&CALL__enableInterrupts(
								id__
							);get_rotationCount?rotationCount -> true & (set_rotationCount!Plus(rotationCount, 1, core_nat) -> SKIP);get_speedCount?speedCount -> true & (set_speedCount!Plus(speedCount, 1, core_nat) -> SKIP);true & (set_angleReceived!false -> SKIP); 
						entered!o____!SID_BalanceSTM_Setup ->
						(SKIP; STOP /\ (
							T_BalanceSTM_t18(id__,
									    const_BalanceSTM_maxAngle,
									    const_BalanceSTM_loopTime,
									    const_BalanceSTM_startupDelay,
									    const_BalanceSTM_speedUpdate,
									    const_BalanceSTM_rotationUpdate,
									    const_BalanceSTM_motorBudget,
									    const_BalanceSTM_angleBudget,
									    const_BalanceSTM_speedBudget,
									    const_BalanceSTM_rotationBudget)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10}) -> exit?y____:diff(SIDS,{SID_BalanceSTM_Setup})!SID_BalanceSTM_Setup -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Setup -> SKIP);
									State_BalanceSTM_Setup(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] leftMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Setup})!SID_BalanceSTM_Setup -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Setup -> SKIP);
									State_BalanceSTM_Setup(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rightMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Setup})!SID_BalanceSTM_Setup -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Setup -> SKIP);
									State_BalanceSTM_Setup(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angle__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Setup})!SID_BalanceSTM_Setup -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Setup -> SKIP);
									State_BalanceSTM_Setup(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroX__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Setup})!SID_BalanceSTM_Setup -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Setup -> SKIP);
									State_BalanceSTM_Setup(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroY__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Setup})!SID_BalanceSTM_Setup -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Setup -> SKIP);
									State_BalanceSTM_Setup(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroZ__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Setup})!SID_BalanceSTM_Setup -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Setup -> SKIP);
									State_BalanceSTM_Setup(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angleOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Setup})!SID_BalanceSTM_Setup -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Setup -> SKIP);
									State_BalanceSTM_Setup(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] anewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Setup})!SID_BalanceSTM_Setup -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Setup -> SKIP);
									State_BalanceSTM_Setup(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] adiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Setup})!SID_BalanceSTM_Setup -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Setup -> SKIP);
									State_BalanceSTM_Setup(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] snewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Setup})!SID_BalanceSTM_Setup -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Setup -> SKIP);
									State_BalanceSTM_Setup(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] speedOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Setup})!SID_BalanceSTM_Setup -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Setup -> SKIP);
									State_BalanceSTM_Setup(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rdiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Setup})!SID_BalanceSTM_Setup -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Setup -> SKIP);
									State_BalanceSTM_Setup(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rotationOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_Setup})!SID_BalanceSTM_Setup -> (
									SKIP;
									exited!y____!SID_BalanceSTM_Setup -> SKIP);
									State_BalanceSTM_Setup(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
						))
				within
					enter?x____:diff(SIDS,{SID_BalanceSTM_Setup})!SID_BalanceSTM_Setup -> (State_BalanceSTM_Setup_execute(id__,x____))
				
				CS_BalanceSTM_ReceiveInput_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_BalanceSTM_Initialisation,SID_BalanceSTM_WaitForNextIteration,SID_BalanceSTM_Setup,SID_BalanceSTM_ReceiveInput,SID_BalanceSTM_SendSpeed,SID_BalanceSTM_SendAngle,SID_BalanceSTM_SendRotation,SID_BalanceSTM_SetMotors,SID_BalanceSTM_StopMotors},
					y____ <- {SID_BalanceSTM_ReceiveInput}
				|}
				
				
				BalanceSTM_ReceiveInput_triggers = {|
					internal__.TID_BalanceSTM_t7,
					internal__.TID_BalanceSTM_t8,
					internal__.TID_BalanceSTM_t13,
					internal__.TID_BalanceSTM_t14,
					internal__.TID_BalanceSTM_t6,
					internal__.TID_BalanceSTM_t16,
					internal__.TID_BalanceSTM_t12,
					internal__.TID_BalanceSTM_t20,
					internal__.TID_BalanceSTM_t9,
					rotationOutputE__.TID_BalanceSTM_t15,
					internal__.TID_BalanceSTM_t17,
					speedOutputE__.TID_BalanceSTM_t11,
					internal__.TID_BalanceSTM_t19,
					internal__.TID_BalanceSTM_t18,
					angleOutputE__.TID_BalanceSTM_t5,
					internal__.TID_BalanceSTM_t10
				|}
				
				State_BalanceSTM_ReceiveInput(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = let
					T_BalanceSTM_t6(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = internal__!TID_BalanceSTM_t6 ->  exit.SID_BalanceSTM_ReceiveInput.SID_BalanceSTM_ReceiveInput -> SKIP;
										SKIP;exited.SID_BalanceSTM_ReceiveInput.SID_BalanceSTM_ReceiveInput -> SKIP;
										J_BalanceSTM_j2(id__,
												    const_BalanceSTM_maxAngle,
												    const_BalanceSTM_loopTime,
												    const_BalanceSTM_startupDelay,
												    const_BalanceSTM_speedUpdate,
												    const_BalanceSTM_rotationUpdate,
												    const_BalanceSTM_motorBudget,
												    const_BalanceSTM_angleBudget,
												    const_BalanceSTM_speedBudget,
												    const_BalanceSTM_rotationBudget)
					T_BalanceSTM_t5(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = angleOutputE__!TID_BalanceSTM_t5.in?angleOutput -> set_angleOutput!angleOutput ->  (exit.SID_BalanceSTM_ReceiveInput.SID_BalanceSTM_ReceiveInput -> SKIP;
										SKIP;exited.SID_BalanceSTM_ReceiveInput.SID_BalanceSTM_ReceiveInput -> SKIP;
										true & (set_angleSent!false -> SKIP);true & (set_angleReceived!true -> SKIP);enter!SID_BalanceSTM_ReceiveInput!SID_BalanceSTM_ReceiveInput -> State_BalanceSTM_ReceiveInput_execute(id__,SID_BalanceSTM_ReceiveInput)
					)
					T_BalanceSTM_t8(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = internal__!TID_BalanceSTM_t8 ->  exit.SID_BalanceSTM_ReceiveInput.SID_BalanceSTM_ReceiveInput -> SKIP;
										SKIP;exited.SID_BalanceSTM_ReceiveInput.SID_BalanceSTM_ReceiveInput -> SKIP;
										enter!SID_BalanceSTM_ReceiveInput!SID_BalanceSTM_SendAngle -> entered!SID_BalanceSTM_ReceiveInput!SID_BalanceSTM_SendAngle ->
										State_BalanceSTM_ReceiveInput(id__,
												    const_BalanceSTM_maxAngle,
												    const_BalanceSTM_loopTime,
												    const_BalanceSTM_startupDelay,
												    const_BalanceSTM_speedUpdate,
												    const_BalanceSTM_rotationUpdate,
												    const_BalanceSTM_motorBudget,
												    const_BalanceSTM_angleBudget,
												    const_BalanceSTM_speedBudget,
												    const_BalanceSTM_rotationBudget)
					T_BalanceSTM_t11(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = speedOutputE__!TID_BalanceSTM_t11.in?speedOutput -> set_speedOutput!speedOutput ->  (exit.SID_BalanceSTM_ReceiveInput.SID_BalanceSTM_ReceiveInput -> SKIP;
										SKIP;exited.SID_BalanceSTM_ReceiveInput.SID_BalanceSTM_ReceiveInput -> SKIP;
										true & (set_speedSent!false -> SKIP);enter!SID_BalanceSTM_ReceiveInput!SID_BalanceSTM_ReceiveInput -> State_BalanceSTM_ReceiveInput_execute(id__,SID_BalanceSTM_ReceiveInput)
					)
					T_BalanceSTM_t13(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = internal__!TID_BalanceSTM_t13 ->  exit.SID_BalanceSTM_ReceiveInput.SID_BalanceSTM_ReceiveInput -> SKIP;
										SKIP;exited.SID_BalanceSTM_ReceiveInput.SID_BalanceSTM_ReceiveInput -> SKIP;
										enter!SID_BalanceSTM_ReceiveInput!SID_BalanceSTM_SendSpeed -> entered!SID_BalanceSTM_ReceiveInput!SID_BalanceSTM_SendSpeed ->
										State_BalanceSTM_ReceiveInput(id__,
												    const_BalanceSTM_maxAngle,
												    const_BalanceSTM_loopTime,
												    const_BalanceSTM_startupDelay,
												    const_BalanceSTM_speedUpdate,
												    const_BalanceSTM_rotationUpdate,
												    const_BalanceSTM_motorBudget,
												    const_BalanceSTM_angleBudget,
												    const_BalanceSTM_speedBudget,
												    const_BalanceSTM_rotationBudget)
					T_BalanceSTM_t15(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = rotationOutputE__!TID_BalanceSTM_t15.in?rotationOutput -> set_rotationOutput!rotationOutput ->  (exit.SID_BalanceSTM_ReceiveInput.SID_BalanceSTM_ReceiveInput -> SKIP;
										SKIP;exited.SID_BalanceSTM_ReceiveInput.SID_BalanceSTM_ReceiveInput -> SKIP;
										true & (set_rotationSent!false -> SKIP);enter!SID_BalanceSTM_ReceiveInput!SID_BalanceSTM_ReceiveInput -> State_BalanceSTM_ReceiveInput_execute(id__,SID_BalanceSTM_ReceiveInput)
					)
					T_BalanceSTM_t16(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = internal__!TID_BalanceSTM_t16 ->  exit.SID_BalanceSTM_ReceiveInput.SID_BalanceSTM_ReceiveInput -> SKIP;
										SKIP;exited.SID_BalanceSTM_ReceiveInput.SID_BalanceSTM_ReceiveInput -> SKIP;
										enter!SID_BalanceSTM_ReceiveInput!SID_BalanceSTM_SendRotation -> entered!SID_BalanceSTM_ReceiveInput!SID_BalanceSTM_SendRotation ->
										State_BalanceSTM_ReceiveInput(id__,
												    const_BalanceSTM_maxAngle,
												    const_BalanceSTM_loopTime,
												    const_BalanceSTM_startupDelay,
												    const_BalanceSTM_speedUpdate,
												    const_BalanceSTM_rotationUpdate,
												    const_BalanceSTM_motorBudget,
												    const_BalanceSTM_angleBudget,
												    const_BalanceSTM_speedBudget,
												    const_BalanceSTM_rotationBudget)
					J_BalanceSTM_j2(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = (
								(internal__!TID_BalanceSTM_t9 -> enter!SID_BalanceSTM_ReceiveInput!SID_BalanceSTM_SetMotors -> entered!SID_BalanceSTM_ReceiveInput!SID_BalanceSTM_SetMotors ->
								State_BalanceSTM_ReceiveInput(id__,
										    const_BalanceSTM_maxAngle,
										    const_BalanceSTM_loopTime,
										    const_BalanceSTM_startupDelay,
										    const_BalanceSTM_speedUpdate,
										    const_BalanceSTM_rotationUpdate,
										    const_BalanceSTM_motorBudget,
										    const_BalanceSTM_angleBudget,
										    const_BalanceSTM_speedBudget,
										    const_BalanceSTM_rotationBudget)
								)[]
								(internal__!TID_BalanceSTM_t10 -> enter!SID_BalanceSTM_ReceiveInput!SID_BalanceSTM_StopMotors -> entered!SID_BalanceSTM_ReceiveInput!SID_BalanceSTM_StopMotors ->
								State_BalanceSTM_ReceiveInput(id__,
										    const_BalanceSTM_maxAngle,
										    const_BalanceSTM_loopTime,
										    const_BalanceSTM_startupDelay,
										    const_BalanceSTM_speedUpdate,
										    const_BalanceSTM_rotationUpdate,
										    const_BalanceSTM_motorBudget,
										    const_BalanceSTM_angleBudget,
										    const_BalanceSTM_speedBudget,
										    const_BalanceSTM_rotationBudget)
								)
								)
					State_BalanceSTM_ReceiveInput_execute(id__,o____) = SKIP; 
						entered!o____!SID_BalanceSTM_ReceiveInput ->
						(SKIP; STOP /\ (
							T_BalanceSTM_t6(id__,
									    const_BalanceSTM_maxAngle,
									    const_BalanceSTM_loopTime,
									    const_BalanceSTM_startupDelay,
									    const_BalanceSTM_speedUpdate,
									    const_BalanceSTM_rotationUpdate,
									    const_BalanceSTM_motorBudget,
									    const_BalanceSTM_angleBudget,
									    const_BalanceSTM_speedBudget,
									    const_BalanceSTM_rotationBudget)[]
							T_BalanceSTM_t5(id__,
									    const_BalanceSTM_maxAngle,
									    const_BalanceSTM_loopTime,
									    const_BalanceSTM_startupDelay,
									    const_BalanceSTM_speedUpdate,
									    const_BalanceSTM_rotationUpdate,
									    const_BalanceSTM_motorBudget,
									    const_BalanceSTM_angleBudget,
									    const_BalanceSTM_speedBudget,
									    const_BalanceSTM_rotationBudget)[]
							T_BalanceSTM_t8(id__,
									    const_BalanceSTM_maxAngle,
									    const_BalanceSTM_loopTime,
									    const_BalanceSTM_startupDelay,
									    const_BalanceSTM_speedUpdate,
									    const_BalanceSTM_rotationUpdate,
									    const_BalanceSTM_motorBudget,
									    const_BalanceSTM_angleBudget,
									    const_BalanceSTM_speedBudget,
									    const_BalanceSTM_rotationBudget)[]
							T_BalanceSTM_t11(id__,
									    const_BalanceSTM_maxAngle,
									    const_BalanceSTM_loopTime,
									    const_BalanceSTM_startupDelay,
									    const_BalanceSTM_speedUpdate,
									    const_BalanceSTM_rotationUpdate,
									    const_BalanceSTM_motorBudget,
									    const_BalanceSTM_angleBudget,
									    const_BalanceSTM_speedBudget,
									    const_BalanceSTM_rotationBudget)[]
							T_BalanceSTM_t13(id__,
									    const_BalanceSTM_maxAngle,
									    const_BalanceSTM_loopTime,
									    const_BalanceSTM_startupDelay,
									    const_BalanceSTM_speedUpdate,
									    const_BalanceSTM_rotationUpdate,
									    const_BalanceSTM_motorBudget,
									    const_BalanceSTM_angleBudget,
									    const_BalanceSTM_speedBudget,
									    const_BalanceSTM_rotationBudget)[]
							T_BalanceSTM_t15(id__,
									    const_BalanceSTM_maxAngle,
									    const_BalanceSTM_loopTime,
									    const_BalanceSTM_startupDelay,
									    const_BalanceSTM_speedUpdate,
									    const_BalanceSTM_rotationUpdate,
									    const_BalanceSTM_motorBudget,
									    const_BalanceSTM_angleBudget,
									    const_BalanceSTM_speedBudget,
									    const_BalanceSTM_rotationBudget)[]
							T_BalanceSTM_t16(id__,
									    const_BalanceSTM_maxAngle,
									    const_BalanceSTM_loopTime,
									    const_BalanceSTM_startupDelay,
									    const_BalanceSTM_speedUpdate,
									    const_BalanceSTM_rotationUpdate,
									    const_BalanceSTM_motorBudget,
									    const_BalanceSTM_angleBudget,
									    const_BalanceSTM_speedBudget,
									    const_BalanceSTM_rotationBudget)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10}) -> exit?y____:diff(SIDS,{SID_BalanceSTM_ReceiveInput})!SID_BalanceSTM_ReceiveInput -> (
									SKIP;
									exited!y____!SID_BalanceSTM_ReceiveInput -> SKIP);
									State_BalanceSTM_ReceiveInput(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] leftMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_ReceiveInput})!SID_BalanceSTM_ReceiveInput -> (
									SKIP;
									exited!y____!SID_BalanceSTM_ReceiveInput -> SKIP);
									State_BalanceSTM_ReceiveInput(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rightMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_ReceiveInput})!SID_BalanceSTM_ReceiveInput -> (
									SKIP;
									exited!y____!SID_BalanceSTM_ReceiveInput -> SKIP);
									State_BalanceSTM_ReceiveInput(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angle__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_ReceiveInput})!SID_BalanceSTM_ReceiveInput -> (
									SKIP;
									exited!y____!SID_BalanceSTM_ReceiveInput -> SKIP);
									State_BalanceSTM_ReceiveInput(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroX__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_ReceiveInput})!SID_BalanceSTM_ReceiveInput -> (
									SKIP;
									exited!y____!SID_BalanceSTM_ReceiveInput -> SKIP);
									State_BalanceSTM_ReceiveInput(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroY__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_ReceiveInput})!SID_BalanceSTM_ReceiveInput -> (
									SKIP;
									exited!y____!SID_BalanceSTM_ReceiveInput -> SKIP);
									State_BalanceSTM_ReceiveInput(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroZ__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_ReceiveInput})!SID_BalanceSTM_ReceiveInput -> (
									SKIP;
									exited!y____!SID_BalanceSTM_ReceiveInput -> SKIP);
									State_BalanceSTM_ReceiveInput(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angleOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_ReceiveInput})!SID_BalanceSTM_ReceiveInput -> (
									SKIP;
									exited!y____!SID_BalanceSTM_ReceiveInput -> SKIP);
									State_BalanceSTM_ReceiveInput(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] anewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_ReceiveInput})!SID_BalanceSTM_ReceiveInput -> (
									SKIP;
									exited!y____!SID_BalanceSTM_ReceiveInput -> SKIP);
									State_BalanceSTM_ReceiveInput(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] adiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_ReceiveInput})!SID_BalanceSTM_ReceiveInput -> (
									SKIP;
									exited!y____!SID_BalanceSTM_ReceiveInput -> SKIP);
									State_BalanceSTM_ReceiveInput(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] snewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_ReceiveInput})!SID_BalanceSTM_ReceiveInput -> (
									SKIP;
									exited!y____!SID_BalanceSTM_ReceiveInput -> SKIP);
									State_BalanceSTM_ReceiveInput(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] speedOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_ReceiveInput})!SID_BalanceSTM_ReceiveInput -> (
									SKIP;
									exited!y____!SID_BalanceSTM_ReceiveInput -> SKIP);
									State_BalanceSTM_ReceiveInput(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rdiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_ReceiveInput})!SID_BalanceSTM_ReceiveInput -> (
									SKIP;
									exited!y____!SID_BalanceSTM_ReceiveInput -> SKIP);
									State_BalanceSTM_ReceiveInput(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rotationOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_ReceiveInput})!SID_BalanceSTM_ReceiveInput -> (
									SKIP;
									exited!y____!SID_BalanceSTM_ReceiveInput -> SKIP);
									State_BalanceSTM_ReceiveInput(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
						))
				within
					enter?x____:diff(SIDS,{SID_BalanceSTM_ReceiveInput})!SID_BalanceSTM_ReceiveInput -> (State_BalanceSTM_ReceiveInput_execute(id__,x____))
				
				CS_BalanceSTM_SendSpeed_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_BalanceSTM_Initialisation,SID_BalanceSTM_WaitForNextIteration,SID_BalanceSTM_Setup,SID_BalanceSTM_ReceiveInput,SID_BalanceSTM_SendSpeed,SID_BalanceSTM_SendAngle,SID_BalanceSTM_SendRotation,SID_BalanceSTM_SetMotors,SID_BalanceSTM_StopMotors},
					y____ <- {SID_BalanceSTM_SendSpeed}
				|}
				
				
				BalanceSTM_SendSpeed_triggers = {|
					internal__.TID_BalanceSTM_t7,
					internal__.TID_BalanceSTM_t8,
					internal__.TID_BalanceSTM_t13,
					internal__.TID_BalanceSTM_t14,
					internal__.TID_BalanceSTM_t6,
					internal__.TID_BalanceSTM_t16,
					internal__.TID_BalanceSTM_t12,
					internal__.TID_BalanceSTM_t20,
					internal__.TID_BalanceSTM_t9,
					rotationOutputE__.TID_BalanceSTM_t15,
					internal__.TID_BalanceSTM_t17,
					speedOutputE__.TID_BalanceSTM_t11,
					internal__.TID_BalanceSTM_t19,
					internal__.TID_BalanceSTM_t18,
					angleOutputE__.TID_BalanceSTM_t5,
					internal__.TID_BalanceSTM_t10
				|}
				
				State_BalanceSTM_SendSpeed(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = let
					T_BalanceSTM_t14(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = internal__!TID_BalanceSTM_t14 ->  exit.SID_BalanceSTM_SendSpeed.SID_BalanceSTM_SendSpeed -> SKIP;
										SKIP;exited.SID_BalanceSTM_SendSpeed.SID_BalanceSTM_SendSpeed -> SKIP;
										true & (set_speedSent!true -> SKIP);enter!SID_BalanceSTM_SendSpeed!SID_BalanceSTM_ReceiveInput -> entered!SID_BalanceSTM_SendSpeed!SID_BalanceSTM_ReceiveInput ->
										State_BalanceSTM_SendSpeed(id__,
												    const_BalanceSTM_maxAngle,
												    const_BalanceSTM_loopTime,
												    const_BalanceSTM_startupDelay,
												    const_BalanceSTM_speedUpdate,
												    const_BalanceSTM_rotationUpdate,
												    const_BalanceSTM_motorBudget,
												    const_BalanceSTM_angleBudget,
												    const_BalanceSTM_speedBudget,
												    const_BalanceSTM_rotationBudget)
					State_BalanceSTM_SendSpeed_execute(id__,o____) = true&(leftMotorVelocity.in?currLeftVel -> set_currLeftVel!currLeftVel -> SKIP);true&(rightMotorVelocity.in?currRightVel -> set_currRightVel!currRightVel -> SKIP);get_currLeftVel?currLeftVel -> get_currRightVel?currRightVel -> true&(snewError.out!(Plus(currLeftVel, currRightVel, core_real)) -> SKIP);true & (set_speedCount!0 -> SKIP);SKIP; 
						entered!o____!SID_BalanceSTM_SendSpeed ->
						(SKIP; STOP /\ (
							T_BalanceSTM_t14(id__,
									    const_BalanceSTM_maxAngle,
									    const_BalanceSTM_loopTime,
									    const_BalanceSTM_startupDelay,
									    const_BalanceSTM_speedUpdate,
									    const_BalanceSTM_rotationUpdate,
									    const_BalanceSTM_motorBudget,
									    const_BalanceSTM_angleBudget,
									    const_BalanceSTM_speedBudget,
									    const_BalanceSTM_rotationBudget)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10}) -> exit?y____:diff(SIDS,{SID_BalanceSTM_SendSpeed})!SID_BalanceSTM_SendSpeed -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendSpeed -> SKIP);
									State_BalanceSTM_SendSpeed(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] leftMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendSpeed})!SID_BalanceSTM_SendSpeed -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendSpeed -> SKIP);
									State_BalanceSTM_SendSpeed(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rightMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendSpeed})!SID_BalanceSTM_SendSpeed -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendSpeed -> SKIP);
									State_BalanceSTM_SendSpeed(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angle__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendSpeed})!SID_BalanceSTM_SendSpeed -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendSpeed -> SKIP);
									State_BalanceSTM_SendSpeed(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroX__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendSpeed})!SID_BalanceSTM_SendSpeed -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendSpeed -> SKIP);
									State_BalanceSTM_SendSpeed(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroY__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendSpeed})!SID_BalanceSTM_SendSpeed -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendSpeed -> SKIP);
									State_BalanceSTM_SendSpeed(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroZ__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendSpeed})!SID_BalanceSTM_SendSpeed -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendSpeed -> SKIP);
									State_BalanceSTM_SendSpeed(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angleOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendSpeed})!SID_BalanceSTM_SendSpeed -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendSpeed -> SKIP);
									State_BalanceSTM_SendSpeed(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] anewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendSpeed})!SID_BalanceSTM_SendSpeed -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendSpeed -> SKIP);
									State_BalanceSTM_SendSpeed(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] adiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendSpeed})!SID_BalanceSTM_SendSpeed -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendSpeed -> SKIP);
									State_BalanceSTM_SendSpeed(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] snewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendSpeed})!SID_BalanceSTM_SendSpeed -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendSpeed -> SKIP);
									State_BalanceSTM_SendSpeed(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] speedOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendSpeed})!SID_BalanceSTM_SendSpeed -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendSpeed -> SKIP);
									State_BalanceSTM_SendSpeed(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rdiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendSpeed})!SID_BalanceSTM_SendSpeed -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendSpeed -> SKIP);
									State_BalanceSTM_SendSpeed(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rotationOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendSpeed})!SID_BalanceSTM_SendSpeed -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendSpeed -> SKIP);
									State_BalanceSTM_SendSpeed(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
						))
				within
					enter?x____:diff(SIDS,{SID_BalanceSTM_SendSpeed})!SID_BalanceSTM_SendSpeed -> (State_BalanceSTM_SendSpeed_execute(id__,x____))
				
				CS_BalanceSTM_SendAngle_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_BalanceSTM_Initialisation,SID_BalanceSTM_WaitForNextIteration,SID_BalanceSTM_Setup,SID_BalanceSTM_ReceiveInput,SID_BalanceSTM_SendSpeed,SID_BalanceSTM_SendAngle,SID_BalanceSTM_SendRotation,SID_BalanceSTM_SetMotors,SID_BalanceSTM_StopMotors},
					y____ <- {SID_BalanceSTM_SendAngle}
				|}
				
				
				BalanceSTM_SendAngle_triggers = {|
					internal__.TID_BalanceSTM_t7,
					internal__.TID_BalanceSTM_t8,
					internal__.TID_BalanceSTM_t13,
					internal__.TID_BalanceSTM_t14,
					internal__.TID_BalanceSTM_t6,
					internal__.TID_BalanceSTM_t16,
					internal__.TID_BalanceSTM_t12,
					internal__.TID_BalanceSTM_t20,
					internal__.TID_BalanceSTM_t9,
					rotationOutputE__.TID_BalanceSTM_t15,
					internal__.TID_BalanceSTM_t17,
					speedOutputE__.TID_BalanceSTM_t11,
					internal__.TID_BalanceSTM_t19,
					internal__.TID_BalanceSTM_t18,
					angleOutputE__.TID_BalanceSTM_t5,
					internal__.TID_BalanceSTM_t10
				|}
				
				State_BalanceSTM_SendAngle(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = let
					T_BalanceSTM_t7(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = internal__!TID_BalanceSTM_t7 ->  exit.SID_BalanceSTM_SendAngle.SID_BalanceSTM_SendAngle -> SKIP;
										SKIP;exited.SID_BalanceSTM_SendAngle.SID_BalanceSTM_SendAngle -> SKIP;
										true & (set_angleSent!true -> SKIP);enter!SID_BalanceSTM_SendAngle!SID_BalanceSTM_ReceiveInput -> entered!SID_BalanceSTM_SendAngle!SID_BalanceSTM_ReceiveInput ->
										State_BalanceSTM_SendAngle(id__,
												    const_BalanceSTM_maxAngle,
												    const_BalanceSTM_loopTime,
												    const_BalanceSTM_startupDelay,
												    const_BalanceSTM_speedUpdate,
												    const_BalanceSTM_rotationUpdate,
												    const_BalanceSTM_motorBudget,
												    const_BalanceSTM_angleBudget,
												    const_BalanceSTM_speedBudget,
												    const_BalanceSTM_rotationBudget)
					State_BalanceSTM_SendAngle_execute(id__,o____) = true&(angle.in?currAngle -> set_currAngle!currAngle -> SKIP);true&(gyroX.in?currGyroX -> set_currGyroX!currGyroX -> SKIP);get_currAngle?currAngle -> true&(anewError.out!currAngle -> SKIP);get_currGyroX?currGyroX -> true&(adiff.out!currGyroX -> SKIP);SKIP; 
						entered!o____!SID_BalanceSTM_SendAngle ->
						(SKIP; STOP /\ (
							T_BalanceSTM_t7(id__,
									    const_BalanceSTM_maxAngle,
									    const_BalanceSTM_loopTime,
									    const_BalanceSTM_startupDelay,
									    const_BalanceSTM_speedUpdate,
									    const_BalanceSTM_rotationUpdate,
									    const_BalanceSTM_motorBudget,
									    const_BalanceSTM_angleBudget,
									    const_BalanceSTM_speedBudget,
									    const_BalanceSTM_rotationBudget)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10}) -> exit?y____:diff(SIDS,{SID_BalanceSTM_SendAngle})!SID_BalanceSTM_SendAngle -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendAngle -> SKIP);
									State_BalanceSTM_SendAngle(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] leftMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendAngle})!SID_BalanceSTM_SendAngle -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendAngle -> SKIP);
									State_BalanceSTM_SendAngle(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rightMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendAngle})!SID_BalanceSTM_SendAngle -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendAngle -> SKIP);
									State_BalanceSTM_SendAngle(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angle__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendAngle})!SID_BalanceSTM_SendAngle -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendAngle -> SKIP);
									State_BalanceSTM_SendAngle(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroX__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendAngle})!SID_BalanceSTM_SendAngle -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendAngle -> SKIP);
									State_BalanceSTM_SendAngle(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroY__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendAngle})!SID_BalanceSTM_SendAngle -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendAngle -> SKIP);
									State_BalanceSTM_SendAngle(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroZ__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendAngle})!SID_BalanceSTM_SendAngle -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendAngle -> SKIP);
									State_BalanceSTM_SendAngle(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angleOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendAngle})!SID_BalanceSTM_SendAngle -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendAngle -> SKIP);
									State_BalanceSTM_SendAngle(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] anewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendAngle})!SID_BalanceSTM_SendAngle -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendAngle -> SKIP);
									State_BalanceSTM_SendAngle(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] adiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendAngle})!SID_BalanceSTM_SendAngle -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendAngle -> SKIP);
									State_BalanceSTM_SendAngle(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] snewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendAngle})!SID_BalanceSTM_SendAngle -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendAngle -> SKIP);
									State_BalanceSTM_SendAngle(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] speedOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendAngle})!SID_BalanceSTM_SendAngle -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendAngle -> SKIP);
									State_BalanceSTM_SendAngle(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rdiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendAngle})!SID_BalanceSTM_SendAngle -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendAngle -> SKIP);
									State_BalanceSTM_SendAngle(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rotationOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendAngle})!SID_BalanceSTM_SendAngle -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendAngle -> SKIP);
									State_BalanceSTM_SendAngle(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
						))
				within
					enter?x____:diff(SIDS,{SID_BalanceSTM_SendAngle})!SID_BalanceSTM_SendAngle -> (State_BalanceSTM_SendAngle_execute(id__,x____))
				
				CS_BalanceSTM_SendRotation_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_BalanceSTM_Initialisation,SID_BalanceSTM_WaitForNextIteration,SID_BalanceSTM_Setup,SID_BalanceSTM_ReceiveInput,SID_BalanceSTM_SendSpeed,SID_BalanceSTM_SendAngle,SID_BalanceSTM_SendRotation,SID_BalanceSTM_SetMotors,SID_BalanceSTM_StopMotors},
					y____ <- {SID_BalanceSTM_SendRotation}
				|}
				
				
				BalanceSTM_SendRotation_triggers = {|
					internal__.TID_BalanceSTM_t7,
					internal__.TID_BalanceSTM_t8,
					internal__.TID_BalanceSTM_t13,
					internal__.TID_BalanceSTM_t14,
					internal__.TID_BalanceSTM_t6,
					internal__.TID_BalanceSTM_t16,
					internal__.TID_BalanceSTM_t12,
					internal__.TID_BalanceSTM_t20,
					internal__.TID_BalanceSTM_t9,
					internal__.TID_BalanceSTM_t17,
					rotationOutputE__.TID_BalanceSTM_t15,
					speedOutputE__.TID_BalanceSTM_t11,
					internal__.TID_BalanceSTM_t19,
					internal__.TID_BalanceSTM_t18,
					angleOutputE__.TID_BalanceSTM_t5,
					internal__.TID_BalanceSTM_t10
				|}
				
				State_BalanceSTM_SendRotation(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = let
					T_BalanceSTM_t17(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = internal__!TID_BalanceSTM_t17 ->  exit.SID_BalanceSTM_SendRotation.SID_BalanceSTM_SendRotation -> SKIP;
										SKIP;exited.SID_BalanceSTM_SendRotation.SID_BalanceSTM_SendRotation -> SKIP;
										true & (set_rotationSent!true -> SKIP);enter!SID_BalanceSTM_SendRotation!SID_BalanceSTM_ReceiveInput -> entered!SID_BalanceSTM_SendRotation!SID_BalanceSTM_ReceiveInput ->
										State_BalanceSTM_SendRotation(id__,
												    const_BalanceSTM_maxAngle,
												    const_BalanceSTM_loopTime,
												    const_BalanceSTM_startupDelay,
												    const_BalanceSTM_speedUpdate,
												    const_BalanceSTM_rotationUpdate,
												    const_BalanceSTM_motorBudget,
												    const_BalanceSTM_angleBudget,
												    const_BalanceSTM_speedBudget,
												    const_BalanceSTM_rotationBudget)
					State_BalanceSTM_SendRotation_execute(id__,o____) = true&(gyroZ.in?currGyroZ -> set_currGyroZ!currGyroZ -> SKIP);get_currGyroZ?currGyroZ -> true&(rdiff.out!currGyroZ -> SKIP);true & (set_rotationCount!0 -> SKIP);SKIP; 
						entered!o____!SID_BalanceSTM_SendRotation ->
						(SKIP; STOP /\ (
							T_BalanceSTM_t17(id__,
									    const_BalanceSTM_maxAngle,
									    const_BalanceSTM_loopTime,
									    const_BalanceSTM_startupDelay,
									    const_BalanceSTM_speedUpdate,
									    const_BalanceSTM_rotationUpdate,
									    const_BalanceSTM_motorBudget,
									    const_BalanceSTM_angleBudget,
									    const_BalanceSTM_speedBudget,
									    const_BalanceSTM_rotationBudget)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t17,TID_BalanceSTM_t15,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10}) -> exit?y____:diff(SIDS,{SID_BalanceSTM_SendRotation})!SID_BalanceSTM_SendRotation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendRotation -> SKIP);
									State_BalanceSTM_SendRotation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] leftMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t17,TID_BalanceSTM_t15,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendRotation})!SID_BalanceSTM_SendRotation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendRotation -> SKIP);
									State_BalanceSTM_SendRotation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rightMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t17,TID_BalanceSTM_t15,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendRotation})!SID_BalanceSTM_SendRotation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendRotation -> SKIP);
									State_BalanceSTM_SendRotation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angle__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t17,TID_BalanceSTM_t15,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendRotation})!SID_BalanceSTM_SendRotation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendRotation -> SKIP);
									State_BalanceSTM_SendRotation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroX__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t17,TID_BalanceSTM_t15,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendRotation})!SID_BalanceSTM_SendRotation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendRotation -> SKIP);
									State_BalanceSTM_SendRotation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroY__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t17,TID_BalanceSTM_t15,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendRotation})!SID_BalanceSTM_SendRotation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendRotation -> SKIP);
									State_BalanceSTM_SendRotation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroZ__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t17,TID_BalanceSTM_t15,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendRotation})!SID_BalanceSTM_SendRotation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendRotation -> SKIP);
									State_BalanceSTM_SendRotation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angleOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t17,TID_BalanceSTM_t15,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendRotation})!SID_BalanceSTM_SendRotation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendRotation -> SKIP);
									State_BalanceSTM_SendRotation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] anewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t17,TID_BalanceSTM_t15,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendRotation})!SID_BalanceSTM_SendRotation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendRotation -> SKIP);
									State_BalanceSTM_SendRotation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] adiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t17,TID_BalanceSTM_t15,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendRotation})!SID_BalanceSTM_SendRotation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendRotation -> SKIP);
									State_BalanceSTM_SendRotation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] snewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t17,TID_BalanceSTM_t15,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendRotation})!SID_BalanceSTM_SendRotation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendRotation -> SKIP);
									State_BalanceSTM_SendRotation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] speedOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t17,TID_BalanceSTM_t15,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendRotation})!SID_BalanceSTM_SendRotation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendRotation -> SKIP);
									State_BalanceSTM_SendRotation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rdiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t17,TID_BalanceSTM_t15,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendRotation})!SID_BalanceSTM_SendRotation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendRotation -> SKIP);
									State_BalanceSTM_SendRotation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rotationOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t17,TID_BalanceSTM_t15,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SendRotation})!SID_BalanceSTM_SendRotation -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SendRotation -> SKIP);
									State_BalanceSTM_SendRotation(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
						))
				within
					enter?x____:diff(SIDS,{SID_BalanceSTM_SendRotation})!SID_BalanceSTM_SendRotation -> (State_BalanceSTM_SendRotation_execute(id__,x____))
				
				CS_BalanceSTM_SetMotors_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_BalanceSTM_Initialisation,SID_BalanceSTM_WaitForNextIteration,SID_BalanceSTM_Setup,SID_BalanceSTM_ReceiveInput,SID_BalanceSTM_SendSpeed,SID_BalanceSTM_SendAngle,SID_BalanceSTM_SendRotation,SID_BalanceSTM_SetMotors,SID_BalanceSTM_StopMotors},
					y____ <- {SID_BalanceSTM_SetMotors}
				|}
				
				
				BalanceSTM_SetMotors_triggers = {|
					internal__.TID_BalanceSTM_t7,
					internal__.TID_BalanceSTM_t8,
					internal__.TID_BalanceSTM_t13,
					internal__.TID_BalanceSTM_t14,
					internal__.TID_BalanceSTM_t6,
					internal__.TID_BalanceSTM_t16,
					internal__.TID_BalanceSTM_t12,
					internal__.TID_BalanceSTM_t20,
					internal__.TID_BalanceSTM_t9,
					rotationOutputE__.TID_BalanceSTM_t15,
					internal__.TID_BalanceSTM_t17,
					internal__.TID_BalanceSTM_t19,
					speedOutputE__.TID_BalanceSTM_t11,
					internal__.TID_BalanceSTM_t18,
					angleOutputE__.TID_BalanceSTM_t5,
					internal__.TID_BalanceSTM_t10
				|}
				
				State_BalanceSTM_SetMotors(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = let
					T_BalanceSTM_t19(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = internal__!TID_BalanceSTM_t19 ->  exit.SID_BalanceSTM_SetMotors.SID_BalanceSTM_SetMotors -> SKIP;
										SKIP;exited.SID_BalanceSTM_SetMotors.SID_BalanceSTM_SetMotors -> SKIP;
										enter!SID_BalanceSTM_SetMotors!SID_BalanceSTM_WaitForNextIteration -> entered!SID_BalanceSTM_SetMotors!SID_BalanceSTM_WaitForNextIteration ->
										State_BalanceSTM_SetMotors(id__,
												    const_BalanceSTM_maxAngle,
												    const_BalanceSTM_loopTime,
												    const_BalanceSTM_startupDelay,
												    const_BalanceSTM_speedUpdate,
												    const_BalanceSTM_rotationUpdate,
												    const_BalanceSTM_motorBudget,
												    const_BalanceSTM_angleBudget,
												    const_BalanceSTM_speedBudget,
												    const_BalanceSTM_rotationBudget)
					State_BalanceSTM_SetMotors_execute(id__,o____) = get_angleOutput?angleOutput -> get_speedOutput?speedOutput -> get_rotationOutput?rotationOutput -> true&CALL__setLeftMotorSpeed(
								id__,
								Minus(Plus(angleOutput, speedOutput, core_real), rotationOutput, core_real)
							);get_angleOutput?angleOutput -> get_speedOutput?speedOutput -> get_rotationOutput?rotationOutput -> true&CALL__setRightMotorSpeed(
								id__,
								Plus(Plus(angleOutput, speedOutput, core_real), rotationOutput, core_real)
							);SKIP; 
						entered!o____!SID_BalanceSTM_SetMotors ->
						(SKIP; STOP /\ (
							T_BalanceSTM_t19(id__,
									    const_BalanceSTM_maxAngle,
									    const_BalanceSTM_loopTime,
									    const_BalanceSTM_startupDelay,
									    const_BalanceSTM_speedUpdate,
									    const_BalanceSTM_rotationUpdate,
									    const_BalanceSTM_motorBudget,
									    const_BalanceSTM_angleBudget,
									    const_BalanceSTM_speedBudget,
									    const_BalanceSTM_rotationBudget)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t19,TID_BalanceSTM_t11,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10}) -> exit?y____:diff(SIDS,{SID_BalanceSTM_SetMotors})!SID_BalanceSTM_SetMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SetMotors -> SKIP);
									State_BalanceSTM_SetMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] leftMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t19,TID_BalanceSTM_t11,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SetMotors})!SID_BalanceSTM_SetMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SetMotors -> SKIP);
									State_BalanceSTM_SetMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rightMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t19,TID_BalanceSTM_t11,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SetMotors})!SID_BalanceSTM_SetMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SetMotors -> SKIP);
									State_BalanceSTM_SetMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angle__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t19,TID_BalanceSTM_t11,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SetMotors})!SID_BalanceSTM_SetMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SetMotors -> SKIP);
									State_BalanceSTM_SetMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroX__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t19,TID_BalanceSTM_t11,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SetMotors})!SID_BalanceSTM_SetMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SetMotors -> SKIP);
									State_BalanceSTM_SetMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroY__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t19,TID_BalanceSTM_t11,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SetMotors})!SID_BalanceSTM_SetMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SetMotors -> SKIP);
									State_BalanceSTM_SetMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroZ__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t19,TID_BalanceSTM_t11,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SetMotors})!SID_BalanceSTM_SetMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SetMotors -> SKIP);
									State_BalanceSTM_SetMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angleOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t19,TID_BalanceSTM_t11,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SetMotors})!SID_BalanceSTM_SetMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SetMotors -> SKIP);
									State_BalanceSTM_SetMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] anewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t19,TID_BalanceSTM_t11,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SetMotors})!SID_BalanceSTM_SetMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SetMotors -> SKIP);
									State_BalanceSTM_SetMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] adiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t19,TID_BalanceSTM_t11,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SetMotors})!SID_BalanceSTM_SetMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SetMotors -> SKIP);
									State_BalanceSTM_SetMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] snewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t19,TID_BalanceSTM_t11,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SetMotors})!SID_BalanceSTM_SetMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SetMotors -> SKIP);
									State_BalanceSTM_SetMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] speedOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t19,TID_BalanceSTM_t11,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SetMotors})!SID_BalanceSTM_SetMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SetMotors -> SKIP);
									State_BalanceSTM_SetMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rdiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t19,TID_BalanceSTM_t11,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SetMotors})!SID_BalanceSTM_SetMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SetMotors -> SKIP);
									State_BalanceSTM_SetMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rotationOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t19,TID_BalanceSTM_t11,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_SetMotors})!SID_BalanceSTM_SetMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_SetMotors -> SKIP);
									State_BalanceSTM_SetMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
						))
				within
					enter?x____:diff(SIDS,{SID_BalanceSTM_SetMotors})!SID_BalanceSTM_SetMotors -> (State_BalanceSTM_SetMotors_execute(id__,x____))
				
				CS_BalanceSTM_StopMotors_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_BalanceSTM_Initialisation,SID_BalanceSTM_WaitForNextIteration,SID_BalanceSTM_Setup,SID_BalanceSTM_ReceiveInput,SID_BalanceSTM_SendSpeed,SID_BalanceSTM_SendAngle,SID_BalanceSTM_SendRotation,SID_BalanceSTM_SetMotors,SID_BalanceSTM_StopMotors},
					y____ <- {SID_BalanceSTM_StopMotors}
				|}
				
				
				BalanceSTM_StopMotors_triggers = {|
					internal__.TID_BalanceSTM_t7,
					internal__.TID_BalanceSTM_t8,
					internal__.TID_BalanceSTM_t13,
					internal__.TID_BalanceSTM_t14,
					internal__.TID_BalanceSTM_t6,
					internal__.TID_BalanceSTM_t16,
					internal__.TID_BalanceSTM_t12,
					internal__.TID_BalanceSTM_t20,
					internal__.TID_BalanceSTM_t9,
					rotationOutputE__.TID_BalanceSTM_t15,
					internal__.TID_BalanceSTM_t17,
					speedOutputE__.TID_BalanceSTM_t11,
					internal__.TID_BalanceSTM_t19,
					internal__.TID_BalanceSTM_t18,
					angleOutputE__.TID_BalanceSTM_t5,
					internal__.TID_BalanceSTM_t10
				|}
				
				State_BalanceSTM_StopMotors(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = let
					T_BalanceSTM_t20(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = internal__!TID_BalanceSTM_t20 ->  exit.SID_BalanceSTM_StopMotors.SID_BalanceSTM_StopMotors -> SKIP;
										SKIP;exited.SID_BalanceSTM_StopMotors.SID_BalanceSTM_StopMotors -> SKIP;
										enter!SID_BalanceSTM_StopMotors!SID_BalanceSTM_WaitForNextIteration -> entered!SID_BalanceSTM_StopMotors!SID_BalanceSTM_WaitForNextIteration ->
										State_BalanceSTM_StopMotors(id__,
												    const_BalanceSTM_maxAngle,
												    const_BalanceSTM_loopTime,
												    const_BalanceSTM_startupDelay,
												    const_BalanceSTM_speedUpdate,
												    const_BalanceSTM_rotationUpdate,
												    const_BalanceSTM_motorBudget,
												    const_BalanceSTM_angleBudget,
												    const_BalanceSTM_speedBudget,
												    const_BalanceSTM_rotationBudget)
					State_BalanceSTM_StopMotors_execute(id__,o____) = true&CALL__setLeftMotorSpeed(
								id__,
								0
							);true&CALL__setRightMotorSpeed(
								id__,
								0
							);SKIP; 
						entered!o____!SID_BalanceSTM_StopMotors ->
						(SKIP; STOP /\ (
							T_BalanceSTM_t20(id__,
									    const_BalanceSTM_maxAngle,
									    const_BalanceSTM_loopTime,
									    const_BalanceSTM_startupDelay,
									    const_BalanceSTM_speedUpdate,
									    const_BalanceSTM_rotationUpdate,
									    const_BalanceSTM_motorBudget,
									    const_BalanceSTM_angleBudget,
									    const_BalanceSTM_speedBudget,
									    const_BalanceSTM_rotationBudget)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10}) -> exit?y____:diff(SIDS,{SID_BalanceSTM_StopMotors})!SID_BalanceSTM_StopMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_StopMotors -> SKIP);
									State_BalanceSTM_StopMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] leftMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_StopMotors})!SID_BalanceSTM_StopMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_StopMotors -> SKIP);
									State_BalanceSTM_StopMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rightMotorVelocity__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_StopMotors})!SID_BalanceSTM_StopMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_StopMotors -> SKIP);
									State_BalanceSTM_StopMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angle__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_StopMotors})!SID_BalanceSTM_StopMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_StopMotors -> SKIP);
									State_BalanceSTM_StopMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroX__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_StopMotors})!SID_BalanceSTM_StopMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_StopMotors -> SKIP);
									State_BalanceSTM_StopMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroY__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_StopMotors})!SID_BalanceSTM_StopMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_StopMotors -> SKIP);
									State_BalanceSTM_StopMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] gyroZ__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_StopMotors})!SID_BalanceSTM_StopMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_StopMotors -> SKIP);
									State_BalanceSTM_StopMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] angleOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_StopMotors})!SID_BalanceSTM_StopMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_StopMotors -> SKIP);
									State_BalanceSTM_StopMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] anewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_StopMotors})!SID_BalanceSTM_StopMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_StopMotors -> SKIP);
									State_BalanceSTM_StopMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] adiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_StopMotors})!SID_BalanceSTM_StopMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_StopMotors -> SKIP);
									State_BalanceSTM_StopMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] snewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_StopMotors})!SID_BalanceSTM_StopMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_StopMotors -> SKIP);
									State_BalanceSTM_StopMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] speedOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_StopMotors})!SID_BalanceSTM_StopMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_StopMotors -> SKIP);
									State_BalanceSTM_StopMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rdiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_StopMotors})!SID_BalanceSTM_StopMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_StopMotors -> SKIP);
									State_BalanceSTM_StopMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
							[] rotationOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_BalanceSTM_t7,TID_BalanceSTM_t8,TID_BalanceSTM_t13,TID_BalanceSTM_t14,TID_BalanceSTM_t6,TID_BalanceSTM_t16,TID_BalanceSTM_t12,TID_BalanceSTM_t20,TID_BalanceSTM_t9,TID_BalanceSTM_t15,TID_BalanceSTM_t17,TID_BalanceSTM_t11,TID_BalanceSTM_t19,TID_BalanceSTM_t18,TID_BalanceSTM_t5,TID_BalanceSTM_t10})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_BalanceSTM_StopMotors})!SID_BalanceSTM_StopMotors -> (
									SKIP;
									exited!y____!SID_BalanceSTM_StopMotors -> SKIP);
									State_BalanceSTM_StopMotors(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
						))
				within
					enter?x____:diff(SIDS,{SID_BalanceSTM_StopMotors})!SID_BalanceSTM_StopMotors -> (State_BalanceSTM_StopMotors_execute(id__,x____))
				
				
				I_BalanceSTM_i0(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = let
					T_BalanceSTM_t1(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget) = internal__!TID_BalanceSTM_t1 -> enter!SID_BalanceSTM!SID_BalanceSTM_Initialisation -> entered!SID_BalanceSTM!SID_BalanceSTM_Initialisation ->
					SKIP
				within
					T_BalanceSTM_t1(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget)
				
				
				State_BalanceSTM_Initialisation_R(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = 
					State_BalanceSTM_Initialisation(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget)
						[|diff(int_int,BalanceSTM_Initialisation_triggers)|]
					SKIP
						 		
				State_BalanceSTM_WaitForNextIteration_R(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = 
					State_BalanceSTM_WaitForNextIteration(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget)
						[|diff(int_int,BalanceSTM_WaitForNextIteration_triggers)|]
					SKIP
						 		
				State_BalanceSTM_Setup_R(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = 
					State_BalanceSTM_Setup(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget)
						[|diff(int_int,BalanceSTM_Setup_triggers)|]
					SKIP
						 		
				State_BalanceSTM_ReceiveInput_R(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = 
					State_BalanceSTM_ReceiveInput(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget)
						[|diff(int_int,BalanceSTM_ReceiveInput_triggers)|]
					SKIP
						 		
				State_BalanceSTM_SendSpeed_R(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = 
					State_BalanceSTM_SendSpeed(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget)
						[|diff(int_int,BalanceSTM_SendSpeed_triggers)|]
					SKIP
						 		
				State_BalanceSTM_SendAngle_R(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = 
					State_BalanceSTM_SendAngle(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget)
						[|diff(int_int,BalanceSTM_SendAngle_triggers)|]
					SKIP
						 		
				State_BalanceSTM_SendRotation_R(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = 
					State_BalanceSTM_SendRotation(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget)
						[|diff(int_int,BalanceSTM_SendRotation_triggers)|]
					SKIP
						 		
				State_BalanceSTM_SetMotors_R(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = 
					State_BalanceSTM_SetMotors(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget)
						[|diff(int_int,BalanceSTM_SetMotors_triggers)|]
					SKIP
						 		
				State_BalanceSTM_StopMotors_R(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = 
					State_BalanceSTM_StopMotors(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget)
						[|diff(int_int,BalanceSTM_StopMotors_triggers)|]
					SKIP
						 		
					
				STM(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = (
					I_BalanceSTM_i0(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget)
						[|
							{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
								x____ <- diff(SIDS,{SID_BalanceSTM_Initialisation,SID_BalanceSTM_WaitForNextIteration,SID_BalanceSTM_Setup,SID_BalanceSTM_ReceiveInput,SID_BalanceSTM_SendSpeed,SID_BalanceSTM_SendAngle,SID_BalanceSTM_SendRotation,SID_BalanceSTM_SetMotors,SID_BalanceSTM_StopMotors}),
								y____ <- {SID_BalanceSTM_Initialisation,SID_BalanceSTM_WaitForNextIteration,SID_BalanceSTM_Setup,SID_BalanceSTM_ReceiveInput,SID_BalanceSTM_SendSpeed,SID_BalanceSTM_SendAngle,SID_BalanceSTM_SendRotation,SID_BalanceSTM_SetMotors,SID_BalanceSTM_StopMotors}
						|}|]
					(
						State_BalanceSTM_Initialisation_R(id__,
								    const_BalanceSTM_maxAngle,
								    const_BalanceSTM_loopTime,
								    const_BalanceSTM_startupDelay,
								    const_BalanceSTM_speedUpdate,
								    const_BalanceSTM_rotationUpdate,
								    const_BalanceSTM_motorBudget,
								    const_BalanceSTM_angleBudget,
								    const_BalanceSTM_speedBudget,
								    const_BalanceSTM_rotationBudget)
							[|inter(CS_BalanceSTM_Initialisation_sync,union(union(union(union(union(union(union(CS_BalanceSTM_WaitForNextIteration_sync,CS_BalanceSTM_Setup_sync),CS_BalanceSTM_ReceiveInput_sync),CS_BalanceSTM_SendSpeed_sync),CS_BalanceSTM_SendAngle_sync),CS_BalanceSTM_SendRotation_sync),CS_BalanceSTM_SetMotors_sync),CS_BalanceSTM_StopMotors_sync))|]
						(
							State_BalanceSTM_WaitForNextIteration_R(id__,
									    const_BalanceSTM_maxAngle,
									    const_BalanceSTM_loopTime,
									    const_BalanceSTM_startupDelay,
									    const_BalanceSTM_speedUpdate,
									    const_BalanceSTM_rotationUpdate,
									    const_BalanceSTM_motorBudget,
									    const_BalanceSTM_angleBudget,
									    const_BalanceSTM_speedBudget,
									    const_BalanceSTM_rotationBudget)
								[|inter(CS_BalanceSTM_WaitForNextIteration_sync,union(union(union(union(union(union(CS_BalanceSTM_Setup_sync,CS_BalanceSTM_ReceiveInput_sync),CS_BalanceSTM_SendSpeed_sync),CS_BalanceSTM_SendAngle_sync),CS_BalanceSTM_SendRotation_sync),CS_BalanceSTM_SetMotors_sync),CS_BalanceSTM_StopMotors_sync))|]
							(
								State_BalanceSTM_Setup_R(id__,
										    const_BalanceSTM_maxAngle,
										    const_BalanceSTM_loopTime,
										    const_BalanceSTM_startupDelay,
										    const_BalanceSTM_speedUpdate,
										    const_BalanceSTM_rotationUpdate,
										    const_BalanceSTM_motorBudget,
										    const_BalanceSTM_angleBudget,
										    const_BalanceSTM_speedBudget,
										    const_BalanceSTM_rotationBudget)
									[|inter(CS_BalanceSTM_Setup_sync,union(union(union(union(union(CS_BalanceSTM_ReceiveInput_sync,CS_BalanceSTM_SendSpeed_sync),CS_BalanceSTM_SendAngle_sync),CS_BalanceSTM_SendRotation_sync),CS_BalanceSTM_SetMotors_sync),CS_BalanceSTM_StopMotors_sync))|]
								(
									State_BalanceSTM_ReceiveInput_R(id__,
											    const_BalanceSTM_maxAngle,
											    const_BalanceSTM_loopTime,
											    const_BalanceSTM_startupDelay,
											    const_BalanceSTM_speedUpdate,
											    const_BalanceSTM_rotationUpdate,
											    const_BalanceSTM_motorBudget,
											    const_BalanceSTM_angleBudget,
											    const_BalanceSTM_speedBudget,
											    const_BalanceSTM_rotationBudget)
										[|inter(CS_BalanceSTM_ReceiveInput_sync,union(union(union(union(CS_BalanceSTM_SendSpeed_sync,CS_BalanceSTM_SendAngle_sync),CS_BalanceSTM_SendRotation_sync),CS_BalanceSTM_SetMotors_sync),CS_BalanceSTM_StopMotors_sync))|]
									(
										State_BalanceSTM_SendSpeed_R(id__,
												    const_BalanceSTM_maxAngle,
												    const_BalanceSTM_loopTime,
												    const_BalanceSTM_startupDelay,
												    const_BalanceSTM_speedUpdate,
												    const_BalanceSTM_rotationUpdate,
												    const_BalanceSTM_motorBudget,
												    const_BalanceSTM_angleBudget,
												    const_BalanceSTM_speedBudget,
												    const_BalanceSTM_rotationBudget)
											[|inter(CS_BalanceSTM_SendSpeed_sync,union(union(union(CS_BalanceSTM_SendAngle_sync,CS_BalanceSTM_SendRotation_sync),CS_BalanceSTM_SetMotors_sync),CS_BalanceSTM_StopMotors_sync))|]
										(
											State_BalanceSTM_SendAngle_R(id__,
													    const_BalanceSTM_maxAngle,
													    const_BalanceSTM_loopTime,
													    const_BalanceSTM_startupDelay,
													    const_BalanceSTM_speedUpdate,
													    const_BalanceSTM_rotationUpdate,
													    const_BalanceSTM_motorBudget,
													    const_BalanceSTM_angleBudget,
													    const_BalanceSTM_speedBudget,
													    const_BalanceSTM_rotationBudget)
												[|inter(CS_BalanceSTM_SendAngle_sync,union(union(CS_BalanceSTM_SendRotation_sync,CS_BalanceSTM_SetMotors_sync),CS_BalanceSTM_StopMotors_sync))|]
											(
												State_BalanceSTM_SendRotation_R(id__,
														    const_BalanceSTM_maxAngle,
														    const_BalanceSTM_loopTime,
														    const_BalanceSTM_startupDelay,
														    const_BalanceSTM_speedUpdate,
														    const_BalanceSTM_rotationUpdate,
														    const_BalanceSTM_motorBudget,
														    const_BalanceSTM_angleBudget,
														    const_BalanceSTM_speedBudget,
														    const_BalanceSTM_rotationBudget)
													[|inter(CS_BalanceSTM_SendRotation_sync,union(CS_BalanceSTM_SetMotors_sync,CS_BalanceSTM_StopMotors_sync))|]
												(
													State_BalanceSTM_SetMotors_R(id__,
															    const_BalanceSTM_maxAngle,
															    const_BalanceSTM_loopTime,
															    const_BalanceSTM_startupDelay,
															    const_BalanceSTM_speedUpdate,
															    const_BalanceSTM_rotationUpdate,
															    const_BalanceSTM_motorBudget,
															    const_BalanceSTM_angleBudget,
															    const_BalanceSTM_speedBudget,
															    const_BalanceSTM_rotationBudget)
														[|inter(CS_BalanceSTM_SetMotors_sync,CS_BalanceSTM_StopMotors_sync)|]
													State_BalanceSTM_StopMotors_R(id__,
															    const_BalanceSTM_maxAngle,
															    const_BalanceSTM_loopTime,
															    const_BalanceSTM_startupDelay,
															    const_BalanceSTM_speedUpdate,
															    const_BalanceSTM_rotationUpdate,
															    const_BalanceSTM_motorBudget,
															    const_BalanceSTM_angleBudget,
															    const_BalanceSTM_speedBudget,
															    const_BalanceSTM_rotationBudget)
												)
											)
										)
									)
								)
							)
						)
					)
				)
				
				-- optimized memory process
				channel getV_currAngle: core_real
				channel getV_currGyroX: core_real
				channel getV_currGyroY: core_real
				channel getV_currGyroZ: core_real
				channel getV_currLeftVel: core_real
				channel getV_currRightVel: core_real
				channel getV_speedCount: core_nat
				channel getV_rotationCount: core_nat
				channel getV_angleOutput: core_real
				channel getV_speedOutput: core_real
				channel getV_rotationOutput: core_real
				channel getV_speedSent: core_boolean
				channel getV_angleSent: core_boolean
				channel getV_rotationSent: core_boolean
				channel getV_angleReceived: core_boolean
				channel getV_speedIntegral: core_real
				
				-- individual memory processes
				Memory_currAngle(currAngle) = (
					get_currAngle!currAngle -> Memory_currAngle(currAngle)
					[]
					getV_currAngle!currAngle -> Memory_currAngle(currAngle)
					[]
					set_currAngle?x__ -> Memory_currAngle(x__)
				)
				Memory_currGyroX(currGyroX) = (
					get_currGyroX!currGyroX -> Memory_currGyroX(currGyroX)
					[]
					getV_currGyroX!currGyroX -> Memory_currGyroX(currGyroX)
					[]
					set_currGyroX?x__ -> Memory_currGyroX(x__)
				)
				Memory_currGyroY(currGyroY) = (
					get_currGyroY!currGyroY -> Memory_currGyroY(currGyroY)
					[]
					getV_currGyroY!currGyroY -> Memory_currGyroY(currGyroY)
					[]
					set_currGyroY?x__ -> Memory_currGyroY(x__)
				)
				Memory_currGyroZ(currGyroZ) = (
					get_currGyroZ!currGyroZ -> Memory_currGyroZ(currGyroZ)
					[]
					getV_currGyroZ!currGyroZ -> Memory_currGyroZ(currGyroZ)
					[]
					set_currGyroZ?x__ -> Memory_currGyroZ(x__)
				)
				Memory_currLeftVel(currLeftVel) = (
					get_currLeftVel!currLeftVel -> Memory_currLeftVel(currLeftVel)
					[]
					getV_currLeftVel!currLeftVel -> Memory_currLeftVel(currLeftVel)
					[]
					set_currLeftVel?x__ -> Memory_currLeftVel(x__)
				)
				Memory_currRightVel(currRightVel) = (
					get_currRightVel!currRightVel -> Memory_currRightVel(currRightVel)
					[]
					getV_currRightVel!currRightVel -> Memory_currRightVel(currRightVel)
					[]
					set_currRightVel?x__ -> Memory_currRightVel(x__)
				)
				Memory_speedCount(speedCount) = (
					get_speedCount!speedCount -> Memory_speedCount(speedCount)
					[]
					getV_speedCount!speedCount -> Memory_speedCount(speedCount)
					[]
					set_speedCount?x__ -> Memory_speedCount(x__)
				)
				Memory_rotationCount(rotationCount) = (
					get_rotationCount!rotationCount -> Memory_rotationCount(rotationCount)
					[]
					getV_rotationCount!rotationCount -> Memory_rotationCount(rotationCount)
					[]
					set_rotationCount?x__ -> Memory_rotationCount(x__)
				)
				Memory_angleOutput(angleOutput) = (
					get_angleOutput!angleOutput -> Memory_angleOutput(angleOutput)
					[]
					getV_angleOutput!angleOutput -> Memory_angleOutput(angleOutput)
					[]
					set_angleOutput?x__ -> Memory_angleOutput(x__)
					[]
					angleOutputE__!TID_BalanceSTM_t5.in?angleOutput -> Memory_angleOutput(angleOutput)
				)
				Memory_speedOutput(speedOutput) = (
					get_speedOutput!speedOutput -> Memory_speedOutput(speedOutput)
					[]
					getV_speedOutput!speedOutput -> Memory_speedOutput(speedOutput)
					[]
					set_speedOutput?x__ -> Memory_speedOutput(x__)
					[]
					speedOutputE__!TID_BalanceSTM_t11.in?speedOutput -> Memory_speedOutput(speedOutput)
				)
				Memory_rotationOutput(rotationOutput) = (
					get_rotationOutput!rotationOutput -> Memory_rotationOutput(rotationOutput)
					[]
					getV_rotationOutput!rotationOutput -> Memory_rotationOutput(rotationOutput)
					[]
					set_rotationOutput?x__ -> Memory_rotationOutput(x__)
					[]
					rotationOutputE__!TID_BalanceSTM_t15.in?rotationOutput -> Memory_rotationOutput(rotationOutput)
				)
				Memory_speedSent(speedSent) = (
					get_speedSent!speedSent -> Memory_speedSent(speedSent)
					[]
					getV_speedSent!speedSent -> Memory_speedSent(speedSent)
					[]
					set_speedSent?x__ -> Memory_speedSent(x__)
				)
				Memory_angleSent(angleSent) = (
					get_angleSent!angleSent -> Memory_angleSent(angleSent)
					[]
					getV_angleSent!angleSent -> Memory_angleSent(angleSent)
					[]
					set_angleSent?x__ -> Memory_angleSent(x__)
				)
				Memory_rotationSent(rotationSent) = (
					get_rotationSent!rotationSent -> Memory_rotationSent(rotationSent)
					[]
					getV_rotationSent!rotationSent -> Memory_rotationSent(rotationSent)
					[]
					set_rotationSent?x__ -> Memory_rotationSent(x__)
				)
				Memory_angleReceived(angleReceived) = (
					get_angleReceived!angleReceived -> Memory_angleReceived(angleReceived)
					[]
					getV_angleReceived!angleReceived -> Memory_angleReceived(angleReceived)
					[]
					set_angleReceived?x__ -> Memory_angleReceived(x__)
				)
				Memory_speedIntegral(speedIntegral) = (
					get_speedIntegral!speedIntegral -> Memory_speedIntegral(speedIntegral)
					[]
					getV_speedIntegral!speedIntegral -> Memory_speedIntegral(speedIntegral)
					[]
					set_speedIntegral?x__ -> Memory_speedIntegral(x__)
				)
				
				-- processes that read variables and offer transitions
				MemoryTransitions(id__, currAngle
							, currGyroX
							, currGyroY
							, currGyroZ
							, currLeftVel
							, currRightVel
							, speedCount
							, rotationCount
							, angleOutput
							, speedOutput
							, rotationOutput
							, speedSent
							, angleSent
							, rotationSent
							, angleReceived
							, speedIntegral
							,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = 		
				((((angleReceived and ((((speedCount==0)) or ((speedCount<const_BalanceSTM_speedUpdate))))) and ((((rotationCount==0)) or ((rotationCount<const_BalanceSTM_rotationUpdate))))))&(internal__!TID_BalanceSTM_t6 -> SKIP)
				[]
				angleOutputE__!TID_BalanceSTM_t5.in?angleOutput:{angleOutput|angleOutput <- core_real, (((angleSent==true) and (angleReceived==false)))} -> SKIP
				[]
				((((angleSent==false) and (angleReceived==false))))&(internal__!TID_BalanceSTM_t8 -> SKIP)
				[]
				internal__!TID_BalanceSTM_t7 -> SKIP
				[]
				speedOutputE__!TID_BalanceSTM_t11.in?speedOutput:{speedOutput|speedOutput <- core_real, (speedSent==true)} -> SKIP
				[]
				(((((speedSent==false) and (speedCount>=const_BalanceSTM_speedUpdate)) and (speedCount>0))))&(internal__!TID_BalanceSTM_t13 -> SKIP)
				[]
				internal__!TID_BalanceSTM_t14 -> SKIP
				[]
				rotationOutputE__!TID_BalanceSTM_t15.in?rotationOutput:{rotationOutput|rotationOutput <- core_real, (rotationSent==true)} -> SKIP
				[]
				(((((rotationSent==false) and (rotationCount>=const_BalanceSTM_rotationUpdate)) and (rotationCount>0))))&(internal__!TID_BalanceSTM_t16 -> SKIP)
				[]
				internal__!TID_BalanceSTM_t17 -> SKIP
				[]
				internal__!TID_BalanceSTM_t1 -> SKIP
				[]
				internal__!TID_BalanceSTM_t4 -> SKIP
				[]
				(true)&(internal__!TID_BalanceSTM_t12 -> SKIP)
				[]
				internal__!TID_BalanceSTM_t18 -> SKIP
				[]
				(((currAngle<=const_BalanceSTM_maxAngle) and (currAngle>=Neg(const_BalanceSTM_maxAngle, core_int))))&(internal__!TID_BalanceSTM_t9 -> SKIP)
				[]
				(((currAngle>const_BalanceSTM_maxAngle) or (currAngle<Neg(const_BalanceSTM_maxAngle, core_int))))&(internal__!TID_BalanceSTM_t10 -> SKIP)
				[]
				internal__!TID_BalanceSTM_t19 -> SKIP
				[]
				internal__!TID_BalanceSTM_t20 -> SKIP[]
				set_currAngle?x__ -> SKIP[]
				set_currGyroX?x__ -> SKIP[]
				set_currGyroY?x__ -> SKIP[]
				set_currGyroZ?x__ -> SKIP[]
				set_currLeftVel?x__ -> SKIP[]
				set_currRightVel?x__ -> SKIP[]
				set_speedCount?x__ -> SKIP[]
				set_rotationCount?x__ -> SKIP[]
				set_angleOutput?x__ -> SKIP[]
				set_speedOutput?x__ -> SKIP[]
				set_rotationOutput?x__ -> SKIP[]
				set_speedSent?x__ -> SKIP[]
				set_angleSent?x__ -> SKIP[]
				set_rotationSent?x__ -> SKIP[]
				set_angleReceived?x__ -> SKIP[]
				set_speedIntegral?x__ -> SKIP)
				
				MemoryTransitions_BalanceSTM(id__, const_BalanceSTM_maxAngle, const_BalanceSTM_loopTime, const_BalanceSTM_startupDelay, const_BalanceSTM_speedUpdate, const_BalanceSTM_rotationUpdate, const_BalanceSTM_motorBudget, const_BalanceSTM_angleBudget, const_BalanceSTM_speedBudget, const_BalanceSTM_rotationBudget) = (getV_currAngle?currAngle ->
				getV_currGyroX?currGyroX ->
				getV_currGyroY?currGyroY ->
				getV_currGyroZ?currGyroZ ->
				getV_currLeftVel?currLeftVel ->
				getV_currRightVel?currRightVel ->
				getV_speedCount?speedCount ->
				getV_rotationCount?rotationCount ->
				getV_angleOutput?angleOutput ->
				getV_speedOutput?speedOutput ->
				getV_rotationOutput?rotationOutput ->
				getV_speedSent?speedSent ->
				getV_angleSent?angleSent ->
				getV_rotationSent?rotationSent ->
				getV_angleReceived?angleReceived ->
				getV_speedIntegral?speedIntegral ->
				MemoryTransitions(id__, currAngle
							, currGyroX
							, currGyroY
							, currGyroZ
							, currLeftVel
							, currRightVel
							, speedCount
							, rotationCount
							, angleOutput
							, speedOutput
							, rotationOutput
							, speedSent
							, angleSent
							, rotationSent
							, angleReceived
							, speedIntegral
							,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget); MemoryTransitions_BalanceSTM(id__, const_BalanceSTM_maxAngle, const_BalanceSTM_loopTime, const_BalanceSTM_startupDelay, const_BalanceSTM_speedUpdate, const_BalanceSTM_rotationUpdate, const_BalanceSTM_motorBudget, const_BalanceSTM_angleBudget, const_BalanceSTM_speedBudget, const_BalanceSTM_rotationBudget))			
				
				-- synchronisation, hiding and process sets 
				MemoryVariablesProcesses_BalanceSTM = Union(
					{
						{
							(Memory_currAngle(0),{|getV_currAngle,get_currAngle,set_currAngle|}),
							(Memory_currGyroX(0),{|getV_currGyroX,get_currGyroX,set_currGyroX|}),
							(Memory_currGyroY(0),{|getV_currGyroY,get_currGyroY,set_currGyroY|}),
							(Memory_currGyroZ(0),{|get_currGyroZ,set_currGyroZ,getV_currGyroZ|}),
							(Memory_currLeftVel(0),{|get_currLeftVel,set_currLeftVel,getV_currLeftVel|}),
							(Memory_currRightVel(0),{|getV_currRightVel,get_currRightVel,set_currRightVel|}),
							(Memory_speedCount(0),{|getV_speedCount,set_speedCount,get_speedCount|}),
							(Memory_rotationCount(0),{|set_rotationCount,getV_rotationCount,get_rotationCount|}),
							(Memory_angleOutput(0),{|angleOutputE__.TID_BalanceSTM_t5,set_angleOutput,get_angleOutput,getV_angleOutput|}),
							(Memory_speedOutput(0),{|get_speedOutput,getV_speedOutput,speedOutputE__.TID_BalanceSTM_t11,set_speedOutput|}),
							(Memory_rotationOutput(0),{|getV_rotationOutput,set_rotationOutput,rotationOutputE__.TID_BalanceSTM_t15,get_rotationOutput|}),
							(Memory_speedSent(true),{|getV_speedSent,get_speedSent,set_speedSent|}),
							(Memory_angleSent(true),{|get_angleSent,getV_angleSent,set_angleSent|}),
							(Memory_rotationSent(true),{|set_rotationSent,getV_rotationSent,get_rotationSent|}),
							(Memory_angleReceived(true),{|set_angleReceived,get_angleReceived,getV_angleReceived|}),
							(Memory_speedIntegral(0),{|set_speedIntegral,get_speedIntegral,getV_speedIntegral|})
						}
					}
				)
				
				MemoryVariablesSyncSet = Union({
					{|
						set_angleReceived,
						set_currLeftVel,
						getV_rotationCount,
						getV_currRightVel,
						set_angleSent,
						rotationOutputE__.TID_BalanceSTM_t15,
						set_speedSent,
						getV_angleOutput,
						set_speedCount,
						getV_rotationSent,
						getV_angleSent,
						set_speedIntegral,
						getV_speedSent,
						set_rotationCount,
						angleOutputE__.TID_BalanceSTM_t5,
						getV_speedOutput,
						getV_rotationOutput,
						getV_angleReceived,
						getV_currGyroZ,
						speedOutputE__.TID_BalanceSTM_t11,
						getV_currGyroX,
						getV_currGyroY,
						set_currAngle,
						set_currRightVel,
						getV_speedCount,
						set_angleOutput,
						set_rotationSent,
						set_rotationOutput,
						set_currGyroZ,
						getV_currAngle,
						getV_currLeftVel,
						set_speedOutput,
						set_currGyroX,
						set_currGyroY,
						getV_speedIntegral
					|}	
				})
				
				MemoryVariablesHideSet = Union({
					{|
						getV_rotationCount,
						getV_speedOutput,
						getV_rotationOutput,
						getV_angleReceived,
						getV_currGyroZ,
						getV_currRightVel,
						getV_currGyroX,
						getV_currGyroY,
						getV_angleOutput,
						getV_speedCount,
						getV_rotationSent,
						getV_angleSent,
						getV_currAngle,
						getV_speedSent,
						getV_currLeftVel,
						getV_speedIntegral
					|}
				})
				
				-- combined individual memory processes
				MemoryVariables = ||| (P, alpha) : MemoryVariablesProcesses_BalanceSTM @ P
				
				-- complete memory process	
				MemoryN(id__, const_BalanceSTM_maxAngle, const_BalanceSTM_loopTime, const_BalanceSTM_startupDelay, const_BalanceSTM_speedUpdate, const_BalanceSTM_rotationUpdate, const_BalanceSTM_motorBudget, const_BalanceSTM_angleBudget, const_BalanceSTM_speedBudget, const_BalanceSTM_rotationBudget) = sbisim(diamond((sbisim(diamond(MemoryVariables)) [| MemoryVariablesSyncSet |] sbisim(diamond(MemoryTransitions_BalanceSTM(id__, const_BalanceSTM_maxAngle, const_BalanceSTM_loopTime, const_BalanceSTM_startupDelay, const_BalanceSTM_speedUpdate, const_BalanceSTM_rotationUpdate, const_BalanceSTM_motorBudget, const_BalanceSTM_angleBudget, const_BalanceSTM_speedBudget, const_BalanceSTM_rotationBudget)))) \ MemoryVariablesHideSet))
				
				-- optimised memory
				-- Sets of named elements identified according to transition conditions:
				-- {}
				-- {angleReceived,rotationUpdate,speedUpdate,rotationCount,speedCount}
				-- {loopTime}
				-- {speedUpdate,speedCount,speedSent}
				-- {angleReceived,angleSent}
				-- {rotationUpdate,rotationCount,rotationSent}
				-- {currAngle,maxAngle}
				-- Summary of all identified named elements:
				-- {
				-- currGyroY
				-- currGyroZ
				-- angleReceived
				-- currRightVel
				-- currGyroX
				-- speedUpdate
				-- maxAngle
				-- speedIntegral
				-- loopTime
				-- rotationUpdate
				-- currAngle
				-- rotationCount
				-- currLeftVel
				-- angleOutput
				-- rotationOutput
				-- speedCount
				-- rotationSent
				-- speedOutput
				-- speedSent
				-- angleSent
				-- }
				
				-- Allocation plan:
				-- 0:{}
				--	=> {
				--		TID_BalanceSTM_t7,
				--		TID_BalanceSTM_t17,
				--		TID_BalanceSTM_t19,
				--		TID_BalanceSTM_t14,
				--		TID_BalanceSTM_t18,
				--		TID_BalanceSTM_t1,
				--		TID_BalanceSTM_t20,
				--		TID_BalanceSTM_t4}
				-- 6:{angleReceived,rotationUpdate,speedUpdate,rotationCount,speedCount}
				--	=> {
				--		TID_BalanceSTM_t6}
				-- 1:{loopTime}
				--	=> {
				--		TID_BalanceSTM_t12}
				-- 4:{speedUpdate,speedCount,speedSent}
				--	=> {
				--		TID_BalanceSTM_t13,
				--		TID_BalanceSTM_t11}
				-- 2:{angleReceived,angleSent}
				--	=> {
				--		TID_BalanceSTM_t8,
				--		TID_BalanceSTM_t5}
				-- 5:{rotationUpdate,rotationCount,rotationSent}
				--	=> {
				--		TID_BalanceSTM_t15,
				--		TID_BalanceSTM_t16}
				-- 3:{currAngle,maxAngle}
				--	=> {
				--		TID_BalanceSTM_t9,
				--		TID_BalanceSTM_t10}
				
				-- Memory transition processes
				MemoryTransitions_opt_0(id__) =
				(
					let
						Update = Current(id__)
						Current(id__)
						 	   = 
						 	   internal__!TID_BalanceSTM_t7 -> Update
						 	   []
						 	   internal__!TID_BalanceSTM_t17 -> Update
						 	   []
						 	   internal__!TID_BalanceSTM_t19 -> Update
						 	   []
						 	   internal__!TID_BalanceSTM_t14 -> Update
						 	   []
						 	   internal__!TID_BalanceSTM_t18 -> Update
						 	   []
						 	   internal__!TID_BalanceSTM_t1 -> Update
						 	   []
						 	   internal__!TID_BalanceSTM_t20 -> Update
						 	   []
						 	   internal__!TID_BalanceSTM_t4 -> Update
					within
						Update
				)
				MemoryTransitions_opt_6(id__,
					 const_BalanceSTM_rotationUpdate,
					 const_BalanceSTM_speedUpdate) =
				(
					let
						Update = 
						get_angleReceived?angleReceived ->
						get_rotationCount?rotationCount ->
						get_speedCount?speedCount ->
						Current(id__,
							 angleReceived,
							 rotationCount,
							 speedCount)
						Current(id__,
							 angleReceived,
							 rotationCount,
							 speedCount)
						 	   = 
						 	   (((angleReceived and ((((speedCount==0)) or ((speedCount<const_BalanceSTM_speedUpdate))))) and ((((rotationCount==0)) or ((rotationCount<const_BalanceSTM_rotationUpdate))))))&(internal__!TID_BalanceSTM_t6 -> Update)
						 	   	 
						 	   	 []
						 	   	 set_angleReceived?x__ -> Update
						 	   	 []
						 	   	 
						 	   	 set_rotationCount?x__ -> Update
						 	   	 []
						 	   	 
						 	   	 set_speedCount?x__ -> Update
					within
						Update
				)
				MemoryTransitions_opt_1(id__,
					 const_BalanceSTM_loopTime) =
				(
					let
						Update = Current(id__)
						Current(id__)
						 	   = 
						 	   (true)&(internal__!TID_BalanceSTM_t12 -> Update)
					within
						Update
				)
				MemoryTransitions_opt_4(id__,
					 const_BalanceSTM_speedUpdate) =
				(
					let
						Update = 
						get_speedCount?speedCount ->
						get_speedSent?speedSent ->
						Current(id__,
							 speedCount,
							 speedSent)
						Current(id__,
							 speedCount,
							 speedSent)
						 	   = 
						 	   (((((speedSent==false) and (speedCount>=const_BalanceSTM_speedUpdate)) and (speedCount>0))))&(internal__!TID_BalanceSTM_t13 -> Update)
						 	   []
						 	   speedOutputE__!TID_BalanceSTM_t11.in?speedOutput:{speedOutput|speedOutput <- core_real, (speedSent==true)} -> Update
						 	   	 
						 	   	 []
						 	   	 set_speedCount?x__ -> Update
						 	   	 []
						 	   	 
						 	   	 set_speedSent?x__ -> Update
					within
						Update
				)
				MemoryTransitions_opt_2(id__) =
				(
					let
						Update = 
						get_angleReceived?angleReceived ->
						get_angleSent?angleSent ->
						Current(id__,
							 angleReceived,
							 angleSent)
						Current(id__,
							 angleReceived,
							 angleSent)
						 	   = 
						 	   ((((angleSent==false) and (angleReceived==false))))&(internal__!TID_BalanceSTM_t8 -> Update)
						 	   []
						 	   angleOutputE__!TID_BalanceSTM_t5.in?angleOutput:{angleOutput|angleOutput <- core_real, (((angleSent==true) and (angleReceived==false)))} -> Update
						 	   	 
						 	   	 []
						 	   	 set_angleReceived?x__ -> Update
						 	   	 []
						 	   	 
						 	   	 set_angleSent?x__ -> Update
					within
						Update
				)
				MemoryTransitions_opt_5(id__,
					 const_BalanceSTM_rotationUpdate) =
				(
					let
						Update = 
						get_rotationCount?rotationCount ->
						get_rotationSent?rotationSent ->
						Current(id__,
							 rotationCount,
							 rotationSent)
						Current(id__,
							 rotationCount,
							 rotationSent)
						 	   = 
						 	   rotationOutputE__!TID_BalanceSTM_t15.in?rotationOutput:{rotationOutput|rotationOutput <- core_real, (rotationSent==true)} -> Update
						 	   []
						 	   (((((rotationSent==false) and (rotationCount>=const_BalanceSTM_rotationUpdate)) and (rotationCount>0))))&(internal__!TID_BalanceSTM_t16 -> Update)
						 	   	 
						 	   	 []
						 	   	 set_rotationCount?x__ -> Update
						 	   	 []
						 	   	 
						 	   	 set_rotationSent?x__ -> Update
					within
						Update
				)
				MemoryTransitions_opt_3(id__,
					 const_BalanceSTM_maxAngle) =
				(
					let
						Update = 
						get_currAngle?currAngle ->
						Current(id__,
							 currAngle)
						Current(id__,
							 currAngle)
						 	   = 
						 	   (((currAngle<=const_BalanceSTM_maxAngle) and (currAngle>=Neg(const_BalanceSTM_maxAngle, core_int))))&(internal__!TID_BalanceSTM_t9 -> Update)
						 	   []
						 	   (((currAngle>const_BalanceSTM_maxAngle) or (currAngle<Neg(const_BalanceSTM_maxAngle, core_int))))&(internal__!TID_BalanceSTM_t10 -> Update)
						 	   	 
						 	   	 []
						 	   	 set_currAngle?x__ -> Update
					within
						Update
				)
				
				-- Memory cell processes
				Memory_opt_currGyroY(x__) = ( 
					get_currGyroY!x__ -> Memory_opt_currGyroY(x__)
					[]
					set_currGyroY?x__ -> Memory_opt_currGyroY(x__)
				)
				Memory_opt_currGyroZ(x__) = ( 
					get_currGyroZ!x__ -> Memory_opt_currGyroZ(x__)
					[]
					set_currGyroZ?x__ -> Memory_opt_currGyroZ(x__)
				)
				Memory_opt_angleReceived(x__) = ( 
					get_angleReceived!x__ -> Memory_opt_angleReceived(x__)
					[]
					set_angleReceived?x__ -> Memory_opt_angleReceived(x__)
				)
				Memory_opt_currRightVel(x__) = ( 
					get_currRightVel!x__ -> Memory_opt_currRightVel(x__)
					[]
					set_currRightVel?x__ -> Memory_opt_currRightVel(x__)
				)
				Memory_opt_currGyroX(x__) = ( 
					get_currGyroX!x__ -> Memory_opt_currGyroX(x__)
					[]
					set_currGyroX?x__ -> Memory_opt_currGyroX(x__)
				)
				Memory_opt_speedIntegral(x__) = ( 
					get_speedIntegral!x__ -> Memory_opt_speedIntegral(x__)
					[]
					set_speedIntegral?x__ -> Memory_opt_speedIntegral(x__)
				)
				Memory_opt_currAngle(x__) = ( 
					get_currAngle!x__ -> Memory_opt_currAngle(x__)
					[]
					set_currAngle?x__ -> Memory_opt_currAngle(x__)
				)
				Memory_opt_rotationCount(x__) = ( 
					get_rotationCount!x__ -> Memory_opt_rotationCount(x__)
					[]
					set_rotationCount?x__ -> Memory_opt_rotationCount(x__)
				)
				Memory_opt_currLeftVel(x__) = ( 
					get_currLeftVel!x__ -> Memory_opt_currLeftVel(x__)
					[]
					set_currLeftVel?x__ -> Memory_opt_currLeftVel(x__)
				)
				Memory_opt_angleOutput(x__) = ( 
					get_angleOutput!x__ -> Memory_opt_angleOutput(x__)
					[]
					set_angleOutput?x__ -> Memory_opt_angleOutput(x__)
				)
				Memory_opt_rotationOutput(x__) = ( 
					get_rotationOutput!x__ -> Memory_opt_rotationOutput(x__)
					[]
					set_rotationOutput?x__ -> Memory_opt_rotationOutput(x__)
				)
				Memory_opt_speedCount(x__) = ( 
					get_speedCount!x__ -> Memory_opt_speedCount(x__)
					[]
					set_speedCount?x__ -> Memory_opt_speedCount(x__)
				)
				Memory_opt_rotationSent(x__) = ( 
					get_rotationSent!x__ -> Memory_opt_rotationSent(x__)
					[]
					set_rotationSent?x__ -> Memory_opt_rotationSent(x__)
				)
				Memory_opt_speedOutput(x__) = ( 
					get_speedOutput!x__ -> Memory_opt_speedOutput(x__)
					[]
					set_speedOutput?x__ -> Memory_opt_speedOutput(x__)
				)
				Memory_opt_speedSent(x__) = ( 
					get_speedSent!x__ -> Memory_opt_speedSent(x__)
					[]
					set_speedSent?x__ -> Memory_opt_speedSent(x__)
				)
				Memory_opt_angleSent(x__) = ( 
					get_angleSent!x__ -> Memory_opt_angleSent(x__)
					[]
					set_angleSent?x__ -> Memory_opt_angleSent(x__)
				)
				
				-- Composition of memory, StateMachine and Memory transition processes
				
				MemorySTM_opt(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) =
					dbisim(
					  sbisim(Memory_opt_angleReceived(true)
					      	[| {|set_angleReceived,get_angleReceived|} |] 
					      	dbisim(
					      	  sbisim(Memory_opt_rotationCount(0)
					      	      	[| {|set_rotationCount,get_rotationCount|} |] 
					      	      	dbisim(
					      	      	  sbisim(Memory_opt_speedCount(0)
					      	      	      	[| {|set_speedCount,get_speedCount|} |] 
					      	      	      	sbisim(	
					      	      	      	  dbisim(
					      	      	      	    sbisim(sbisim(	
					      	      	      	      dbisim(
					      	      	      	        sbisim(dbisim(
					      	      	      	          sbisim(Memory_opt_speedSent(true)
					      	      	      	              	[| {|set_speedSent,get_speedSent|} |] 
					      	      	      	              	sbisim(	
					      	      	      	              	  dbisim(
					      	      	      	              	    sbisim(dbisim(
					      	      	      	              	      sbisim(Memory_opt_angleSent(true)
					      	      	      	              	          	[| {|get_angleSent,set_angleSent|} |] 
					      	      	      	              	          	sbisim(	
					      	      	      	              	          	  dbisim(
					      	      	      	              	          	    sbisim(dbisim(
					      	      	      	              	          	      sbisim(Memory_opt_rotationSent(true)
					      	      	      	              	          	          	[| {|set_rotationSent,get_rotationSent|} |] 
					      	      	      	              	          	          	sbisim(	
					      	      	      	              	          	          	  dbisim(
					      	      	      	              	          	          	    sbisim(dbisim(
					      	      	      	              	          	          	      sbisim(Memory_opt_currAngle(0)
					      	      	      	              	          	          	          	[| {|set_currAngle,get_currAngle|} |] 
					      	      	      	              	          	          	          	sbisim(	
					      	      	      	              	          	          	          	  dbisim(
					      	      	      	              	          	          	          	    sbisim(sbisim(	
					      	      	      	              	          	          	          	      dbisim(
					      	      	      	              	          	          	          	        sbisim(dbisim(sbisim(Memory_opt_currGyroY(0)
					      	      	      	              	          	          	          	              	[| {|set_currGyroY,get_currGyroY|} |] 
					      	      	      	              	          	          	          	              	dbisim(sbisim(Memory_opt_currGyroZ(0)
					      	      	      	              	          	          	          	              	      	[| {|get_currGyroZ,set_currGyroZ|} |] 
					      	      	      	              	          	          	          	              	      	dbisim(sbisim(Memory_opt_currRightVel(0)
					      	      	      	              	          	          	          	              	      	      	[| {|get_currRightVel,set_currRightVel|} |] 
					      	      	      	              	          	          	          	              	      	      	dbisim(sbisim(Memory_opt_currGyroX(0)
					      	      	      	              	          	          	          	              	      	      	      	[| {|set_currGyroX,get_currGyroX|} |] 
					      	      	      	              	          	          	          	              	      	      	      	dbisim(sbisim(Memory_opt_speedIntegral(0)
					      	      	      	              	          	          	          	              	      	      	      	      	[| {|set_speedIntegral,get_speedIntegral|} |] 
					      	      	      	              	          	          	          	              	      	      	      	      	dbisim(sbisim(Memory_opt_currLeftVel(0)
					      	      	      	              	          	          	          	              	      	      	      	      	      	[| {|get_currLeftVel,set_currLeftVel|} |] 
					      	      	      	              	          	          	          	              	      	      	      	      	      	dbisim(sbisim(Memory_opt_angleOutput(0)
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	[| {|set_angleOutput,get_angleOutput|} |] 
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	dbisim(sbisim(Memory_opt_rotationOutput(0)
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      	[| {|set_rotationOutput,get_rotationOutput|} |] 
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      	dbisim(sbisim(Memory_opt_speedOutput(0)
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      	      	[| {|get_speedOutput,set_speedOutput|} |] 
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      	      	STM_core(id__,
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      	      			    const_BalanceSTM_maxAngle,
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      	      			    const_BalanceSTM_loopTime,
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      	      			    const_BalanceSTM_startupDelay,
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      	      			    const_BalanceSTM_speedUpdate,
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      	      			    const_BalanceSTM_rotationUpdate,
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      	      			    const_BalanceSTM_motorBudget,
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      	      			    const_BalanceSTM_angleBudget,
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      	      			    const_BalanceSTM_speedBudget,
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      	      			    const_BalanceSTM_rotationBudget)
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      	      	)\ {|get_speedOutput,set_speedOutput|}
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      	      )
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      	)\ {|set_rotationOutput,get_rotationOutput|}
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	      )
					      	      	      	              	          	          	          	              	      	      	      	      	      	      	)\ {|set_angleOutput,get_angleOutput|}
					      	      	      	              	          	          	          	              	      	      	      	      	      	      )
					      	      	      	              	          	          	          	              	      	      	      	      	      	)\ {|get_currLeftVel,set_currLeftVel|}
					      	      	      	              	          	          	          	              	      	      	      	      	      )
					      	      	      	              	          	          	          	              	      	      	      	      	)\ {|set_speedIntegral,get_speedIntegral|}
					      	      	      	              	          	          	          	              	      	      	      	      )
					      	      	      	              	          	          	          	              	      	      	      	)\ {|set_currGyroX,get_currGyroX|}
					      	      	      	              	          	          	          	              	      	      	      )
					      	      	      	              	          	          	          	              	      	      	)\ {|get_currRightVel,set_currRightVel|}
					      	      	      	              	          	          	          	              	      	      )
					      	      	      	              	          	          	          	              	      	)\ {|get_currGyroZ,set_currGyroZ|}
					      	      	      	              	          	          	          	              	      )
					      	      	      	              	          	          	          	              	)\ {|set_currGyroY,get_currGyroY|}
					      	      	      	              	          	          	          	              )
					      	      	      	              	          	          	          	          	  [| {|internal__.TID_BalanceSTM_t14,internal__.TID_BalanceSTM_t19,internal__.TID_BalanceSTM_t7,internal__.TID_BalanceSTM_t18,internal__.TID_BalanceSTM_t17,internal__.TID_BalanceSTM_t4,internal__.TID_BalanceSTM_t1,internal__.TID_BalanceSTM_t20|} |]
					      	      	      	              	          	          	          	          	  MemoryTransitions_opt_0(id__)
					      	      	      	              	          	          	          	          	  )\{|internal__.TID_BalanceSTM_t14,internal__.TID_BalanceSTM_t19,internal__.TID_BalanceSTM_t7,internal__.TID_BalanceSTM_t18,internal__.TID_BalanceSTM_t17,internal__.TID_BalanceSTM_t4,internal__.TID_BalanceSTM_t1,internal__.TID_BalanceSTM_t20|})
					      	      	      	              	          	          	          	          )
					      	      	      	              	          	          	          	      	  [| {|internal__.TID_BalanceSTM_t9,set_currAngle,internal__.TID_BalanceSTM_t10|} |]
					      	      	      	              	          	          	          	      	  MemoryTransitions_opt_3(id__,
					      	      	      	              	          	          	          	      	  	 const_BalanceSTM_maxAngle)
					      	      	      	              	          	          	          	      	  )\{|internal__.TID_BalanceSTM_t9,internal__.TID_BalanceSTM_t10|})
					      	      	      	              	          	          	          	      )
					      	      	      	              	          	          	          	) \ {|set_currAngle,get_currAngle|}
					      	      	      	              	          	          	          )
					      	      	      	              	          	          	      	  [| {|set_rotationCount,internal__.TID_BalanceSTM_t16,set_rotationSent,rotationOutputE__.TID_BalanceSTM_t15|} |]
					      	      	      	              	          	          	      	  MemoryTransitions_opt_5(id__,
					      	      	      	              	          	          	      	  	 const_BalanceSTM_rotationUpdate)
					      	      	      	              	          	          	      	  )\{|internal__.TID_BalanceSTM_t16|})
					      	      	      	              	          	          	      )
					      	      	      	              	          	          	) \ {|set_rotationSent,get_rotationSent|}
					      	      	      	              	          	          )
					      	      	      	              	          	      	  [| {|angleOutputE__.TID_BalanceSTM_t5,set_angleReceived,internal__.TID_BalanceSTM_t8,set_angleSent|} |]
					      	      	      	              	          	      	  MemoryTransitions_opt_2(id__)
					      	      	      	              	          	      	  )\{|internal__.TID_BalanceSTM_t8|})
					      	      	      	              	          	      )
					      	      	      	              	          	) \ {|get_angleSent,set_angleSent|}
					      	      	      	              	          )
					      	      	      	              	      	  [| {|internal__.TID_BalanceSTM_t13,set_speedCount,speedOutputE__.TID_BalanceSTM_t11,set_speedSent|} |]
					      	      	      	              	      	  MemoryTransitions_opt_4(id__,
					      	      	      	              	      	  	 const_BalanceSTM_speedUpdate)
					      	      	      	              	      	  )\{|internal__.TID_BalanceSTM_t13|})
					      	      	      	              	      )
					      	      	      	              	) \ {|set_speedSent,get_speedSent|}
					      	      	      	              )
					      	      	      	          	  [| {|internal__.TID_BalanceSTM_t12|} |]
					      	      	      	          	  MemoryTransitions_opt_1(id__,
					      	      	      	          	  	 const_BalanceSTM_loopTime)
					      	      	      	          	  )\{|internal__.TID_BalanceSTM_t12|})
					      	      	      	          )
					      	      	      	      	  [| {|set_rotationCount,set_angleReceived,set_speedCount,internal__.TID_BalanceSTM_t6|} |]
					      	      	      	      	  MemoryTransitions_opt_6(id__,
					      	      	      	      	  	 const_BalanceSTM_rotationUpdate,
					      	      	      	      	  	 const_BalanceSTM_speedUpdate)
					      	      	      	      	  )\{|internal__.TID_BalanceSTM_t6|})
					      	      	      	      )
					      	      	      	) \ {|set_speedCount,get_speedCount|}
					      	      	      )
					      	      	) \ {|set_rotationCount,get_rotationCount|}
					      	      )
					      	) \ {|set_angleReceived,get_angleReceived|}
					      )
				
				-- main process
				
				MachineMemorySyncSet = Union({
					union(
						union(
							{|get_currAngle,set_currAngle,
							get_currGyroX,set_currGyroX,
							get_currGyroY,set_currGyroY,
							get_currGyroZ,set_currGyroZ,
							get_currLeftVel,set_currLeftVel,
							get_currRightVel,set_currRightVel,
							get_speedCount,set_speedCount,
							get_rotationCount,set_rotationCount,
							get_angleOutput,set_angleOutput,
							get_speedOutput,set_speedOutput,
							get_rotationOutput,set_rotationOutput,
							get_speedSent,set_speedSent,
							get_angleSent,set_angleSent,
							get_rotationSent,set_rotationSent,
							get_angleReceived,set_angleReceived,
							get_speedIntegral,set_speedIntegral|},
							{||}
						)
							
						,
						{|internal__.TID_BalanceSTM_t6,
						angleOutputE__.TID_BalanceSTM_t5,
						internal__.TID_BalanceSTM_t8,
						internal__.TID_BalanceSTM_t7,
						speedOutputE__.TID_BalanceSTM_t11,
						internal__.TID_BalanceSTM_t13,
						internal__.TID_BalanceSTM_t14,
						rotationOutputE__.TID_BalanceSTM_t15,
						internal__.TID_BalanceSTM_t16,
						internal__.TID_BalanceSTM_t17,
						internal__.TID_BalanceSTM_t1,
						internal__.TID_BalanceSTM_t4,
						internal__.TID_BalanceSTM_t12,
						internal__.TID_BalanceSTM_t18,
						internal__.TID_BalanceSTM_t9,
						internal__.TID_BalanceSTM_t10,
						internal__.TID_BalanceSTM_t19,
						internal__.TID_BalanceSTM_t20|}
					)
				})
				
				MachineMemoryHidingSet = Union({
					union(
						{|get_currAngle,set_currAngle,
						get_currGyroX,set_currGyroX,
						get_currGyroY,set_currGyroY,
						get_currGyroZ,set_currGyroZ,
						get_currLeftVel,set_currLeftVel,
						get_currRightVel,set_currRightVel,
						get_speedCount,set_speedCount,
						get_rotationCount,set_rotationCount,
						get_angleOutput,set_angleOutput,
						get_speedOutput,set_speedOutput,
						get_rotationOutput,set_rotationOutput,
						get_speedSent,set_speedSent,
						get_angleSent,set_angleSent,
						get_rotationSent,set_rotationSent,
						get_angleReceived,set_angleReceived,
						get_speedIntegral,set_speedIntegral|},
						{||}
					)
				})
				
				MachineInternalEvents = {|
					internal__
				|}
				
				AUX(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = (
					(
						STM(id__,
								    const_BalanceSTM_maxAngle,
								    const_BalanceSTM_loopTime,
								    const_BalanceSTM_startupDelay,
								    const_BalanceSTM_speedUpdate,
								    const_BalanceSTM_rotationUpdate,
								    const_BalanceSTM_motorBudget,
								    const_BalanceSTM_angleBudget,
								    const_BalanceSTM_speedBudget,
								    const_BalanceSTM_rotationBudget)
							[|MachineMemorySyncSet|]
						sbisim(diamond(MemoryN(id__, const_BalanceSTM_maxAngle, const_BalanceSTM_loopTime, const_BalanceSTM_startupDelay, const_BalanceSTM_speedUpdate, const_BalanceSTM_rotationUpdate, const_BalanceSTM_motorBudget, const_BalanceSTM_angleBudget, const_BalanceSTM_speedBudget, const_BalanceSTM_rotationBudget)))
					)[[
						leftMotorVelocity__.x____ <- leftMotorVelocity,
						rightMotorVelocity__.x____ <- rightMotorVelocity,
						angle__.x____ <- angle,
						gyroX__.x____ <- gyroX,
						gyroY__.x____ <- gyroY,
						gyroZ__.x____ <- gyroZ,
						angleOutputE__.x____ <- angleOutputE,
						anewError__.x____ <- anewError,
						adiff__.x____ <- adiff,
						snewError__.x____ <- snewError,
						speedOutputE__.x____ <- speedOutputE,
						rdiff__.x____ <- rdiff,
						rotationOutputE__.x____ <- rotationOutputE
						| x____ <- TIDS
					]]
					\MachineMemoryHidingSet
				)
				[|{|terminate|}|>SKIP\MachineInternalEvents
				
				
				STM_core(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = 
					sbisim(diamond(STM(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget)))
					
				AUX_opt(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = 
					(MemorySTM_opt(id__,
							    const_BalanceSTM_maxAngle,
							    const_BalanceSTM_loopTime,
							    const_BalanceSTM_startupDelay,
							    const_BalanceSTM_speedUpdate,
							    const_BalanceSTM_rotationUpdate,
							    const_BalanceSTM_motorBudget,
							    const_BalanceSTM_angleBudget,
							    const_BalanceSTM_speedBudget,
							    const_BalanceSTM_rotationBudget)
					)[[
						leftMotorVelocity__.x____ <- leftMotorVelocity,
						rightMotorVelocity__.x____ <- rightMotorVelocity,
						angle__.x____ <- angle,
						gyroX__.x____ <- gyroX,
						gyroY__.x____ <- gyroY,
						gyroZ__.x____ <- gyroZ,
						angleOutputE__.x____ <- angleOutputE,
						anewError__.x____ <- anewError,
						adiff__.x____ <- adiff,
						snewError__.x____ <- snewError,
						speedOutputE__.x____ <- speedOutputE,
						rdiff__.x____ <- rdiff,
						rotationOutputE__.x____ <- rotationOutputE
						| x____ <- TIDS
					]]
					[|{|terminate|}|>SKIP\MachineInternalEvents
			
				-- definition of the behaviour of state machines (default, optimised, visible, visible and optimised)
				transparent diamond
				transparent sbisim
				transparent dbisim
				transparent chase
						
				FVS__(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = AUX_opt(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget)
				Dunopt__(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = AUX(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) \ internal_events
				D__(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = AUX_opt(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) \ internal_events
				O__(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = sbisim(diamond(D__(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget)))
				VS__(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = ShowV(FVS__(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget))
				VS_O__(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = sbisim(diamond(VS__(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget)))
				HEXT__(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) = O__(id__,
						    const_BalanceSTM_maxAngle,
						    const_BalanceSTM_loopTime,
						    const_BalanceSTM_startupDelay,
						    const_BalanceSTM_speedUpdate,
						    const_BalanceSTM_rotationUpdate,
						    const_BalanceSTM_motorBudget,
						    const_BalanceSTM_angleBudget,
						    const_BalanceSTM_speedBudget,
						    const_BalanceSTM_rotationBudget) [|shared_variable_events|] SKIP	
			endmodule
			module stm_ref1
			exports
				-- flow channels
				channel internal__ : TIDS
				channel enteredV, enterV, exitV, exitedV : SIDS
				channel enter, entered: SIDS.SIDS
				channel exit,exited: SIDS.SIDS
				channel terminate
				
				-- variable channels
				channel get_currAngleOut, set_currAngleOut: core_real
				channel get_currNewError, set_currNewError: core_real
				channel get_currDiff, set_currDiff: core_real
						
				-- shared variable channels
				
				-- local variable channels for defined operations that are required by the state machine
				
				-- declaring state machine events
				channel angleOutputE__: TIDS.InOut.core_real
				channel angleOutputE: InOut.core_real
				channel anewError__: TIDS.InOut.core_real
				channel anewError: InOut.core_real
				channel adiff__: TIDS.InOut.core_real
				channel adiff: InOut.core_real
				
				-- declaring call and ret events for undefined operations
				
				-- Only the undefined operations are declared here.
				-- If the state machine is in isolation, all required operations will be undefined.
				-- If it is in the context of a controller, the required operations not provided by the
				-- controller will be declared here, and the defined operations will be defined in the
				-- context of the Controller module, and therefore within scope of the state machien module.
				
				
				-- definition of functions used to expose flow channels
				ShowEvents(P,E) = P[[ entered.x____.y____ <- enteredV.y____ | entered.x____.y____ <- E]]
								   [[ enter.x____.y____ <- enterV.y____ | enter.x____.y____ <- E]]
								   [[ exit.x____.y____ <- exitV.y____ | exit.x____.y____ <- E]]
								   [[ exited.x____.y____ <- exitedV.y____ | exited.x____.y____ <- E ]]
									 
				ShowEnteredV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				ShowEnterV(P) = P[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				ShowExitV(P) = P[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				ShowExitedV(P) = P[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				ShowV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS]]
							[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS]]
							[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				
				-- declaring identifiers of state and final states
				datatype SIDS = SID_AnglePID
				              | SID_AnglePID_Read
				              | SID_AnglePID_UpdateOutput
				
				-- declaring identifiers of transitions
				datatype TIDS = NULLTRANSITION__
				              | TID_AnglePID_t0
				              | TID_AnglePID_t1
				              | TID_AnglePID_t2
				
				-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
				
				ITIDS = {
					TID_AnglePID_t1,	TID_AnglePID_t2
				}
				
				int_int = {|
					angleOutputE__.TID_AnglePID_t1,
					anewError__.TID_AnglePID_t1,
					adiff__.TID_AnglePID_t1,
					internal__.TID_AnglePID_t1,
					angleOutputE__.TID_AnglePID_t2,
					anewError__.TID_AnglePID_t2,
					adiff__.TID_AnglePID_t2,
					internal__.TID_AnglePID_t2
				|}
					
				
				internal_events = {|enter,entered,exit,exited|}
				shared_variable_events = {|
				|}
						
				
				-- declaring all states
				CS_AnglePID_Read_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_AnglePID_Read,SID_AnglePID_UpdateOutput},
					y____ <- {SID_AnglePID_Read}
				|}
				
				
				AnglePID_Read_triggers = {|
					internal__.TID_AnglePID_t2,
					internal__.TID_AnglePID_t1
				|}
				
				State_AnglePID_Read(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) = let
					T_AnglePID_t1(id__,
							    const_AnglePID_P,
							    const_AnglePID_D) = internal__!TID_AnglePID_t1 ->  exit.SID_AnglePID_Read.SID_AnglePID_Read -> SKIP;
										SKIP;exited.SID_AnglePID_Read.SID_AnglePID_Read -> SKIP;
										enter!SID_AnglePID_Read!SID_AnglePID_UpdateOutput -> entered!SID_AnglePID_Read!SID_AnglePID_UpdateOutput ->
										State_AnglePID_Read(id__,
												    const_AnglePID_P,
												    const_AnglePID_D)
					State_AnglePID_Read_execute(id__,o____) = true&(anewError.in?currNewError -> set_currNewError!currNewError -> SKIP);true&(adiff.in?currDiff -> set_currDiff!currDiff -> SKIP); 
						entered!o____!SID_AnglePID_Read ->
						(SKIP; STOP /\ (
							T_AnglePID_t1(id__,
									    const_AnglePID_P,
									    const_AnglePID_D)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_AnglePID_t2,TID_AnglePID_t1}) -> exit?y____:diff(SIDS,{SID_AnglePID_Read})!SID_AnglePID_Read -> (
									SKIP;
									exited!y____!SID_AnglePID_Read -> SKIP);
									State_AnglePID_Read(id__,
											    const_AnglePID_P,
											    const_AnglePID_D)
							[] angleOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_AnglePID_t2,TID_AnglePID_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_AnglePID_Read})!SID_AnglePID_Read -> (
									SKIP;
									exited!y____!SID_AnglePID_Read -> SKIP);
									State_AnglePID_Read(id__,
											    const_AnglePID_P,
											    const_AnglePID_D)
							[] anewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_AnglePID_t2,TID_AnglePID_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_AnglePID_Read})!SID_AnglePID_Read -> (
									SKIP;
									exited!y____!SID_AnglePID_Read -> SKIP);
									State_AnglePID_Read(id__,
											    const_AnglePID_P,
											    const_AnglePID_D)
							[] adiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_AnglePID_t2,TID_AnglePID_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_AnglePID_Read})!SID_AnglePID_Read -> (
									SKIP;
									exited!y____!SID_AnglePID_Read -> SKIP);
									State_AnglePID_Read(id__,
											    const_AnglePID_P,
											    const_AnglePID_D)
						))
				within
					enter?x____:diff(SIDS,{SID_AnglePID_Read})!SID_AnglePID_Read -> (State_AnglePID_Read_execute(id__,x____))
				
				CS_AnglePID_UpdateOutput_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_AnglePID_Read,SID_AnglePID_UpdateOutput},
					y____ <- {SID_AnglePID_UpdateOutput}
				|}
				
				
				AnglePID_UpdateOutput_triggers = {|
					internal__.TID_AnglePID_t2,
					internal__.TID_AnglePID_t1
				|}
				
				State_AnglePID_UpdateOutput(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) = let
					T_AnglePID_t2(id__,
							    const_AnglePID_P,
							    const_AnglePID_D) = internal__!TID_AnglePID_t2 ->  exit.SID_AnglePID_UpdateOutput.SID_AnglePID_UpdateOutput -> SKIP;
										SKIP;exited.SID_AnglePID_UpdateOutput.SID_AnglePID_UpdateOutput -> SKIP;
										get_currAngleOut?currAngleOut -> true&(angleOutputE.out!currAngleOut -> SKIP);enter!SID_AnglePID_UpdateOutput!SID_AnglePID_Read -> entered!SID_AnglePID_UpdateOutput!SID_AnglePID_Read ->
										State_AnglePID_UpdateOutput(id__,
												    const_AnglePID_P,
												    const_AnglePID_D)
					State_AnglePID_UpdateOutput_execute(id__,o____) = get_currDiff?currDiff -> get_currNewError?currNewError -> true & (set_currAngleOut!Plus(Mult(currNewError, const_AnglePID_P, core_real), Mult(currDiff, const_AnglePID_D, core_real), core_real) -> SKIP); 
						entered!o____!SID_AnglePID_UpdateOutput ->
						(SKIP; STOP /\ (
							T_AnglePID_t2(id__,
									    const_AnglePID_P,
									    const_AnglePID_D)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_AnglePID_t2,TID_AnglePID_t1}) -> exit?y____:diff(SIDS,{SID_AnglePID_UpdateOutput})!SID_AnglePID_UpdateOutput -> (
									SKIP;
									exited!y____!SID_AnglePID_UpdateOutput -> SKIP);
									State_AnglePID_UpdateOutput(id__,
											    const_AnglePID_P,
											    const_AnglePID_D)
							[] angleOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_AnglePID_t2,TID_AnglePID_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_AnglePID_UpdateOutput})!SID_AnglePID_UpdateOutput -> (
									SKIP;
									exited!y____!SID_AnglePID_UpdateOutput -> SKIP);
									State_AnglePID_UpdateOutput(id__,
											    const_AnglePID_P,
											    const_AnglePID_D)
							[] anewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_AnglePID_t2,TID_AnglePID_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_AnglePID_UpdateOutput})!SID_AnglePID_UpdateOutput -> (
									SKIP;
									exited!y____!SID_AnglePID_UpdateOutput -> SKIP);
									State_AnglePID_UpdateOutput(id__,
											    const_AnglePID_P,
											    const_AnglePID_D)
							[] adiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_AnglePID_t2,TID_AnglePID_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_AnglePID_UpdateOutput})!SID_AnglePID_UpdateOutput -> (
									SKIP;
									exited!y____!SID_AnglePID_UpdateOutput -> SKIP);
									State_AnglePID_UpdateOutput(id__,
											    const_AnglePID_P,
											    const_AnglePID_D)
						))
				within
					enter?x____:diff(SIDS,{SID_AnglePID_UpdateOutput})!SID_AnglePID_UpdateOutput -> (State_AnglePID_UpdateOutput_execute(id__,x____))
				
				
				I_AnglePID_i0(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) = let
					T_AnglePID_t0(id__,
							    const_AnglePID_P,
							    const_AnglePID_D) = internal__!TID_AnglePID_t0 -> enter!SID_AnglePID!SID_AnglePID_Read -> entered!SID_AnglePID!SID_AnglePID_Read ->
					SKIP
				within
					T_AnglePID_t0(id__,
							    const_AnglePID_P,
							    const_AnglePID_D)
				
				
				State_AnglePID_Read_R(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) = 
					State_AnglePID_Read(id__,
							    const_AnglePID_P,
							    const_AnglePID_D)
						[|diff(int_int,AnglePID_Read_triggers)|]
					SKIP
						 		
				State_AnglePID_UpdateOutput_R(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) = 
					State_AnglePID_UpdateOutput(id__,
							    const_AnglePID_P,
							    const_AnglePID_D)
						[|diff(int_int,AnglePID_UpdateOutput_triggers)|]
					SKIP
						 		
					
				STM(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) = (
					I_AnglePID_i0(id__,
							    const_AnglePID_P,
							    const_AnglePID_D)
						[|
							{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
								x____ <- diff(SIDS,{SID_AnglePID_Read,SID_AnglePID_UpdateOutput}),
								y____ <- {SID_AnglePID_Read,SID_AnglePID_UpdateOutput}
						|}|]
					(
						State_AnglePID_Read_R(id__,
								    const_AnglePID_P,
								    const_AnglePID_D)
							[|inter(CS_AnglePID_Read_sync,CS_AnglePID_UpdateOutput_sync)|]
						State_AnglePID_UpdateOutput_R(id__,
								    const_AnglePID_P,
								    const_AnglePID_D)
					)
				)
				
				-- optimized memory process
				channel getV_currAngleOut: core_real
				channel getV_currNewError: core_real
				channel getV_currDiff: core_real
				
				-- individual memory processes
				Memory_currAngleOut(currAngleOut) = (
					get_currAngleOut!currAngleOut -> Memory_currAngleOut(currAngleOut)
					[]
					getV_currAngleOut!currAngleOut -> Memory_currAngleOut(currAngleOut)
					[]
					set_currAngleOut?x__ -> Memory_currAngleOut(x__)
				)
				Memory_currNewError(currNewError) = (
					get_currNewError!currNewError -> Memory_currNewError(currNewError)
					[]
					getV_currNewError!currNewError -> Memory_currNewError(currNewError)
					[]
					set_currNewError?x__ -> Memory_currNewError(x__)
				)
				Memory_currDiff(currDiff) = (
					get_currDiff!currDiff -> Memory_currDiff(currDiff)
					[]
					getV_currDiff!currDiff -> Memory_currDiff(currDiff)
					[]
					set_currDiff?x__ -> Memory_currDiff(x__)
				)
				
				-- processes that read variables and offer transitions
				MemoryTransitions(id__, currAngleOut
							, currNewError
							, currDiff
							,
						    const_AnglePID_P,
						    const_AnglePID_D) = 		
				(internal__!TID_AnglePID_t0 -> SKIP
				[]
				internal__!TID_AnglePID_t1 -> SKIP
				[]
				internal__!TID_AnglePID_t2 -> SKIP[]
				set_currAngleOut?x__ -> SKIP[]
				set_currNewError?x__ -> SKIP[]
				set_currDiff?x__ -> SKIP)
				
				MemoryTransitions_AnglePID(id__, const_AnglePID_P, const_AnglePID_D) = (getV_currAngleOut?currAngleOut ->
				getV_currNewError?currNewError ->
				getV_currDiff?currDiff ->
				MemoryTransitions(id__, currAngleOut
							, currNewError
							, currDiff
							,
						    const_AnglePID_P,
						    const_AnglePID_D); MemoryTransitions_AnglePID(id__, const_AnglePID_P, const_AnglePID_D))			
				
				-- synchronisation, hiding and process sets 
				MemoryVariablesProcesses_AnglePID = Union(
					{
						{
							(Memory_currAngleOut(0),{|set_currAngleOut,get_currAngleOut,getV_currAngleOut|}),
							(Memory_currNewError(0),{|getV_currNewError,set_currNewError,get_currNewError|}),
							(Memory_currDiff(0),{|set_currDiff,getV_currDiff,get_currDiff|})
						}
					}
				)
				
				MemoryVariablesSyncSet = Union({
					{|
						set_currAngleOut,
						getV_currNewError,
						set_currDiff,
						set_currNewError,
						getV_currAngleOut,
						getV_currDiff
					|}	
				})
				
				MemoryVariablesHideSet = Union({
					{|
						getV_currNewError,
						getV_currAngleOut,
						getV_currDiff
					|}
				})
				
				-- combined individual memory processes
				MemoryVariables = ||| (P, alpha) : MemoryVariablesProcesses_AnglePID @ P
				
				-- complete memory process	
				MemoryN(id__, const_AnglePID_P, const_AnglePID_D) = sbisim(diamond((sbisim(diamond(MemoryVariables)) [| MemoryVariablesSyncSet |] sbisim(diamond(MemoryTransitions_AnglePID(id__, const_AnglePID_P, const_AnglePID_D)))) \ MemoryVariablesHideSet))
				
				-- optimised memory
				-- Sets of named elements identified according to transition conditions:
				-- {}
				-- Summary of all identified named elements:
				-- {
				-- currAngleOut
				-- currNewError
				-- currDiff
				-- }
				
				-- Allocation plan:
				-- 0:{}
				--	=> {
				--		TID_AnglePID_t2,
				--		TID_AnglePID_t0,
				--		TID_AnglePID_t1}
				
				-- Memory transition processes
				MemoryTransitions_opt_0(id__) =
				(
					let
						Update = Current(id__)
						Current(id__)
						 	   = 
						 	   internal__!TID_AnglePID_t2 -> Update
						 	   []
						 	   internal__!TID_AnglePID_t0 -> Update
						 	   []
						 	   internal__!TID_AnglePID_t1 -> Update
					within
						Update
				)
				
				-- Memory cell processes
				Memory_opt_currAngleOut(x__) = ( 
					get_currAngleOut!x__ -> Memory_opt_currAngleOut(x__)
					[]
					set_currAngleOut?x__ -> Memory_opt_currAngleOut(x__)
				)
				Memory_opt_currNewError(x__) = ( 
					get_currNewError!x__ -> Memory_opt_currNewError(x__)
					[]
					set_currNewError?x__ -> Memory_opt_currNewError(x__)
				)
				Memory_opt_currDiff(x__) = ( 
					get_currDiff!x__ -> Memory_opt_currDiff(x__)
					[]
					set_currDiff?x__ -> Memory_opt_currDiff(x__)
				)
				
				-- Composition of memory, StateMachine and Memory transition processes
				
				MemorySTM_opt(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) =
					sbisim(	
					  dbisim(
					    sbisim(dbisim(sbisim(Memory_opt_currAngleOut(0)
					          	[| {|set_currAngleOut,get_currAngleOut|} |] 
					          	dbisim(sbisim(Memory_opt_currNewError(0)
					          	      	[| {|set_currNewError,get_currNewError|} |] 
					          	      	dbisim(sbisim(Memory_opt_currDiff(0)
					          	      	      	[| {|set_currDiff,get_currDiff|} |] 
					          	      	      	STM_core(id__,
					          	      	      			    const_AnglePID_P,
					          	      	      			    const_AnglePID_D)
					          	      	      	)\ {|set_currDiff,get_currDiff|}
					          	      	      )
					          	      	)\ {|set_currNewError,get_currNewError|}
					          	      )
					          	)\ {|set_currAngleOut,get_currAngleOut|}
					          )
					      	  [| {|internal__.TID_AnglePID_t1,internal__.TID_AnglePID_t0,internal__.TID_AnglePID_t2|} |]
					      	  MemoryTransitions_opt_0(id__)
					      	  )\{|internal__.TID_AnglePID_t1,internal__.TID_AnglePID_t0,internal__.TID_AnglePID_t2|})
					      )
				
				-- main process
				
				MachineMemorySyncSet = Union({
					union(
						union(
							{|get_currAngleOut,set_currAngleOut,
							get_currNewError,set_currNewError,
							get_currDiff,set_currDiff|},
							{||}
						)
							
						,
						{|internal__.TID_AnglePID_t0,
						internal__.TID_AnglePID_t1,
						internal__.TID_AnglePID_t2|}
					)
				})
				
				MachineMemoryHidingSet = Union({
					union(
						{|get_currAngleOut,set_currAngleOut,
						get_currNewError,set_currNewError,
						get_currDiff,set_currDiff|},
						{||}
					)
				})
				
				MachineInternalEvents = {|
					internal__
				|}
				
				AUX(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) = (
					(
						STM(id__,
								    const_AnglePID_P,
								    const_AnglePID_D)
							[|MachineMemorySyncSet|]
						sbisim(diamond(MemoryN(id__, const_AnglePID_P, const_AnglePID_D)))
					)[[
						angleOutputE__.x____ <- angleOutputE,
						anewError__.x____ <- anewError,
						adiff__.x____ <- adiff
						| x____ <- TIDS
					]]
					\MachineMemoryHidingSet
				)
				[|{|terminate|}|>SKIP\MachineInternalEvents
				
				
				STM_core(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) = 
					sbisim(diamond(STM(id__,
							    const_AnglePID_P,
							    const_AnglePID_D)))
					
				AUX_opt(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) = 
					(MemorySTM_opt(id__,
							    const_AnglePID_P,
							    const_AnglePID_D)
					)[[
						angleOutputE__.x____ <- angleOutputE,
						anewError__.x____ <- anewError,
						adiff__.x____ <- adiff
						| x____ <- TIDS
					]]
					[|{|terminate|}|>SKIP\MachineInternalEvents
			
				-- definition of the behaviour of state machines (default, optimised, visible, visible and optimised)
				transparent diamond
				transparent sbisim
				transparent dbisim
				transparent chase
						
				FVS__(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) = AUX_opt(id__,
						    const_AnglePID_P,
						    const_AnglePID_D)
				Dunopt__(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) = AUX(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) \ internal_events
				D__(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) = AUX_opt(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) \ internal_events
				O__(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) = sbisim(diamond(D__(id__,
						    const_AnglePID_P,
						    const_AnglePID_D)))
				VS__(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) = ShowV(FVS__(id__,
						    const_AnglePID_P,
						    const_AnglePID_D))
				VS_O__(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) = sbisim(diamond(VS__(id__,
						    const_AnglePID_P,
						    const_AnglePID_D)))
				HEXT__(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) = O__(id__,
						    const_AnglePID_P,
						    const_AnglePID_D) [|shared_variable_events|] SKIP	
			endmodule
			module stm_ref2
			exports
				-- flow channels
				channel internal__ : TIDS
				channel enteredV, enterV, exitV, exitedV : SIDS
				channel enter, entered: SIDS.SIDS
				channel exit,exited: SIDS.SIDS
				channel terminate
				
				-- variable channels
				channel get_currNewError, set_currNewError: core_real
				channel get_currSpeedOutput, set_currSpeedOutput: core_real
				channel get_speedIntegral, set_speedIntegral: core_real
						
				-- shared variable channels
				
				-- local variable channels for defined operations that are required by the state machine
				
				-- declaring state machine events
				channel snewError__: TIDS.InOut.core_real
				channel snewError: InOut.core_real
				channel speedOutputE__: TIDS.InOut.core_real
				channel speedOutputE: InOut.core_real
				
				-- declaring call and ret events for undefined operations
				
				-- Only the undefined operations are declared here.
				-- If the state machine is in isolation, all required operations will be undefined.
				-- If it is in the context of a controller, the required operations not provided by the
				-- controller will be declared here, and the defined operations will be defined in the
				-- context of the Controller module, and therefore within scope of the state machien module.
				
				
				-- definition of functions used to expose flow channels
				ShowEvents(P,E) = P[[ entered.x____.y____ <- enteredV.y____ | entered.x____.y____ <- E]]
								   [[ enter.x____.y____ <- enterV.y____ | enter.x____.y____ <- E]]
								   [[ exit.x____.y____ <- exitV.y____ | exit.x____.y____ <- E]]
								   [[ exited.x____.y____ <- exitedV.y____ | exited.x____.y____ <- E ]]
									 
				ShowEnteredV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				ShowEnterV(P) = P[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				ShowExitV(P) = P[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				ShowExitedV(P) = P[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				ShowV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS]]
							[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS]]
							[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				
				-- declaring identifiers of state and final states
				datatype SIDS = SID_SpeedPID
				              | SID_SpeedPID_Read
				              | SID_SpeedPID_UpdateIntegral
				              | SID_SpeedPID_UpdateOutput
				
				-- declaring identifiers of transitions
				datatype TIDS = NULLTRANSITION__
				              | TID_SpeedPID_t0
				              | TID_SpeedPID_t1
				              | TID_SpeedPID_t2
				              | TID_SpeedPID_t3
				
				-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
				
				ITIDS = {
					TID_SpeedPID_t1,	TID_SpeedPID_t2,	TID_SpeedPID_t3
				}
				
				int_int = {|
					snewError__.TID_SpeedPID_t1,
					speedOutputE__.TID_SpeedPID_t1,
					internal__.TID_SpeedPID_t1,
					snewError__.TID_SpeedPID_t2,
					speedOutputE__.TID_SpeedPID_t2,
					internal__.TID_SpeedPID_t2,
					snewError__.TID_SpeedPID_t3,
					speedOutputE__.TID_SpeedPID_t3,
					internal__.TID_SpeedPID_t3
				|}
					
				
				internal_events = {|enter,entered,exit,exited|}
				shared_variable_events = {|
				|}
						
				
				-- declaring all states
				CS_SpeedPID_Read_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_SpeedPID_Read,SID_SpeedPID_UpdateIntegral,SID_SpeedPID_UpdateOutput},
					y____ <- {SID_SpeedPID_Read}
				|}
				
				
				SpeedPID_Read_triggers = {|
					snewError__.TID_SpeedPID_t3,
					internal__.TID_SpeedPID_t1,
					internal__.TID_SpeedPID_t2
				|}
				
				State_SpeedPID_Read(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = let
					T_SpeedPID_t3(id__,
							    const_SpeedPID_P,
							    const_SpeedPID_I,
							    const_SpeedPID_maxIntegral) = snewError__!TID_SpeedPID_t3.in?currNewError -> set_currNewError!currNewError ->  (exit.SID_SpeedPID_Read.SID_SpeedPID_Read -> SKIP;
										SKIP;exited.SID_SpeedPID_Read.SID_SpeedPID_Read -> SKIP;
										enter!SID_SpeedPID_Read!SID_SpeedPID_UpdateIntegral -> entered!SID_SpeedPID_Read!SID_SpeedPID_UpdateIntegral ->
										State_SpeedPID_Read(id__,
												    const_SpeedPID_P,
												    const_SpeedPID_I,
												    const_SpeedPID_maxIntegral)
					)
					State_SpeedPID_Read_execute(id__,o____) = SKIP; 
						entered!o____!SID_SpeedPID_Read ->
						(SKIP; STOP /\ (
							T_SpeedPID_t3(id__,
									    const_SpeedPID_P,
									    const_SpeedPID_I,
									    const_SpeedPID_maxIntegral)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_SpeedPID_t3,TID_SpeedPID_t1,TID_SpeedPID_t2}) -> exit?y____:diff(SIDS,{SID_SpeedPID_Read})!SID_SpeedPID_Read -> (
									SKIP;
									exited!y____!SID_SpeedPID_Read -> SKIP);
									State_SpeedPID_Read(id__,
											    const_SpeedPID_P,
											    const_SpeedPID_I,
											    const_SpeedPID_maxIntegral)
							[] snewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_SpeedPID_t3,TID_SpeedPID_t1,TID_SpeedPID_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_SpeedPID_Read})!SID_SpeedPID_Read -> (
									SKIP;
									exited!y____!SID_SpeedPID_Read -> SKIP);
									State_SpeedPID_Read(id__,
											    const_SpeedPID_P,
											    const_SpeedPID_I,
											    const_SpeedPID_maxIntegral)
							[] speedOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_SpeedPID_t3,TID_SpeedPID_t1,TID_SpeedPID_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_SpeedPID_Read})!SID_SpeedPID_Read -> (
									SKIP;
									exited!y____!SID_SpeedPID_Read -> SKIP);
									State_SpeedPID_Read(id__,
											    const_SpeedPID_P,
											    const_SpeedPID_I,
											    const_SpeedPID_maxIntegral)
						))
				within
					enter?x____:diff(SIDS,{SID_SpeedPID_Read})!SID_SpeedPID_Read -> (State_SpeedPID_Read_execute(id__,x____))
				
				CS_SpeedPID_UpdateIntegral_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_SpeedPID_Read,SID_SpeedPID_UpdateIntegral,SID_SpeedPID_UpdateOutput},
					y____ <- {SID_SpeedPID_UpdateIntegral}
				|}
				
				
				SpeedPID_UpdateIntegral_triggers = {|
					snewError__.TID_SpeedPID_t3,
					internal__.TID_SpeedPID_t1,
					internal__.TID_SpeedPID_t2
				|}
				
				State_SpeedPID_UpdateIntegral(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = let
					T_SpeedPID_t1(id__,
							    const_SpeedPID_P,
							    const_SpeedPID_I,
							    const_SpeedPID_maxIntegral) = internal__!TID_SpeedPID_t1 ->  exit.SID_SpeedPID_UpdateIntegral.SID_SpeedPID_UpdateIntegral -> SKIP;
										SKIP;exited.SID_SpeedPID_UpdateIntegral.SID_SpeedPID_UpdateIntegral -> SKIP;
										enter!SID_SpeedPID_UpdateIntegral!SID_SpeedPID_UpdateOutput -> entered!SID_SpeedPID_UpdateIntegral!SID_SpeedPID_UpdateOutput ->
										State_SpeedPID_UpdateIntegral(id__,
												    const_SpeedPID_P,
												    const_SpeedPID_I,
												    const_SpeedPID_maxIntegral)
					State_SpeedPID_UpdateIntegral_execute(id__,o____) = get_currNewError?currNewError -> get_speedIntegral?speedIntegral -> true & (set_speedIntegral!Plus(speedIntegral, currNewError, core_real) -> SKIP);get_speedIntegral?speedIntegral -> true & (set_speedIntegral!(if (speedIntegral>const_SpeedPID_maxIntegral) then const_SpeedPID_maxIntegral else (if (speedIntegral<Neg(const_SpeedPID_maxIntegral, core_int)) then Neg(const_SpeedPID_maxIntegral, core_int) else speedIntegral)) -> SKIP); 
						entered!o____!SID_SpeedPID_UpdateIntegral ->
						(SKIP; STOP /\ (
							T_SpeedPID_t1(id__,
									    const_SpeedPID_P,
									    const_SpeedPID_I,
									    const_SpeedPID_maxIntegral)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_SpeedPID_t3,TID_SpeedPID_t1,TID_SpeedPID_t2}) -> exit?y____:diff(SIDS,{SID_SpeedPID_UpdateIntegral})!SID_SpeedPID_UpdateIntegral -> (
									SKIP;
									exited!y____!SID_SpeedPID_UpdateIntegral -> SKIP);
									State_SpeedPID_UpdateIntegral(id__,
											    const_SpeedPID_P,
											    const_SpeedPID_I,
											    const_SpeedPID_maxIntegral)
							[] snewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_SpeedPID_t3,TID_SpeedPID_t1,TID_SpeedPID_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_SpeedPID_UpdateIntegral})!SID_SpeedPID_UpdateIntegral -> (
									SKIP;
									exited!y____!SID_SpeedPID_UpdateIntegral -> SKIP);
									State_SpeedPID_UpdateIntegral(id__,
											    const_SpeedPID_P,
											    const_SpeedPID_I,
											    const_SpeedPID_maxIntegral)
							[] speedOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_SpeedPID_t3,TID_SpeedPID_t1,TID_SpeedPID_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_SpeedPID_UpdateIntegral})!SID_SpeedPID_UpdateIntegral -> (
									SKIP;
									exited!y____!SID_SpeedPID_UpdateIntegral -> SKIP);
									State_SpeedPID_UpdateIntegral(id__,
											    const_SpeedPID_P,
											    const_SpeedPID_I,
											    const_SpeedPID_maxIntegral)
						))
				within
					enter?x____:diff(SIDS,{SID_SpeedPID_UpdateIntegral})!SID_SpeedPID_UpdateIntegral -> (State_SpeedPID_UpdateIntegral_execute(id__,x____))
				
				CS_SpeedPID_UpdateOutput_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_SpeedPID_Read,SID_SpeedPID_UpdateIntegral,SID_SpeedPID_UpdateOutput},
					y____ <- {SID_SpeedPID_UpdateOutput}
				|}
				
				
				SpeedPID_UpdateOutput_triggers = {|
					snewError__.TID_SpeedPID_t3,
					internal__.TID_SpeedPID_t1,
					internal__.TID_SpeedPID_t2
				|}
				
				State_SpeedPID_UpdateOutput(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = let
					T_SpeedPID_t2(id__,
							    const_SpeedPID_P,
							    const_SpeedPID_I,
							    const_SpeedPID_maxIntegral) = internal__!TID_SpeedPID_t2 ->  exit.SID_SpeedPID_UpdateOutput.SID_SpeedPID_UpdateOutput -> SKIP;
										SKIP;exited.SID_SpeedPID_UpdateOutput.SID_SpeedPID_UpdateOutput -> SKIP;
										get_currSpeedOutput?currSpeedOutput -> true&(speedOutputE.out!currSpeedOutput -> SKIP);enter!SID_SpeedPID_UpdateOutput!SID_SpeedPID_Read -> entered!SID_SpeedPID_UpdateOutput!SID_SpeedPID_Read ->
										State_SpeedPID_UpdateOutput(id__,
												    const_SpeedPID_P,
												    const_SpeedPID_I,
												    const_SpeedPID_maxIntegral)
					State_SpeedPID_UpdateOutput_execute(id__,o____) = get_currNewError?currNewError -> get_speedIntegral?speedIntegral -> true & (set_currSpeedOutput!Plus(Mult(currNewError, const_SpeedPID_P, core_real), Mult(speedIntegral, const_SpeedPID_I, core_real), core_real) -> SKIP); 
						entered!o____!SID_SpeedPID_UpdateOutput ->
						(SKIP; STOP /\ (
							T_SpeedPID_t2(id__,
									    const_SpeedPID_P,
									    const_SpeedPID_I,
									    const_SpeedPID_maxIntegral)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_SpeedPID_t3,TID_SpeedPID_t1,TID_SpeedPID_t2}) -> exit?y____:diff(SIDS,{SID_SpeedPID_UpdateOutput})!SID_SpeedPID_UpdateOutput -> (
									SKIP;
									exited!y____!SID_SpeedPID_UpdateOutput -> SKIP);
									State_SpeedPID_UpdateOutput(id__,
											    const_SpeedPID_P,
											    const_SpeedPID_I,
											    const_SpeedPID_maxIntegral)
							[] snewError__?x____:diff(ITIDS,{NULLTRANSITION__,TID_SpeedPID_t3,TID_SpeedPID_t1,TID_SpeedPID_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_SpeedPID_UpdateOutput})!SID_SpeedPID_UpdateOutput -> (
									SKIP;
									exited!y____!SID_SpeedPID_UpdateOutput -> SKIP);
									State_SpeedPID_UpdateOutput(id__,
											    const_SpeedPID_P,
											    const_SpeedPID_I,
											    const_SpeedPID_maxIntegral)
							[] speedOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_SpeedPID_t3,TID_SpeedPID_t1,TID_SpeedPID_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_SpeedPID_UpdateOutput})!SID_SpeedPID_UpdateOutput -> (
									SKIP;
									exited!y____!SID_SpeedPID_UpdateOutput -> SKIP);
									State_SpeedPID_UpdateOutput(id__,
											    const_SpeedPID_P,
											    const_SpeedPID_I,
											    const_SpeedPID_maxIntegral)
						))
				within
					enter?x____:diff(SIDS,{SID_SpeedPID_UpdateOutput})!SID_SpeedPID_UpdateOutput -> (State_SpeedPID_UpdateOutput_execute(id__,x____))
				
				
				I_SpeedPID_i0(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = let
					T_SpeedPID_t0(id__,
							    const_SpeedPID_P,
							    const_SpeedPID_I,
							    const_SpeedPID_maxIntegral) = internal__!TID_SpeedPID_t0 -> enter!SID_SpeedPID!SID_SpeedPID_Read -> entered!SID_SpeedPID!SID_SpeedPID_Read ->
					SKIP
				within
					T_SpeedPID_t0(id__,
							    const_SpeedPID_P,
							    const_SpeedPID_I,
							    const_SpeedPID_maxIntegral)
				
				
				State_SpeedPID_Read_R(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = 
					State_SpeedPID_Read(id__,
							    const_SpeedPID_P,
							    const_SpeedPID_I,
							    const_SpeedPID_maxIntegral)
						[|diff(int_int,SpeedPID_Read_triggers)|]
					SKIP
						 		
				State_SpeedPID_UpdateIntegral_R(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = 
					State_SpeedPID_UpdateIntegral(id__,
							    const_SpeedPID_P,
							    const_SpeedPID_I,
							    const_SpeedPID_maxIntegral)
						[|diff(int_int,SpeedPID_UpdateIntegral_triggers)|]
					SKIP
						 		
				State_SpeedPID_UpdateOutput_R(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = 
					State_SpeedPID_UpdateOutput(id__,
							    const_SpeedPID_P,
							    const_SpeedPID_I,
							    const_SpeedPID_maxIntegral)
						[|diff(int_int,SpeedPID_UpdateOutput_triggers)|]
					SKIP
						 		
					
				STM(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = (
					I_SpeedPID_i0(id__,
							    const_SpeedPID_P,
							    const_SpeedPID_I,
							    const_SpeedPID_maxIntegral)
						[|
							{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
								x____ <- diff(SIDS,{SID_SpeedPID_Read,SID_SpeedPID_UpdateIntegral,SID_SpeedPID_UpdateOutput}),
								y____ <- {SID_SpeedPID_Read,SID_SpeedPID_UpdateIntegral,SID_SpeedPID_UpdateOutput}
						|}|]
					(
						State_SpeedPID_Read_R(id__,
								    const_SpeedPID_P,
								    const_SpeedPID_I,
								    const_SpeedPID_maxIntegral)
							[|inter(CS_SpeedPID_Read_sync,union(CS_SpeedPID_UpdateIntegral_sync,CS_SpeedPID_UpdateOutput_sync))|]
						(
							State_SpeedPID_UpdateIntegral_R(id__,
									    const_SpeedPID_P,
									    const_SpeedPID_I,
									    const_SpeedPID_maxIntegral)
								[|inter(CS_SpeedPID_UpdateIntegral_sync,CS_SpeedPID_UpdateOutput_sync)|]
							State_SpeedPID_UpdateOutput_R(id__,
									    const_SpeedPID_P,
									    const_SpeedPID_I,
									    const_SpeedPID_maxIntegral)
						)
					)
				)
				
				-- optimized memory process
				channel getV_currNewError: core_real
				channel getV_currSpeedOutput: core_real
				channel getV_speedIntegral: core_real
				
				-- individual memory processes
				Memory_currNewError(currNewError) = (
					get_currNewError!currNewError -> Memory_currNewError(currNewError)
					[]
					getV_currNewError!currNewError -> Memory_currNewError(currNewError)
					[]
					set_currNewError?x__ -> Memory_currNewError(x__)
					[]
					snewError__!TID_SpeedPID_t3.in?currNewError -> Memory_currNewError(currNewError)
				)
				Memory_currSpeedOutput(currSpeedOutput) = (
					get_currSpeedOutput!currSpeedOutput -> Memory_currSpeedOutput(currSpeedOutput)
					[]
					getV_currSpeedOutput!currSpeedOutput -> Memory_currSpeedOutput(currSpeedOutput)
					[]
					set_currSpeedOutput?x__ -> Memory_currSpeedOutput(x__)
				)
				Memory_speedIntegral(speedIntegral) = (
					get_speedIntegral!speedIntegral -> Memory_speedIntegral(speedIntegral)
					[]
					getV_speedIntegral!speedIntegral -> Memory_speedIntegral(speedIntegral)
					[]
					set_speedIntegral?x__ -> Memory_speedIntegral(x__)
				)
				
				-- processes that read variables and offer transitions
				MemoryTransitions(id__, currNewError
							, currSpeedOutput
							, speedIntegral
							,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = 		
				(internal__!TID_SpeedPID_t0 -> SKIP
				[]
				internal__!TID_SpeedPID_t1 -> SKIP
				[]
				internal__!TID_SpeedPID_t2 -> SKIP
				[]
				snewError__!TID_SpeedPID_t3.in?currNewError -> SKIP[]
				set_currNewError?x__ -> SKIP[]
				set_currSpeedOutput?x__ -> SKIP[]
				set_speedIntegral?x__ -> SKIP)
				
				MemoryTransitions_SpeedPID(id__, const_SpeedPID_P, const_SpeedPID_I, const_SpeedPID_maxIntegral) = (getV_currNewError?currNewError ->
				getV_currSpeedOutput?currSpeedOutput ->
				getV_speedIntegral?speedIntegral ->
				MemoryTransitions(id__, currNewError
							, currSpeedOutput
							, speedIntegral
							,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral); MemoryTransitions_SpeedPID(id__, const_SpeedPID_P, const_SpeedPID_I, const_SpeedPID_maxIntegral))			
				
				-- synchronisation, hiding and process sets 
				MemoryVariablesProcesses_SpeedPID = Union(
					{
						{
							(Memory_currNewError(0),{|snewError__.TID_SpeedPID_t3,getV_currNewError,set_currNewError,get_currNewError|}),
							(Memory_currSpeedOutput(0),{|getV_currSpeedOutput,get_currSpeedOutput,set_currSpeedOutput|}),
							(Memory_speedIntegral(0),{|set_speedIntegral,get_speedIntegral,getV_speedIntegral|})
						}
					}
				)
				
				MemoryVariablesSyncSet = Union({
					{|
						snewError__.TID_SpeedPID_t3,
						getV_currNewError,
						getV_currSpeedOutput,
						set_currNewError,
						set_speedIntegral,
						set_currSpeedOutput,
						getV_speedIntegral
					|}	
				})
				
				MemoryVariablesHideSet = Union({
					{|
						getV_currNewError,
						getV_currSpeedOutput,
						getV_speedIntegral
					|}
				})
				
				-- combined individual memory processes
				MemoryVariables = ||| (P, alpha) : MemoryVariablesProcesses_SpeedPID @ P
				
				-- complete memory process	
				MemoryN(id__, const_SpeedPID_P, const_SpeedPID_I, const_SpeedPID_maxIntegral) = sbisim(diamond((sbisim(diamond(MemoryVariables)) [| MemoryVariablesSyncSet |] sbisim(diamond(MemoryTransitions_SpeedPID(id__, const_SpeedPID_P, const_SpeedPID_I, const_SpeedPID_maxIntegral)))) \ MemoryVariablesHideSet))
				
				-- optimised memory
				-- Sets of named elements identified according to transition conditions:
				-- {}
				-- Summary of all identified named elements:
				-- {
				-- currNewError
				-- currSpeedOutput
				-- speedIntegral
				-- }
				
				-- Allocation plan:
				-- 0:{}
				--	=> {
				--		TID_SpeedPID_t3,
				--		TID_SpeedPID_t1,
				--		TID_SpeedPID_t2,
				--		TID_SpeedPID_t0}
				
				-- Memory transition processes
				MemoryTransitions_opt_0(id__) =
				(
					let
						Update = Current(id__)
						Current(id__)
						 	   = 
						 	   snewError__!TID_SpeedPID_t3.in?currNewError -> Update
						 	   []
						 	   internal__!TID_SpeedPID_t1 -> Update
						 	   []
						 	   internal__!TID_SpeedPID_t2 -> Update
						 	   []
						 	   internal__!TID_SpeedPID_t0 -> Update
					within
						Update
				)
				
				-- Memory cell processes
				Memory_opt_currNewError(x__) = ( 
					get_currNewError!x__ -> Memory_opt_currNewError(x__)
					[]
					set_currNewError?x__ -> Memory_opt_currNewError(x__)
				)
				Memory_opt_currSpeedOutput(x__) = ( 
					get_currSpeedOutput!x__ -> Memory_opt_currSpeedOutput(x__)
					[]
					set_currSpeedOutput?x__ -> Memory_opt_currSpeedOutput(x__)
				)
				Memory_opt_speedIntegral(x__) = ( 
					get_speedIntegral!x__ -> Memory_opt_speedIntegral(x__)
					[]
					set_speedIntegral?x__ -> Memory_opt_speedIntegral(x__)
				)
				
				-- Composition of memory, StateMachine and Memory transition processes
				
				MemorySTM_opt(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) =
					sbisim(	
					  dbisim(
					    sbisim(dbisim(sbisim(Memory_opt_currNewError(0)
					          	[| {|set_currNewError,get_currNewError|} |] 
					          	dbisim(sbisim(Memory_opt_currSpeedOutput(0)
					          	      	[| {|set_currSpeedOutput,get_currSpeedOutput|} |] 
					          	      	dbisim(sbisim(Memory_opt_speedIntegral(0)
					          	      	      	[| {|set_speedIntegral,get_speedIntegral|} |] 
					          	      	      	STM_core(id__,
					          	      	      			    const_SpeedPID_P,
					          	      	      			    const_SpeedPID_I,
					          	      	      			    const_SpeedPID_maxIntegral)
					          	      	      	)\ {|set_speedIntegral,get_speedIntegral|}
					          	      	      )
					          	      	)\ {|set_currSpeedOutput,get_currSpeedOutput|}
					          	      )
					          	)\ {|set_currNewError,get_currNewError|}
					          )
					      	  [| {|snewError__.TID_SpeedPID_t3,internal__.TID_SpeedPID_t1,internal__.TID_SpeedPID_t0,internal__.TID_SpeedPID_t2|} |]
					      	  MemoryTransitions_opt_0(id__)
					      	  )\{|internal__.TID_SpeedPID_t1,internal__.TID_SpeedPID_t0,internal__.TID_SpeedPID_t2|})
					      )
				
				-- main process
				
				MachineMemorySyncSet = Union({
					union(
						union(
							{|get_currNewError,set_currNewError,
							get_currSpeedOutput,set_currSpeedOutput,
							get_speedIntegral,set_speedIntegral|},
							{||}
						)
							
						,
						{|internal__.TID_SpeedPID_t0,
						internal__.TID_SpeedPID_t1,
						internal__.TID_SpeedPID_t2,
						snewError__.TID_SpeedPID_t3|}
					)
				})
				
				MachineMemoryHidingSet = Union({
					union(
						{|get_currNewError,set_currNewError,
						get_currSpeedOutput,set_currSpeedOutput,
						get_speedIntegral,set_speedIntegral|},
						{||}
					)
				})
				
				MachineInternalEvents = {|
					internal__
				|}
				
				AUX(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = (
					(
						STM(id__,
								    const_SpeedPID_P,
								    const_SpeedPID_I,
								    const_SpeedPID_maxIntegral)
							[|MachineMemorySyncSet|]
						sbisim(diamond(MemoryN(id__, const_SpeedPID_P, const_SpeedPID_I, const_SpeedPID_maxIntegral)))
					)[[
						snewError__.x____ <- snewError,
						speedOutputE__.x____ <- speedOutputE
						| x____ <- TIDS
					]]
					\MachineMemoryHidingSet
				)
				[|{|terminate|}|>SKIP\MachineInternalEvents
				
				
				STM_core(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = 
					sbisim(diamond(STM(id__,
							    const_SpeedPID_P,
							    const_SpeedPID_I,
							    const_SpeedPID_maxIntegral)))
					
				AUX_opt(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = 
					(MemorySTM_opt(id__,
							    const_SpeedPID_P,
							    const_SpeedPID_I,
							    const_SpeedPID_maxIntegral)
					)[[
						snewError__.x____ <- snewError,
						speedOutputE__.x____ <- speedOutputE
						| x____ <- TIDS
					]]
					[|{|terminate|}|>SKIP\MachineInternalEvents
			
				-- definition of the behaviour of state machines (default, optimised, visible, visible and optimised)
				transparent diamond
				transparent sbisim
				transparent dbisim
				transparent chase
						
				FVS__(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = AUX_opt(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral)
				Dunopt__(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = AUX(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) \ internal_events
				D__(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = AUX_opt(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) \ internal_events
				O__(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = sbisim(diamond(D__(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral)))
				VS__(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = ShowV(FVS__(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral))
				VS_O__(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = sbisim(diamond(VS__(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral)))
				HEXT__(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) = O__(id__,
						    const_SpeedPID_P,
						    const_SpeedPID_I,
						    const_SpeedPID_maxIntegral) [|shared_variable_events|] SKIP	
			endmodule
			module stm_ref3
			exports
				-- flow channels
				channel internal__ : TIDS
				channel enteredV, enterV, exitV, exitedV : SIDS
				channel enter, entered: SIDS.SIDS
				channel exit,exited: SIDS.SIDS
				channel terminate
				
				-- variable channels
				channel get_currRotationOut, set_currRotationOut: core_real
				channel get_currDiff, set_currDiff: core_real
						
				-- shared variable channels
				
				-- local variable channels for defined operations that are required by the state machine
				
				-- declaring state machine events
				channel rdiff__: TIDS.InOut.core_real
				channel rdiff: InOut.core_real
				channel rotationOutputE__: TIDS.InOut.core_real
				channel rotationOutputE: InOut.core_real
				
				-- declaring call and ret events for undefined operations
				
				-- Only the undefined operations are declared here.
				-- If the state machine is in isolation, all required operations will be undefined.
				-- If it is in the context of a controller, the required operations not provided by the
				-- controller will be declared here, and the defined operations will be defined in the
				-- context of the Controller module, and therefore within scope of the state machien module.
				
				
				-- definition of functions used to expose flow channels
				ShowEvents(P,E) = P[[ entered.x____.y____ <- enteredV.y____ | entered.x____.y____ <- E]]
								   [[ enter.x____.y____ <- enterV.y____ | enter.x____.y____ <- E]]
								   [[ exit.x____.y____ <- exitV.y____ | exit.x____.y____ <- E]]
								   [[ exited.x____.y____ <- exitedV.y____ | exited.x____.y____ <- E ]]
									 
				ShowEnteredV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				ShowEnterV(P) = P[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				ShowExitV(P) = P[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				ShowExitedV(P) = P[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				ShowV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS]]
							[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS]]
							[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				
				-- declaring identifiers of state and final states
				datatype SIDS = SID_RotationPID
				              | SID_RotationPID_Read
				              | SID_RotationPID_UpdateOutput
				
				-- declaring identifiers of transitions
				datatype TIDS = NULLTRANSITION__
				              | TID_RotationPID_t0
				              | TID_RotationPID_t1
				              | TID_RotationPID_t2
				
				-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
				
				ITIDS = {
					TID_RotationPID_t1,	TID_RotationPID_t2
				}
				
				int_int = {|
					rdiff__.TID_RotationPID_t1,
					rotationOutputE__.TID_RotationPID_t1,
					internal__.TID_RotationPID_t1,
					rdiff__.TID_RotationPID_t2,
					rotationOutputE__.TID_RotationPID_t2,
					internal__.TID_RotationPID_t2
				|}
					
				
				internal_events = {|enter,entered,exit,exited|}
				shared_variable_events = {|
				|}
						
				
				-- declaring all states
				CS_RotationPID_Read_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_RotationPID_Read,SID_RotationPID_UpdateOutput},
					y____ <- {SID_RotationPID_Read}
				|}
				
				
				RotationPID_Read_triggers = {|
					internal__.TID_RotationPID_t2,
					rdiff__.TID_RotationPID_t1
				|}
				
				State_RotationPID_Read(id__,
						    const_RotationPID_D) = let
					T_RotationPID_t1(id__,
							    const_RotationPID_D) = rdiff__!TID_RotationPID_t1.in?currDiff -> set_currDiff!currDiff ->  (exit.SID_RotationPID_Read.SID_RotationPID_Read -> SKIP;
										SKIP;exited.SID_RotationPID_Read.SID_RotationPID_Read -> SKIP;
										enter!SID_RotationPID_Read!SID_RotationPID_UpdateOutput -> entered!SID_RotationPID_Read!SID_RotationPID_UpdateOutput ->
										State_RotationPID_Read(id__,
												    const_RotationPID_D)
					)
					State_RotationPID_Read_execute(id__,o____) = SKIP; 
						entered!o____!SID_RotationPID_Read ->
						(SKIP; STOP /\ (
							T_RotationPID_t1(id__,
									    const_RotationPID_D)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_RotationPID_t2,TID_RotationPID_t1}) -> exit?y____:diff(SIDS,{SID_RotationPID_Read})!SID_RotationPID_Read -> (
									SKIP;
									exited!y____!SID_RotationPID_Read -> SKIP);
									State_RotationPID_Read(id__,
											    const_RotationPID_D)
							[] rdiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_RotationPID_t2,TID_RotationPID_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_RotationPID_Read})!SID_RotationPID_Read -> (
									SKIP;
									exited!y____!SID_RotationPID_Read -> SKIP);
									State_RotationPID_Read(id__,
											    const_RotationPID_D)
							[] rotationOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_RotationPID_t2,TID_RotationPID_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_RotationPID_Read})!SID_RotationPID_Read -> (
									SKIP;
									exited!y____!SID_RotationPID_Read -> SKIP);
									State_RotationPID_Read(id__,
											    const_RotationPID_D)
						))
				within
					enter?x____:diff(SIDS,{SID_RotationPID_Read})!SID_RotationPID_Read -> (State_RotationPID_Read_execute(id__,x____))
				
				CS_RotationPID_UpdateOutput_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_RotationPID_Read,SID_RotationPID_UpdateOutput},
					y____ <- {SID_RotationPID_UpdateOutput}
				|}
				
				
				RotationPID_UpdateOutput_triggers = {|
					internal__.TID_RotationPID_t2,
					rdiff__.TID_RotationPID_t1
				|}
				
				State_RotationPID_UpdateOutput(id__,
						    const_RotationPID_D) = let
					T_RotationPID_t2(id__,
							    const_RotationPID_D) = internal__!TID_RotationPID_t2 ->  exit.SID_RotationPID_UpdateOutput.SID_RotationPID_UpdateOutput -> SKIP;
										SKIP;exited.SID_RotationPID_UpdateOutput.SID_RotationPID_UpdateOutput -> SKIP;
										get_currRotationOut?currRotationOut -> true&(rotationOutputE.out!currRotationOut -> SKIP);enter!SID_RotationPID_UpdateOutput!SID_RotationPID_Read -> entered!SID_RotationPID_UpdateOutput!SID_RotationPID_Read ->
										State_RotationPID_UpdateOutput(id__,
												    const_RotationPID_D)
					State_RotationPID_UpdateOutput_execute(id__,o____) = get_currDiff?currDiff -> true & (set_currRotationOut!Mult(const_RotationPID_D, currDiff, core_real) -> SKIP); 
						entered!o____!SID_RotationPID_UpdateOutput ->
						(SKIP; STOP /\ (
							T_RotationPID_t2(id__,
									    const_RotationPID_D)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_RotationPID_t2,TID_RotationPID_t1}) -> exit?y____:diff(SIDS,{SID_RotationPID_UpdateOutput})!SID_RotationPID_UpdateOutput -> (
									SKIP;
									exited!y____!SID_RotationPID_UpdateOutput -> SKIP);
									State_RotationPID_UpdateOutput(id__,
											    const_RotationPID_D)
							[] rdiff__?x____:diff(ITIDS,{NULLTRANSITION__,TID_RotationPID_t2,TID_RotationPID_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_RotationPID_UpdateOutput})!SID_RotationPID_UpdateOutput -> (
									SKIP;
									exited!y____!SID_RotationPID_UpdateOutput -> SKIP);
									State_RotationPID_UpdateOutput(id__,
											    const_RotationPID_D)
							[] rotationOutputE__?x____:diff(ITIDS,{NULLTRANSITION__,TID_RotationPID_t2,TID_RotationPID_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_RotationPID_UpdateOutput})!SID_RotationPID_UpdateOutput -> (
									SKIP;
									exited!y____!SID_RotationPID_UpdateOutput -> SKIP);
									State_RotationPID_UpdateOutput(id__,
											    const_RotationPID_D)
						))
				within
					enter?x____:diff(SIDS,{SID_RotationPID_UpdateOutput})!SID_RotationPID_UpdateOutput -> (State_RotationPID_UpdateOutput_execute(id__,x____))
				
				
				I_RotationPID_i0(id__,
						    const_RotationPID_D) = let
					T_RotationPID_t0(id__,
							    const_RotationPID_D) = internal__!TID_RotationPID_t0 -> enter!SID_RotationPID!SID_RotationPID_Read -> entered!SID_RotationPID!SID_RotationPID_Read ->
					SKIP
				within
					T_RotationPID_t0(id__,
							    const_RotationPID_D)
				
				
				State_RotationPID_Read_R(id__,
						    const_RotationPID_D) = 
					State_RotationPID_Read(id__,
							    const_RotationPID_D)
						[|diff(int_int,RotationPID_Read_triggers)|]
					SKIP
						 		
				State_RotationPID_UpdateOutput_R(id__,
						    const_RotationPID_D) = 
					State_RotationPID_UpdateOutput(id__,
							    const_RotationPID_D)
						[|diff(int_int,RotationPID_UpdateOutput_triggers)|]
					SKIP
						 		
					
				STM(id__,
						    const_RotationPID_D) = (
					I_RotationPID_i0(id__,
							    const_RotationPID_D)
						[|
							{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
								x____ <- diff(SIDS,{SID_RotationPID_Read,SID_RotationPID_UpdateOutput}),
								y____ <- {SID_RotationPID_Read,SID_RotationPID_UpdateOutput}
						|}|]
					(
						State_RotationPID_Read_R(id__,
								    const_RotationPID_D)
							[|inter(CS_RotationPID_Read_sync,CS_RotationPID_UpdateOutput_sync)|]
						State_RotationPID_UpdateOutput_R(id__,
								    const_RotationPID_D)
					)
				)
				
				-- optimized memory process
				channel getV_currRotationOut: core_real
				channel getV_currDiff: core_real
				
				-- individual memory processes
				Memory_currRotationOut(currRotationOut) = (
					get_currRotationOut!currRotationOut -> Memory_currRotationOut(currRotationOut)
					[]
					getV_currRotationOut!currRotationOut -> Memory_currRotationOut(currRotationOut)
					[]
					set_currRotationOut?x__ -> Memory_currRotationOut(x__)
				)
				Memory_currDiff(currDiff) = (
					get_currDiff!currDiff -> Memory_currDiff(currDiff)
					[]
					getV_currDiff!currDiff -> Memory_currDiff(currDiff)
					[]
					set_currDiff?x__ -> Memory_currDiff(x__)
					[]
					rdiff__!TID_RotationPID_t1.in?currDiff -> Memory_currDiff(currDiff)
				)
				
				-- processes that read variables and offer transitions
				MemoryTransitions(id__, currRotationOut
							, currDiff
							,
						    const_RotationPID_D) = 		
				(internal__!TID_RotationPID_t0 -> SKIP
				[]
				rdiff__!TID_RotationPID_t1.in?currDiff -> SKIP
				[]
				internal__!TID_RotationPID_t2 -> SKIP[]
				set_currRotationOut?x__ -> SKIP[]
				set_currDiff?x__ -> SKIP)
				
				MemoryTransitions_RotationPID(id__, const_RotationPID_D) = (getV_currRotationOut?currRotationOut ->
				getV_currDiff?currDiff ->
				MemoryTransitions(id__, currRotationOut
							, currDiff
							,
						    const_RotationPID_D); MemoryTransitions_RotationPID(id__, const_RotationPID_D))			
				
				-- synchronisation, hiding and process sets 
				MemoryVariablesProcesses_RotationPID = Union(
					{
						{
							(Memory_currRotationOut(0),{|getV_currRotationOut,get_currRotationOut,set_currRotationOut|}),
							(Memory_currDiff(0),{|set_currDiff,rdiff__.TID_RotationPID_t1,getV_currDiff,get_currDiff|})
						}
					}
				)
				
				MemoryVariablesSyncSet = Union({
					{|
						getV_currRotationOut,
						set_currDiff,
						rdiff__.TID_RotationPID_t1,
						getV_currDiff,
						set_currRotationOut
					|}	
				})
				
				MemoryVariablesHideSet = Union({
					{|
						getV_currRotationOut,
						getV_currDiff
					|}
				})
				
				-- combined individual memory processes
				MemoryVariables = ||| (P, alpha) : MemoryVariablesProcesses_RotationPID @ P
				
				-- complete memory process	
				MemoryN(id__, const_RotationPID_D) = sbisim(diamond((sbisim(diamond(MemoryVariables)) [| MemoryVariablesSyncSet |] sbisim(diamond(MemoryTransitions_RotationPID(id__, const_RotationPID_D)))) \ MemoryVariablesHideSet))
				
				-- optimised memory
				-- Sets of named elements identified according to transition conditions:
				-- {}
				-- Summary of all identified named elements:
				-- {
				-- currRotationOut
				-- currDiff
				-- }
				
				-- Allocation plan:
				-- 0:{}
				--	=> {
				--		TID_RotationPID_t2,
				--		TID_RotationPID_t0,
				--		TID_RotationPID_t1}
				
				-- Memory transition processes
				MemoryTransitions_opt_0(id__) =
				(
					let
						Update = Current(id__)
						Current(id__)
						 	   = 
						 	   internal__!TID_RotationPID_t2 -> Update
						 	   []
						 	   internal__!TID_RotationPID_t0 -> Update
						 	   []
						 	   rdiff__!TID_RotationPID_t1.in?currDiff -> Update
					within
						Update
				)
				
				-- Memory cell processes
				Memory_opt_currRotationOut(x__) = ( 
					get_currRotationOut!x__ -> Memory_opt_currRotationOut(x__)
					[]
					set_currRotationOut?x__ -> Memory_opt_currRotationOut(x__)
				)
				Memory_opt_currDiff(x__) = ( 
					get_currDiff!x__ -> Memory_opt_currDiff(x__)
					[]
					set_currDiff?x__ -> Memory_opt_currDiff(x__)
				)
				
				-- Composition of memory, StateMachine and Memory transition processes
				
				MemorySTM_opt(id__,
						    const_RotationPID_D) =
					sbisim(	
					  dbisim(
					    sbisim(dbisim(sbisim(Memory_opt_currRotationOut(0)
					          	[| {|get_currRotationOut,set_currRotationOut|} |] 
					          	dbisim(sbisim(Memory_opt_currDiff(0)
					          	      	[| {|set_currDiff,get_currDiff|} |] 
					          	      	STM_core(id__,
					          	      			    const_RotationPID_D)
					          	      	)\ {|set_currDiff,get_currDiff|}
					          	      )
					          	)\ {|get_currRotationOut,set_currRotationOut|}
					          )
					      	  [| {|internal__.TID_RotationPID_t0,rdiff__.TID_RotationPID_t1,internal__.TID_RotationPID_t2|} |]
					      	  MemoryTransitions_opt_0(id__)
					      	  )\{|internal__.TID_RotationPID_t0,internal__.TID_RotationPID_t2|})
					      )
				
				-- main process
				
				MachineMemorySyncSet = Union({
					union(
						union(
							{|get_currRotationOut,set_currRotationOut,
							get_currDiff,set_currDiff|},
							{||}
						)
							
						,
						{|internal__.TID_RotationPID_t0,
						rdiff__.TID_RotationPID_t1,
						internal__.TID_RotationPID_t2|}
					)
				})
				
				MachineMemoryHidingSet = Union({
					union(
						{|get_currRotationOut,set_currRotationOut,
						get_currDiff,set_currDiff|},
						{||}
					)
				})
				
				MachineInternalEvents = {|
					internal__
				|}
				
				AUX(id__,
						    const_RotationPID_D) = (
					(
						STM(id__,
								    const_RotationPID_D)
							[|MachineMemorySyncSet|]
						sbisim(diamond(MemoryN(id__, const_RotationPID_D)))
					)[[
						rdiff__.x____ <- rdiff,
						rotationOutputE__.x____ <- rotationOutputE
						| x____ <- TIDS
					]]
					\MachineMemoryHidingSet
				)
				[|{|terminate|}|>SKIP\MachineInternalEvents
				
				
				STM_core(id__,
						    const_RotationPID_D) = 
					sbisim(diamond(STM(id__,
							    const_RotationPID_D)))
					
				AUX_opt(id__,
						    const_RotationPID_D) = 
					(MemorySTM_opt(id__,
							    const_RotationPID_D)
					)[[
						rdiff__.x____ <- rdiff,
						rotationOutputE__.x____ <- rotationOutputE
						| x____ <- TIDS
					]]
					[|{|terminate|}|>SKIP\MachineInternalEvents
			
				-- definition of the behaviour of state machines (default, optimised, visible, visible and optimised)
				transparent diamond
				transparent sbisim
				transparent dbisim
				transparent chase
						
				FVS__(id__,
						    const_RotationPID_D) = AUX_opt(id__,
						    const_RotationPID_D)
				Dunopt__(id__,
						    const_RotationPID_D) = AUX(id__,
						    const_RotationPID_D) \ internal_events
				D__(id__,
						    const_RotationPID_D) = AUX_opt(id__,
						    const_RotationPID_D) \ internal_events
				O__(id__,
						    const_RotationPID_D) = sbisim(diamond(D__(id__,
						    const_RotationPID_D)))
				VS__(id__,
						    const_RotationPID_D) = ShowV(FVS__(id__,
						    const_RotationPID_D))
				VS_O__(id__,
						    const_RotationPID_D) = sbisim(diamond(VS__(id__,
						    const_RotationPID_D)))
				HEXT__(id__,
						    const_RotationPID_D) = O__(id__,
						    const_RotationPID_D) [|shared_variable_events|] SKIP	
			endmodule
						
			-- declaring controller events
			channel leftMotorVelocity: InOut.core_real
			channel rightMotorVelocity: InOut.core_real
			channel angle: InOut.core_real
			channel gyroX: InOut.core_real
			channel gyroY: InOut.core_real
			channel gyroZ: InOut.core_real
							
	
		
			channel terminate
		
			-- declaring controller memory
			Memory(id__) = SKIP
			-- declaring controller termination channel
	
		
			D__(id__,
					    const_Segway_SegwayController_stm_ref0_maxAngle,
					    const_Segway_SegwayController_stm_ref0_loopTime,
					    const_Segway_SegwayController_stm_ref0_startupDelay,
					    const_Segway_SegwayController_stm_ref0_speedUpdate,
					    const_Segway_SegwayController_stm_ref0_rotationUpdate,
					    const_Segway_SegwayController_stm_ref0_motorBudget,
					    const_Segway_SegwayController_stm_ref0_angleBudget,
					    const_Segway_SegwayController_stm_ref0_speedBudget,
					    const_Segway_SegwayController_stm_ref0_rotationBudget,
					    const_Segway_SegwayController_stm_ref1_P,
					    const_Segway_SegwayController_stm_ref1_D,
					    const_Segway_SegwayController_stm_ref2_P,
					    const_Segway_SegwayController_stm_ref2_I,
					    const_Segway_SegwayController_stm_ref2_maxIntegral,
					    const_Segway_SegwayController_stm_ref3_D) = (
				(
					(
						let
							const_BalanceSTM_maxAngle = const_Segway_SegwayController_stm_ref0_maxAngle
							const_BalanceSTM_loopTime = const_Segway_SegwayController_stm_ref0_loopTime
							const_BalanceSTM_startupDelay = const_Segway_SegwayController_stm_ref0_startupDelay
							const_BalanceSTM_speedUpdate = const_Segway_SegwayController_stm_ref0_speedUpdate
							const_BalanceSTM_rotationUpdate = const_Segway_SegwayController_stm_ref0_rotationUpdate
							const_BalanceSTM_motorBudget = const_Segway_SegwayController_stm_ref0_motorBudget
							const_BalanceSTM_angleBudget = const_Segway_SegwayController_stm_ref0_angleBudget
							const_BalanceSTM_speedBudget = const_Segway_SegwayController_stm_ref0_speedBudget
							const_BalanceSTM_rotationBudget = const_Segway_SegwayController_stm_ref0_rotationBudget
						within 
						stm_ref0::D__(id__,
								    const_BalanceSTM_maxAngle,
								    const_BalanceSTM_loopTime,
								    const_BalanceSTM_startupDelay,
								    const_BalanceSTM_speedUpdate,
								    const_BalanceSTM_rotationUpdate,
								    const_BalanceSTM_motorBudget,
								    const_BalanceSTM_angleBudget,
								    const_BalanceSTM_speedBudget,
								    const_BalanceSTM_rotationBudget)[[
							stm_ref0::terminate <- terminate,
							stm_ref0::leftMotorVelocity <- leftMotorVelocity,
							stm_ref0::rightMotorVelocity <- rightMotorVelocity,
							stm_ref0::angle <- angle,
							stm_ref0::gyroX <- gyroX,
							stm_ref0::gyroY <- gyroY,
							stm_ref0::gyroZ <- gyroZ,
							stm_ref0::angleOutputE.in <- stm_ref1::angleOutputE.out,
							stm_ref0::angleOutputE.out <- stm_ref1::angleOutputE.in,
							stm_ref0::speedOutputE.in <- stm_ref2::speedOutputE.out,
							stm_ref0::speedOutputE.out <- stm_ref2::speedOutputE.in,
							stm_ref0::rotationOutputE.in <- stm_ref3::rotationOutputE.out,
							stm_ref0::rotationOutputE.out <- stm_ref3::rotationOutputE.in,
							stm_ref0::disableInterruptsCall <- disableInterruptsCall,
							stm_ref0::setLeftMotorSpeedCall <- setLeftMotorSpeedCall,
							stm_ref0::setRightMotorSpeedCall <- setRightMotorSpeedCall,
							stm_ref0::enableInterruptsCall <- enableInterruptsCall
						]]
					)
						[|{|terminate, stm_ref1::angleOutputE, stm_ref0::anewError, stm_ref0::adiff, stm_ref2::speedOutputE, stm_ref0::snewError, stm_ref3::rotationOutputE, stm_ref0::rdiff|}|]
					(
						(
							let
								const_AnglePID_P = const_Segway_SegwayController_stm_ref1_P
								const_AnglePID_D = const_Segway_SegwayController_stm_ref1_D
							within 
							stm_ref1::D__(id__,
									    const_AnglePID_P,
									    const_AnglePID_D)[[
								stm_ref1::terminate <- terminate,
								stm_ref1::anewError.in <- stm_ref0::anewError.out,
								stm_ref1::anewError.out <- stm_ref0::anewError.in,
								stm_ref1::adiff.in <- stm_ref0::adiff.out,
								stm_ref1::adiff.out <- stm_ref0::adiff.in
							]]
						)
							[|{|terminate|}|]
						(
							(
								let
									const_SpeedPID_P = const_Segway_SegwayController_stm_ref2_P
									const_SpeedPID_I = const_Segway_SegwayController_stm_ref2_I
									const_SpeedPID_maxIntegral = const_Segway_SegwayController_stm_ref2_maxIntegral
								within 
								stm_ref2::D__(id__,
										    const_SpeedPID_P,
										    const_SpeedPID_I,
										    const_SpeedPID_maxIntegral)[[
									stm_ref2::terminate <- terminate,
									stm_ref2::snewError.in <- stm_ref0::snewError.out,
									stm_ref2::snewError.out <- stm_ref0::snewError.in
								]]
							)
								[|{|terminate|}|]
							(
								let
									const_RotationPID_D = const_Segway_SegwayController_stm_ref3_D
								within 
								stm_ref3::D__(id__,
										    const_RotationPID_D)[[
									stm_ref3::terminate <- terminate,
									stm_ref3::rdiff.in <- stm_ref0::rdiff.out,
									stm_ref3::rdiff.out <- stm_ref0::rdiff.in
								]]
							)
						)
						\diff(
							{|terminate|},
							{|terminate|}
						)
					)
					\diff(
						{|terminate|},
						{|terminate|}
					)
				)
				\diff(
					{|terminate, stm_ref1::angleOutputE, stm_ref0::anewError, stm_ref0::adiff, stm_ref2::speedOutputE, stm_ref0::snewError, stm_ref3::rotationOutputE, stm_ref0::rdiff|},
					{|terminate|}
				)
					[|
						union(
							{|
							|},
							{|
							|}
						)
					|]
				Memory(id__)
			)
			\ union(
				{|
				|},
				{|
				|}
			)
			[|{|terminate|}|>SKIP
						
			-- VS version
			VS__(id__,
					    const_Segway_SegwayController_stm_ref0_maxAngle,
					    const_Segway_SegwayController_stm_ref0_loopTime,
					    const_Segway_SegwayController_stm_ref0_startupDelay,
					    const_Segway_SegwayController_stm_ref0_speedUpdate,
					    const_Segway_SegwayController_stm_ref0_rotationUpdate,
					    const_Segway_SegwayController_stm_ref0_motorBudget,
					    const_Segway_SegwayController_stm_ref0_angleBudget,
					    const_Segway_SegwayController_stm_ref0_speedBudget,
					    const_Segway_SegwayController_stm_ref0_rotationBudget,
					    const_Segway_SegwayController_stm_ref1_P,
					    const_Segway_SegwayController_stm_ref1_D,
					    const_Segway_SegwayController_stm_ref2_P,
					    const_Segway_SegwayController_stm_ref2_I,
					    const_Segway_SegwayController_stm_ref2_maxIntegral,
					    const_Segway_SegwayController_stm_ref3_D) = (
				(
					(
						let
							const_BalanceSTM_maxAngle = const_Segway_SegwayController_stm_ref0_maxAngle
							const_BalanceSTM_loopTime = const_Segway_SegwayController_stm_ref0_loopTime
							const_BalanceSTM_startupDelay = const_Segway_SegwayController_stm_ref0_startupDelay
							const_BalanceSTM_speedUpdate = const_Segway_SegwayController_stm_ref0_speedUpdate
							const_BalanceSTM_rotationUpdate = const_Segway_SegwayController_stm_ref0_rotationUpdate
							const_BalanceSTM_motorBudget = const_Segway_SegwayController_stm_ref0_motorBudget
							const_BalanceSTM_angleBudget = const_Segway_SegwayController_stm_ref0_angleBudget
							const_BalanceSTM_speedBudget = const_Segway_SegwayController_stm_ref0_speedBudget
							const_BalanceSTM_rotationBudget = const_Segway_SegwayController_stm_ref0_rotationBudget
						within 
						stm_ref0::VS__(id__,
								    const_BalanceSTM_maxAngle,
								    const_BalanceSTM_loopTime,
								    const_BalanceSTM_startupDelay,
								    const_BalanceSTM_speedUpdate,
								    const_BalanceSTM_rotationUpdate,
								    const_BalanceSTM_motorBudget,
								    const_BalanceSTM_angleBudget,
								    const_BalanceSTM_speedBudget,
								    const_BalanceSTM_rotationBudget)[[
							stm_ref0::terminate <- terminate,
							stm_ref0::leftMotorVelocity <- leftMotorVelocity,
							stm_ref0::rightMotorVelocity <- rightMotorVelocity,
							stm_ref0::angle <- angle,
							stm_ref0::gyroX <- gyroX,
							stm_ref0::gyroY <- gyroY,
							stm_ref0::gyroZ <- gyroZ,
							stm_ref0::angleOutputE.in <- stm_ref1::angleOutputE.out,
							stm_ref0::angleOutputE.out <- stm_ref1::angleOutputE.in,
							stm_ref0::speedOutputE.in <- stm_ref2::speedOutputE.out,
							stm_ref0::speedOutputE.out <- stm_ref2::speedOutputE.in,
							stm_ref0::rotationOutputE.in <- stm_ref3::rotationOutputE.out,
							stm_ref0::rotationOutputE.out <- stm_ref3::rotationOutputE.in,
							stm_ref0::disableInterruptsCall <- disableInterruptsCall,
							stm_ref0::setLeftMotorSpeedCall <- setLeftMotorSpeedCall,
							stm_ref0::setRightMotorSpeedCall <- setRightMotorSpeedCall,
							stm_ref0::enableInterruptsCall <- enableInterruptsCall
						]]
					)
						[|{|terminate, stm_ref1::angleOutputE, stm_ref0::anewError, stm_ref0::adiff, stm_ref2::speedOutputE, stm_ref0::snewError, stm_ref3::rotationOutputE, stm_ref0::rdiff|}|]
					(
						(
							let
								const_AnglePID_P = const_Segway_SegwayController_stm_ref1_P
								const_AnglePID_D = const_Segway_SegwayController_stm_ref1_D
							within 
							stm_ref1::VS__(id__,
									    const_AnglePID_P,
									    const_AnglePID_D)[[
								stm_ref1::terminate <- terminate,
								stm_ref1::anewError.in <- stm_ref0::anewError.out,
								stm_ref1::anewError.out <- stm_ref0::anewError.in,
								stm_ref1::adiff.in <- stm_ref0::adiff.out,
								stm_ref1::adiff.out <- stm_ref0::adiff.in
							]]
						)
							[|{|terminate|}|]
						(
							(
								let
									const_SpeedPID_P = const_Segway_SegwayController_stm_ref2_P
									const_SpeedPID_I = const_Segway_SegwayController_stm_ref2_I
									const_SpeedPID_maxIntegral = const_Segway_SegwayController_stm_ref2_maxIntegral
								within 
								stm_ref2::VS__(id__,
										    const_SpeedPID_P,
										    const_SpeedPID_I,
										    const_SpeedPID_maxIntegral)[[
									stm_ref2::terminate <- terminate,
									stm_ref2::snewError.in <- stm_ref0::snewError.out,
									stm_ref2::snewError.out <- stm_ref0::snewError.in
								]]
							)
								[|{|terminate|}|]
							(
								let
									const_RotationPID_D = const_Segway_SegwayController_stm_ref3_D
								within 
								stm_ref3::VS__(id__,
										    const_RotationPID_D)[[
									stm_ref3::terminate <- terminate,
									stm_ref3::rdiff.in <- stm_ref0::rdiff.out,
									stm_ref3::rdiff.out <- stm_ref0::rdiff.in
								]]
							)
						)
						\diff(
							{|terminate|},
							{|terminate|}
						)
					)
					\diff(
						{|terminate|},
						{|terminate|}
					)
				)
				\diff(
					{|terminate, stm_ref1::angleOutputE, stm_ref0::anewError, stm_ref0::adiff, stm_ref2::speedOutputE, stm_ref0::snewError, stm_ref3::rotationOutputE, stm_ref0::rdiff|},
					{|terminate|}
				)
					[|
						union(
							{|
							|},
							{|
							|}
						)
					|]
				Memory(id__)
			)
			\ union(
				{|
				|},
				{|
				|}
			)
			[|{|terminate|}|>SKIP			
	
						
			-- O version (optimised) THESE TWO PROCESSES SHOULD BE KEPT IN SYNC WITH THE ABOVE TWO
			O__(id__,
					    const_Segway_SegwayController_stm_ref0_maxAngle,
					    const_Segway_SegwayController_stm_ref0_loopTime,
					    const_Segway_SegwayController_stm_ref0_startupDelay,
					    const_Segway_SegwayController_stm_ref0_speedUpdate,
					    const_Segway_SegwayController_stm_ref0_rotationUpdate,
					    const_Segway_SegwayController_stm_ref0_motorBudget,
					    const_Segway_SegwayController_stm_ref0_angleBudget,
					    const_Segway_SegwayController_stm_ref0_speedBudget,
					    const_Segway_SegwayController_stm_ref0_rotationBudget,
					    const_Segway_SegwayController_stm_ref1_P,
					    const_Segway_SegwayController_stm_ref1_D,
					    const_Segway_SegwayController_stm_ref2_P,
					    const_Segway_SegwayController_stm_ref2_I,
					    const_Segway_SegwayController_stm_ref2_maxIntegral,
					    const_Segway_SegwayController_stm_ref3_D) = sbisim(
				diamond(
					(
						(
							(
								let
									const_BalanceSTM_maxAngle = const_Segway_SegwayController_stm_ref0_maxAngle
									const_BalanceSTM_loopTime = const_Segway_SegwayController_stm_ref0_loopTime
									const_BalanceSTM_startupDelay = const_Segway_SegwayController_stm_ref0_startupDelay
									const_BalanceSTM_speedUpdate = const_Segway_SegwayController_stm_ref0_speedUpdate
									const_BalanceSTM_rotationUpdate = const_Segway_SegwayController_stm_ref0_rotationUpdate
									const_BalanceSTM_motorBudget = const_Segway_SegwayController_stm_ref0_motorBudget
									const_BalanceSTM_angleBudget = const_Segway_SegwayController_stm_ref0_angleBudget
									const_BalanceSTM_speedBudget = const_Segway_SegwayController_stm_ref0_speedBudget
									const_BalanceSTM_rotationBudget = const_Segway_SegwayController_stm_ref0_rotationBudget
								within 
								stm_ref0::O__(id__,
										    const_BalanceSTM_maxAngle,
										    const_BalanceSTM_loopTime,
										    const_BalanceSTM_startupDelay,
										    const_BalanceSTM_speedUpdate,
										    const_BalanceSTM_rotationUpdate,
										    const_BalanceSTM_motorBudget,
										    const_BalanceSTM_angleBudget,
										    const_BalanceSTM_speedBudget,
										    const_BalanceSTM_rotationBudget)[[
									stm_ref0::terminate <- terminate,
									stm_ref0::leftMotorVelocity <- leftMotorVelocity,
									stm_ref0::rightMotorVelocity <- rightMotorVelocity,
									stm_ref0::angle <- angle,
									stm_ref0::gyroX <- gyroX,
									stm_ref0::gyroY <- gyroY,
									stm_ref0::gyroZ <- gyroZ,
									stm_ref0::angleOutputE.in <- stm_ref1::angleOutputE.out,
									stm_ref0::angleOutputE.out <- stm_ref1::angleOutputE.in,
									stm_ref0::speedOutputE.in <- stm_ref2::speedOutputE.out,
									stm_ref0::speedOutputE.out <- stm_ref2::speedOutputE.in,
									stm_ref0::rotationOutputE.in <- stm_ref3::rotationOutputE.out,
									stm_ref0::rotationOutputE.out <- stm_ref3::rotationOutputE.in,
									stm_ref0::disableInterruptsCall <- disableInterruptsCall,
									stm_ref0::setLeftMotorSpeedCall <- setLeftMotorSpeedCall,
									stm_ref0::setRightMotorSpeedCall <- setRightMotorSpeedCall,
									stm_ref0::enableInterruptsCall <- enableInterruptsCall
								]]
							)
								[|{|terminate, stm_ref1::angleOutputE, stm_ref0::anewError, stm_ref0::adiff, stm_ref2::speedOutputE, stm_ref0::snewError, stm_ref3::rotationOutputE, stm_ref0::rdiff|}|]
							(
								(
									let
										const_AnglePID_P = const_Segway_SegwayController_stm_ref1_P
										const_AnglePID_D = const_Segway_SegwayController_stm_ref1_D
									within 
									stm_ref1::O__(id__,
											    const_AnglePID_P,
											    const_AnglePID_D)[[
										stm_ref1::terminate <- terminate,
										stm_ref1::anewError.in <- stm_ref0::anewError.out,
										stm_ref1::anewError.out <- stm_ref0::anewError.in,
										stm_ref1::adiff.in <- stm_ref0::adiff.out,
										stm_ref1::adiff.out <- stm_ref0::adiff.in
									]]
								)
									[|{|terminate|}|]
								(
									(
										let
											const_SpeedPID_P = const_Segway_SegwayController_stm_ref2_P
											const_SpeedPID_I = const_Segway_SegwayController_stm_ref2_I
											const_SpeedPID_maxIntegral = const_Segway_SegwayController_stm_ref2_maxIntegral
										within 
										stm_ref2::O__(id__,
												    const_SpeedPID_P,
												    const_SpeedPID_I,
												    const_SpeedPID_maxIntegral)[[
											stm_ref2::terminate <- terminate,
											stm_ref2::snewError.in <- stm_ref0::snewError.out,
											stm_ref2::snewError.out <- stm_ref0::snewError.in
										]]
									)
										[|{|terminate|}|]
									(
										let
											const_RotationPID_D = const_Segway_SegwayController_stm_ref3_D
										within 
										stm_ref3::O__(id__,
												    const_RotationPID_D)[[
											stm_ref3::terminate <- terminate,
											stm_ref3::rdiff.in <- stm_ref0::rdiff.out,
											stm_ref3::rdiff.out <- stm_ref0::rdiff.in
										]]
									)
								)
								\diff(
									{|terminate|},
									{|terminate|}
								)
							)
							\diff(
								{|terminate|},
								{|terminate|}
							)
						)
						\diff(
							{|terminate, stm_ref1::angleOutputE, stm_ref0::anewError, stm_ref0::adiff, stm_ref2::speedOutputE, stm_ref0::snewError, stm_ref3::rotationOutputE, stm_ref0::rdiff|},
							{|terminate|}
						)
							[|
								union(
									{|
									|},
									{|
									|}
								)
							|]
						Memory(id__)
					)
					\ union(
						{|
						|},
						{|
						|}
					)
					[|{|terminate|}|>SKIP
				)
			)
						
			-- VS_O version
			VS_O__(id__,
					    const_Segway_SegwayController_stm_ref0_maxAngle,
					    const_Segway_SegwayController_stm_ref0_loopTime,
					    const_Segway_SegwayController_stm_ref0_startupDelay,
					    const_Segway_SegwayController_stm_ref0_speedUpdate,
					    const_Segway_SegwayController_stm_ref0_rotationUpdate,
					    const_Segway_SegwayController_stm_ref0_motorBudget,
					    const_Segway_SegwayController_stm_ref0_angleBudget,
					    const_Segway_SegwayController_stm_ref0_speedBudget,
					    const_Segway_SegwayController_stm_ref0_rotationBudget,
					    const_Segway_SegwayController_stm_ref1_P,
					    const_Segway_SegwayController_stm_ref1_D,
					    const_Segway_SegwayController_stm_ref2_P,
					    const_Segway_SegwayController_stm_ref2_I,
					    const_Segway_SegwayController_stm_ref2_maxIntegral,
					    const_Segway_SegwayController_stm_ref3_D) = sbisim(
				diamond(
					(
						(
							(
								let
									const_BalanceSTM_maxAngle = const_Segway_SegwayController_stm_ref0_maxAngle
									const_BalanceSTM_loopTime = const_Segway_SegwayController_stm_ref0_loopTime
									const_BalanceSTM_startupDelay = const_Segway_SegwayController_stm_ref0_startupDelay
									const_BalanceSTM_speedUpdate = const_Segway_SegwayController_stm_ref0_speedUpdate
									const_BalanceSTM_rotationUpdate = const_Segway_SegwayController_stm_ref0_rotationUpdate
									const_BalanceSTM_motorBudget = const_Segway_SegwayController_stm_ref0_motorBudget
									const_BalanceSTM_angleBudget = const_Segway_SegwayController_stm_ref0_angleBudget
									const_BalanceSTM_speedBudget = const_Segway_SegwayController_stm_ref0_speedBudget
									const_BalanceSTM_rotationBudget = const_Segway_SegwayController_stm_ref0_rotationBudget
								within 
								stm_ref0::VS_O__(id__,
										    const_BalanceSTM_maxAngle,
										    const_BalanceSTM_loopTime,
										    const_BalanceSTM_startupDelay,
										    const_BalanceSTM_speedUpdate,
										    const_BalanceSTM_rotationUpdate,
										    const_BalanceSTM_motorBudget,
										    const_BalanceSTM_angleBudget,
										    const_BalanceSTM_speedBudget,
										    const_BalanceSTM_rotationBudget)[[
									stm_ref0::terminate <- terminate,
									stm_ref0::leftMotorVelocity <- leftMotorVelocity,
									stm_ref0::rightMotorVelocity <- rightMotorVelocity,
									stm_ref0::angle <- angle,
									stm_ref0::gyroX <- gyroX,
									stm_ref0::gyroY <- gyroY,
									stm_ref0::gyroZ <- gyroZ,
									stm_ref0::angleOutputE.in <- stm_ref1::angleOutputE.out,
									stm_ref0::angleOutputE.out <- stm_ref1::angleOutputE.in,
									stm_ref0::speedOutputE.in <- stm_ref2::speedOutputE.out,
									stm_ref0::speedOutputE.out <- stm_ref2::speedOutputE.in,
									stm_ref0::rotationOutputE.in <- stm_ref3::rotationOutputE.out,
									stm_ref0::rotationOutputE.out <- stm_ref3::rotationOutputE.in,
									stm_ref0::disableInterruptsCall <- disableInterruptsCall,
									stm_ref0::setLeftMotorSpeedCall <- setLeftMotorSpeedCall,
									stm_ref0::setRightMotorSpeedCall <- setRightMotorSpeedCall,
									stm_ref0::enableInterruptsCall <- enableInterruptsCall
								]]
							)
								[|{|terminate, stm_ref1::angleOutputE, stm_ref0::anewError, stm_ref0::adiff, stm_ref2::speedOutputE, stm_ref0::snewError, stm_ref3::rotationOutputE, stm_ref0::rdiff|}|]
							(
								(
									let
										const_AnglePID_P = const_Segway_SegwayController_stm_ref1_P
										const_AnglePID_D = const_Segway_SegwayController_stm_ref1_D
									within 
									stm_ref1::VS_O__(id__,
											    const_AnglePID_P,
											    const_AnglePID_D)[[
										stm_ref1::terminate <- terminate,
										stm_ref1::anewError.in <- stm_ref0::anewError.out,
										stm_ref1::anewError.out <- stm_ref0::anewError.in,
										stm_ref1::adiff.in <- stm_ref0::adiff.out,
										stm_ref1::adiff.out <- stm_ref0::adiff.in
									]]
								)
									[|{|terminate|}|]
								(
									(
										let
											const_SpeedPID_P = const_Segway_SegwayController_stm_ref2_P
											const_SpeedPID_I = const_Segway_SegwayController_stm_ref2_I
											const_SpeedPID_maxIntegral = const_Segway_SegwayController_stm_ref2_maxIntegral
										within 
										stm_ref2::VS_O__(id__,
												    const_SpeedPID_P,
												    const_SpeedPID_I,
												    const_SpeedPID_maxIntegral)[[
											stm_ref2::terminate <- terminate,
											stm_ref2::snewError.in <- stm_ref0::snewError.out,
											stm_ref2::snewError.out <- stm_ref0::snewError.in
										]]
									)
										[|{|terminate|}|]
									(
										let
											const_RotationPID_D = const_Segway_SegwayController_stm_ref3_D
										within 
										stm_ref3::VS_O__(id__,
												    const_RotationPID_D)[[
											stm_ref3::terminate <- terminate,
											stm_ref3::rdiff.in <- stm_ref0::rdiff.out,
											stm_ref3::rdiff.out <- stm_ref0::rdiff.in
										]]
									)
								)
								\diff(
									{|terminate|},
									{|terminate|}
								)
							)
							\diff(
								{|terminate|},
								{|terminate|}
							)
						)
						\diff(
							{|terminate, stm_ref1::angleOutputE, stm_ref0::anewError, stm_ref0::adiff, stm_ref2::speedOutputE, stm_ref0::snewError, stm_ref3::rotationOutputE, stm_ref0::rdiff|},
							{|terminate|}
						)
							[|
								union(
									{|
									|},
									{|
									|}
								)
							|]
						Memory(id__)
					)
					\ union(
						{|
						|},
						{|
						|}
					)
					[|{|terminate|}|>SKIP
				)
			)
			
			HEXT(id__,
					    const_Segway_SegwayController_stm_ref0_maxAngle,
					    const_Segway_SegwayController_stm_ref0_loopTime,
					    const_Segway_SegwayController_stm_ref0_startupDelay,
					    const_Segway_SegwayController_stm_ref0_speedUpdate,
					    const_Segway_SegwayController_stm_ref0_rotationUpdate,
					    const_Segway_SegwayController_stm_ref0_motorBudget,
					    const_Segway_SegwayController_stm_ref0_angleBudget,
					    const_Segway_SegwayController_stm_ref0_speedBudget,
					    const_Segway_SegwayController_stm_ref0_rotationBudget,
					    const_Segway_SegwayController_stm_ref1_P,
					    const_Segway_SegwayController_stm_ref1_D,
					    const_Segway_SegwayController_stm_ref2_P,
					    const_Segway_SegwayController_stm_ref2_I,
					    const_Segway_SegwayController_stm_ref2_maxIntegral,
					    const_Segway_SegwayController_stm_ref3_D) = O__(id__,
					    const_Segway_SegwayController_stm_ref0_maxAngle,
					    const_Segway_SegwayController_stm_ref0_loopTime,
					    const_Segway_SegwayController_stm_ref0_startupDelay,
					    const_Segway_SegwayController_stm_ref0_speedUpdate,
					    const_Segway_SegwayController_stm_ref0_rotationUpdate,
					    const_Segway_SegwayController_stm_ref0_motorBudget,
					    const_Segway_SegwayController_stm_ref0_angleBudget,
					    const_Segway_SegwayController_stm_ref0_speedBudget,
					    const_Segway_SegwayController_stm_ref0_rotationBudget,
					    const_Segway_SegwayController_stm_ref1_P,
					    const_Segway_SegwayController_stm_ref1_D,
					    const_Segway_SegwayController_stm_ref2_P,
					    const_Segway_SegwayController_stm_ref2_I,
					    const_Segway_SegwayController_stm_ref2_maxIntegral,
					    const_Segway_SegwayController_stm_ref3_D) [|shared_variable_events|] SKIP	
		endmodule
				
	-- declaring module memory
	Memory(id__) = SKIP
	
	D__(id__,
			    const_Segway_SegwayController_stm_ref0_maxAngle,
			    const_Segway_SegwayController_stm_ref0_loopTime,
			    const_Segway_SegwayController_stm_ref0_startupDelay,
			    const_Segway_SegwayController_stm_ref0_speedUpdate,
			    const_Segway_SegwayController_stm_ref0_rotationUpdate,
			    const_Segway_SegwayController_stm_ref0_motorBudget,
			    const_Segway_SegwayController_stm_ref0_angleBudget,
			    const_Segway_SegwayController_stm_ref0_speedBudget,
			    const_Segway_SegwayController_stm_ref0_rotationBudget,
			    const_Segway_SegwayController_stm_ref1_P,
			    const_Segway_SegwayController_stm_ref1_D,
			    const_Segway_SegwayController_stm_ref2_P,
			    const_Segway_SegwayController_stm_ref2_I,
			    const_Segway_SegwayController_stm_ref2_maxIntegral,
			    const_Segway_SegwayController_stm_ref3_D) = 		(
			(
				(SKIP)
					[|{||}|]
				(
					(
						SegwayController::D__(id__,
								    const_Segway_SegwayController_stm_ref0_maxAngle,
								    const_Segway_SegwayController_stm_ref0_loopTime,
								    const_Segway_SegwayController_stm_ref0_startupDelay,
								    const_Segway_SegwayController_stm_ref0_speedUpdate,
								    const_Segway_SegwayController_stm_ref0_rotationUpdate,
								    const_Segway_SegwayController_stm_ref0_motorBudget,
								    const_Segway_SegwayController_stm_ref0_angleBudget,
								    const_Segway_SegwayController_stm_ref0_speedBudget,
								    const_Segway_SegwayController_stm_ref0_rotationBudget,
								    const_Segway_SegwayController_stm_ref1_P,
								    const_Segway_SegwayController_stm_ref1_D,
								    const_Segway_SegwayController_stm_ref2_P,
								    const_Segway_SegwayController_stm_ref2_I,
								    const_Segway_SegwayController_stm_ref2_maxIntegral,
								    const_Segway_SegwayController_stm_ref3_D)[[
							SegwayController::terminate <- terminate,
							SegwayController::angle <- angle,
							SegwayController::gyroX <- gyroX,
							SegwayController::gyroY <- gyroY,
							SegwayController::gyroZ <- gyroZ,
							SegwayController::leftMotorVelocity <- leftMotorVelocity,
							SegwayController::rightMotorVelocity <- rightMotorVelocity,
							SegwayController::disableInterruptsCall <- disableInterruptsCall,
							SegwayController::setLeftMotorSpeedCall <- setLeftMotorSpeedCall,
							SegwayController::setRightMotorSpeedCall <- setRightMotorSpeedCall,
							SegwayController::enableInterruptsCall <- enableInterruptsCall
						]]
					)
						[|
							union(
								{|
								|},
								{|
								|}
							)
						|]
					Memory(id__)
				)
			)
			\ Union({
				{|
				|},
				{|
				|},
				{|
				|}
			})
			[|{|terminate|}|>SKIP
		)
		\{|terminate|}
	
	-- visible state equivalent
	
	VS__(id__,
			    const_Segway_SegwayController_stm_ref0_maxAngle,
			    const_Segway_SegwayController_stm_ref0_loopTime,
			    const_Segway_SegwayController_stm_ref0_startupDelay,
			    const_Segway_SegwayController_stm_ref0_speedUpdate,
			    const_Segway_SegwayController_stm_ref0_rotationUpdate,
			    const_Segway_SegwayController_stm_ref0_motorBudget,
			    const_Segway_SegwayController_stm_ref0_angleBudget,
			    const_Segway_SegwayController_stm_ref0_speedBudget,
			    const_Segway_SegwayController_stm_ref0_rotationBudget,
			    const_Segway_SegwayController_stm_ref1_P,
			    const_Segway_SegwayController_stm_ref1_D,
			    const_Segway_SegwayController_stm_ref2_P,
			    const_Segway_SegwayController_stm_ref2_I,
			    const_Segway_SegwayController_stm_ref2_maxIntegral,
			    const_Segway_SegwayController_stm_ref3_D) = 		(
			(
				(SKIP)
					[|{||}|]
				(
					(
						SegwayController::VS__(id__,
								    const_Segway_SegwayController_stm_ref0_maxAngle,
								    const_Segway_SegwayController_stm_ref0_loopTime,
								    const_Segway_SegwayController_stm_ref0_startupDelay,
								    const_Segway_SegwayController_stm_ref0_speedUpdate,
								    const_Segway_SegwayController_stm_ref0_rotationUpdate,
								    const_Segway_SegwayController_stm_ref0_motorBudget,
								    const_Segway_SegwayController_stm_ref0_angleBudget,
								    const_Segway_SegwayController_stm_ref0_speedBudget,
								    const_Segway_SegwayController_stm_ref0_rotationBudget,
								    const_Segway_SegwayController_stm_ref1_P,
								    const_Segway_SegwayController_stm_ref1_D,
								    const_Segway_SegwayController_stm_ref2_P,
								    const_Segway_SegwayController_stm_ref2_I,
								    const_Segway_SegwayController_stm_ref2_maxIntegral,
								    const_Segway_SegwayController_stm_ref3_D)[[
							SegwayController::terminate <- terminate,
							SegwayController::angle <- angle,
							SegwayController::gyroX <- gyroX,
							SegwayController::gyroY <- gyroY,
							SegwayController::gyroZ <- gyroZ,
							SegwayController::leftMotorVelocity <- leftMotorVelocity,
							SegwayController::rightMotorVelocity <- rightMotorVelocity,
							SegwayController::disableInterruptsCall <- disableInterruptsCall,
							SegwayController::setLeftMotorSpeedCall <- setLeftMotorSpeedCall,
							SegwayController::setRightMotorSpeedCall <- setRightMotorSpeedCall,
							SegwayController::enableInterruptsCall <- enableInterruptsCall
						]]
					)
						[|
							union(
								{|
								|},
								{|
								|}
							)
						|]
					Memory(id__)
				)
			)
			\ Union({
				{|
				|},
				{|
				|},
				{|
				|}
			})
			[|{|terminate|}|>SKIP
		)
		\{|terminate|}	
	
	-- O version (optimised)
	
	O__(id__,
			    const_Segway_SegwayController_stm_ref0_maxAngle,
			    const_Segway_SegwayController_stm_ref0_loopTime,
			    const_Segway_SegwayController_stm_ref0_startupDelay,
			    const_Segway_SegwayController_stm_ref0_speedUpdate,
			    const_Segway_SegwayController_stm_ref0_rotationUpdate,
			    const_Segway_SegwayController_stm_ref0_motorBudget,
			    const_Segway_SegwayController_stm_ref0_angleBudget,
			    const_Segway_SegwayController_stm_ref0_speedBudget,
			    const_Segway_SegwayController_stm_ref0_rotationBudget,
			    const_Segway_SegwayController_stm_ref1_P,
			    const_Segway_SegwayController_stm_ref1_D,
			    const_Segway_SegwayController_stm_ref2_P,
			    const_Segway_SegwayController_stm_ref2_I,
			    const_Segway_SegwayController_stm_ref2_maxIntegral,
			    const_Segway_SegwayController_stm_ref3_D) = sbisim(diamond(		(
			(
				(SKIP)
					[|{||}|]
				(
					(
						SegwayController::O__(id__,
								    const_Segway_SegwayController_stm_ref0_maxAngle,
								    const_Segway_SegwayController_stm_ref0_loopTime,
								    const_Segway_SegwayController_stm_ref0_startupDelay,
								    const_Segway_SegwayController_stm_ref0_speedUpdate,
								    const_Segway_SegwayController_stm_ref0_rotationUpdate,
								    const_Segway_SegwayController_stm_ref0_motorBudget,
								    const_Segway_SegwayController_stm_ref0_angleBudget,
								    const_Segway_SegwayController_stm_ref0_speedBudget,
								    const_Segway_SegwayController_stm_ref0_rotationBudget,
								    const_Segway_SegwayController_stm_ref1_P,
								    const_Segway_SegwayController_stm_ref1_D,
								    const_Segway_SegwayController_stm_ref2_P,
								    const_Segway_SegwayController_stm_ref2_I,
								    const_Segway_SegwayController_stm_ref2_maxIntegral,
								    const_Segway_SegwayController_stm_ref3_D)[[
							SegwayController::terminate <- terminate,
							SegwayController::angle <- angle,
							SegwayController::gyroX <- gyroX,
							SegwayController::gyroY <- gyroY,
							SegwayController::gyroZ <- gyroZ,
							SegwayController::leftMotorVelocity <- leftMotorVelocity,
							SegwayController::rightMotorVelocity <- rightMotorVelocity,
							SegwayController::disableInterruptsCall <- disableInterruptsCall,
							SegwayController::setLeftMotorSpeedCall <- setLeftMotorSpeedCall,
							SegwayController::setRightMotorSpeedCall <- setRightMotorSpeedCall,
							SegwayController::enableInterruptsCall <- enableInterruptsCall
						]]
					)
						[|
							union(
								{|
								|},
								{|
								|}
							)
						|]
					Memory(id__)
				)
			)
			\ Union({
				{|
				|},
				{|
				|},
				{|
				|}
			})
			[|{|terminate|}|>SKIP
		)
		\{|terminate|}			
	))
	
	-- visible state optimised equivalent
	
	VS_O__(id__,
			    const_Segway_SegwayController_stm_ref0_maxAngle,
			    const_Segway_SegwayController_stm_ref0_loopTime,
			    const_Segway_SegwayController_stm_ref0_startupDelay,
			    const_Segway_SegwayController_stm_ref0_speedUpdate,
			    const_Segway_SegwayController_stm_ref0_rotationUpdate,
			    const_Segway_SegwayController_stm_ref0_motorBudget,
			    const_Segway_SegwayController_stm_ref0_angleBudget,
			    const_Segway_SegwayController_stm_ref0_speedBudget,
			    const_Segway_SegwayController_stm_ref0_rotationBudget,
			    const_Segway_SegwayController_stm_ref1_P,
			    const_Segway_SegwayController_stm_ref1_D,
			    const_Segway_SegwayController_stm_ref2_P,
			    const_Segway_SegwayController_stm_ref2_I,
			    const_Segway_SegwayController_stm_ref2_maxIntegral,
			    const_Segway_SegwayController_stm_ref3_D) = sbisim(diamond(		(
			(
				(SKIP)
					[|{||}|]
				(
					(
						SegwayController::VS_O__(id__,
								    const_Segway_SegwayController_stm_ref0_maxAngle,
								    const_Segway_SegwayController_stm_ref0_loopTime,
								    const_Segway_SegwayController_stm_ref0_startupDelay,
								    const_Segway_SegwayController_stm_ref0_speedUpdate,
								    const_Segway_SegwayController_stm_ref0_rotationUpdate,
								    const_Segway_SegwayController_stm_ref0_motorBudget,
								    const_Segway_SegwayController_stm_ref0_angleBudget,
								    const_Segway_SegwayController_stm_ref0_speedBudget,
								    const_Segway_SegwayController_stm_ref0_rotationBudget,
								    const_Segway_SegwayController_stm_ref1_P,
								    const_Segway_SegwayController_stm_ref1_D,
								    const_Segway_SegwayController_stm_ref2_P,
								    const_Segway_SegwayController_stm_ref2_I,
								    const_Segway_SegwayController_stm_ref2_maxIntegral,
								    const_Segway_SegwayController_stm_ref3_D)[[
							SegwayController::terminate <- terminate,
							SegwayController::angle <- angle,
							SegwayController::gyroX <- gyroX,
							SegwayController::gyroY <- gyroY,
							SegwayController::gyroZ <- gyroZ,
							SegwayController::leftMotorVelocity <- leftMotorVelocity,
							SegwayController::rightMotorVelocity <- rightMotorVelocity,
							SegwayController::disableInterruptsCall <- disableInterruptsCall,
							SegwayController::setLeftMotorSpeedCall <- setLeftMotorSpeedCall,
							SegwayController::setRightMotorSpeedCall <- setRightMotorSpeedCall,
							SegwayController::enableInterruptsCall <- enableInterruptsCall
						]]
					)
						[|
							union(
								{|
								|},
								{|
								|}
							)
						|]
					Memory(id__)
				)
			)
			\ Union({
				{|
				|},
				{|
				|},
				{|
				|}
			})
			[|{|terminate|}|>SKIP
		)
		\{|terminate|}			
	))	
endmodule		




