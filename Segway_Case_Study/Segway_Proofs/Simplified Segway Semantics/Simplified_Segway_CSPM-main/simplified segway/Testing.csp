--Needed to run anything RoboChart semantics related.

include "../Segway-Parallel-Version3-Semantics/defs/robochart_defs.csp"
include "../Segway-Parallel-Version3-Semantics/defs/core_defs.csp"
include "../Segway-Parallel-Version3-Semantics/defs/state_defs.csp"
include "../Segway-Parallel-Version3-Semantics/instantiations.csp"

--My files.
include "SimpleSegway.csp"
include "AnglePID_C.csp"
include "SimplifiedSegwayController.csp"
include "../Segway-Parallel-Version3-Semantics/defs/Segway.csp"
include "../Segway-Parallel-Version3-Semantics/defs/Segway_SegwayController.csp"
channel r__
transparent diamond
transparent sbisim

Segway_Simple = SimpleSegway::P[[	SimpleSegway::angle <- Segway::angle,
					SimpleSegway::gyroX <- Segway::gyroX,
					SimpleSegway::gyroY <- Segway::gyroY,
					SimpleSegway::gyroZ <- Segway::gyroZ,
					SimpleSegway::leftMotorVelocity <- Segway::leftMotorVelocity,
					SimpleSegway::rightMotorVelocity <- Segway::rightMotorVelocity,
					SimpleSegway::disableInterruptsCall <- Segway::disableInterruptsCall,
					SimpleSegway::setLeftMotorSpeedCall <- Segway::setLeftMotorSpeedCall,
					SimpleSegway::setRightMotorSpeedCall <- Segway::setRightMotorSpeedCall,
					SimpleSegway::enableInterruptsCall <- Segway::enableInterruptsCall
						]]

-- generate Segway
P_Segway = let
	id__ = 0
	
	
	
	const_Segway_SegwayController_stm_ref2_P = const_SpeedPID_P
	const_Segway_SegwayController_stm_ref2_I = const_SpeedPID_I
	const_Segway_SegwayController_stm_ref2_maxIntegral = const_SpeedPID_maxIntegral
	const_Segway_SegwayController_stm_ref0_maxAngle = const_BalanceSTM_maxAngle
	const_Segway_SegwayController_stm_ref0_loopTime = const_BalanceSTM_loopTime
	const_Segway_SegwayController_stm_ref0_startupDelay = const_BalanceSTM_startupDelay
	const_Segway_SegwayController_stm_ref0_speedUpdate = const_BalanceSTM_speedUpdate
	const_Segway_SegwayController_stm_ref0_rotationUpdate = const_BalanceSTM_rotationUpdate
	const_Segway_SegwayController_stm_ref0_motorBudget = const_BalanceSTM_motorBudget
	const_Segway_SegwayController_stm_ref0_angleBudget = const_BalanceSTM_angleBudget
	const_Segway_SegwayController_stm_ref0_speedBudget = const_BalanceSTM_speedBudget
	const_Segway_SegwayController_stm_ref0_rotationBudget = const_BalanceSTM_rotationBudget
	const_Segway_SegwayController_stm_ref3_D = const_RotationPID_D
	const_Segway_AnglePID_C_stm_ref0_P = const_AnglePID_P
	const_Segway_AnglePID_C_stm_ref0_D = const_AnglePID_D
		
	
within
	Segway::O__(id__,
			    const_Segway_SegwayController_stm_ref0_maxAngle,
			    const_Segway_SegwayController_stm_ref0_loopTime,
			    const_Segway_SegwayController_stm_ref0_startupDelay,
			    const_Segway_SegwayController_stm_ref0_speedUpdate,
			    const_Segway_SegwayController_stm_ref0_rotationUpdate,
			    const_Segway_SegwayController_stm_ref0_motorBudget,
			    const_Segway_SegwayController_stm_ref0_angleBudget,
			    const_Segway_SegwayController_stm_ref0_speedBudget,
			    const_Segway_SegwayController_stm_ref0_rotationBudget,
			    const_Segway_SegwayController_stm_ref2_P,
			    const_Segway_SegwayController_stm_ref2_I,
			    const_Segway_SegwayController_stm_ref2_maxIntegral,
			    const_Segway_SegwayController_stm_ref3_D,
			    const_Segway_AnglePID_C_stm_ref0_P,
			    const_Segway_AnglePID_C_stm_ref0_D)



P_Segway_SegwayController = let
	id__ = 0
	
	
	
	const_Segway_SegwayController_stm_ref0_maxAngle = const_BalanceSTM_maxAngle
	const_Segway_SegwayController_stm_ref0_loopTime = const_BalanceSTM_loopTime
	const_Segway_SegwayController_stm_ref0_startupDelay = const_BalanceSTM_startupDelay
	const_Segway_SegwayController_stm_ref0_speedUpdate = const_BalanceSTM_speedUpdate
	const_Segway_SegwayController_stm_ref0_rotationUpdate = const_BalanceSTM_rotationUpdate
	const_Segway_SegwayController_stm_ref0_motorBudget = const_BalanceSTM_motorBudget
	const_Segway_SegwayController_stm_ref0_angleBudget = const_BalanceSTM_angleBudget
	const_Segway_SegwayController_stm_ref0_speedBudget = const_BalanceSTM_speedBudget
	const_Segway_SegwayController_stm_ref0_rotationBudget = const_BalanceSTM_rotationBudget
	const_Segway_SegwayController_stm_ref2_P = const_SpeedPID_P
	const_Segway_SegwayController_stm_ref2_I = const_SpeedPID_I
	const_Segway_SegwayController_stm_ref2_maxIntegral = const_SpeedPID_maxIntegral
	const_Segway_SegwayController_stm_ref3_D = const_RotationPID_D
		
within
	Segway_SegwayController::O__(id__,
			    const_Segway_SegwayController_stm_ref0_maxAngle,
			    const_Segway_SegwayController_stm_ref0_loopTime,
			    const_Segway_SegwayController_stm_ref0_startupDelay,
			    const_Segway_SegwayController_stm_ref0_speedUpdate,
			    const_Segway_SegwayController_stm_ref0_rotationUpdate,
			    const_Segway_SegwayController_stm_ref0_motorBudget,
			    const_Segway_SegwayController_stm_ref0_angleBudget,
			    const_Segway_SegwayController_stm_ref0_speedBudget,
			    const_Segway_SegwayController_stm_ref0_rotationBudget,
			    const_Segway_SegwayController_stm_ref2_P,
			    const_Segway_SegwayController_stm_ref2_I,
			    const_Segway_SegwayController_stm_ref2_maxIntegral,
			    const_Segway_SegwayController_stm_ref3_D)


SimpleController = SimplifiedSegwayController::P [[
		
		SimplifiedSegwayController::leftMotorVelocity <- Segway_SegwayController::leftMotorVelocity,
		SimplifiedSegwayController::rightMotorVelocity <- Segway_SegwayController::rightMotorVelocity,
		SimplifiedSegwayController::angle <- Segway_SegwayController::angle,
		SimplifiedSegwayController::gyroX <- Segway_SegwayController::gyroX,
		SimplifiedSegwayController::gyroY <- Segway_SegwayController::gyroY,
		SimplifiedSegwayController::gyroZ <- Segway_SegwayController::gyroZ,
		SimplifiedSegwayController::setLeftMotorSpeedCall <- Segway_SegwayController::setLeftMotorSpeedCall ,
		SimplifiedSegwayController::setRightMotorSpeedCall <- Segway_SegwayController::setRightMotorSpeedCall,
		SimplifiedSegwayController::enableInterruptsCall <- Segway_SegwayController::enableInterruptsCall,
		SimplifiedSegwayController::disableInterruptsCall <- Segway_SegwayController::disableInterruptsCall,
		SimplifiedSegwayController::angleOutputE <- Segway_SegwayController::angleOutputE,
		SimplifiedSegwayController::anewError <- Segway_SegwayController::anewError,
		SimplifiedSegwayController::adiff <- Segway_SegwayController::adiff
	]]

assert AnglePID_C::P :[deadlock-free]
assert SimpleSegway::P :[deadlock-free]
assert SimplifiedSegwayController::P :[deadlock-free]

--Now this works with old version.
assert Segway_Simple [T= P_Segway
assert P_Segway [T= Segway_Simple

assert P_Segway_SegwayController [T= SimpleController
assert SimpleController [T= P_Segway_SegwayController


