WEights of the first 10 nodes in layer 1. 

Rearrange them into two symmetric layers of 5 nodes each: 

Layer 1: 

5.40062e-02,-2.61092e+00,-1.80027e-01,2.42194e-01,1.41407e-01,
-1.12374e+00,2.63619e-02,-9.17929e-03,5.56230e-02,-3.27635e-01,
1.96019e-01,2.42159e-01,6.38452e-01,-4.78265e-01,1.42577e-01,
-1.63015e+00,-3.44447e-02,-6.05492e-03,1.12076e-02,-1.04997e-02,
-3.55133e-01,5.65969e-01,2.28267e-01,1.77342e-01,-2.08078e-01, 
 
 2: 


TRANSLATION: 
active,inactive,inactive,active,active,
inactive,active,inactive,active,inactive,
active,active,active,inactive,active
inactive,inactive,inactive,active,inactive,
inactive,active,active,active,inactive,

0.027, activation conditions, under which are unsure, is: 

absolute value thing, unsure a lot, actually, 

Theres got to be another way, current semantics, because we have to allow for negative values. 

Finer grain? For the input? Might help? Definitely will, under more conditions, 

Most combinations it can't be guaranteed to be active, unsure, 
WE can just remove them, if we have these conditions, we are unsure, we don't need to force any of hte others, 

just remove the other conditions, 
Layer 2: 

-3.41918e-02,1.49570e+00,-1.53371e+00,4.05053e-02,1.64350e-01,
4.02002e-01,2.24022e-01,-4.67160e-02,1.63890e-01,-1.60826e-01,
-1.41575e+00,-7.47429e-02,6.04386e-02,4.82656e-02,-5.60096e-02,
-1.44498e+00,4.48403e-02,8.88916e-03,-2.50230e-01,6.53312e-02,
-1.12740e+00,2.39891e-02,-9.56711e-03,8.92796e-03,-4.58007e-03,


inactive,active,inactive,active,active,
active,active,inactive,active,inactive,
inactive,inactive,active,active,inactive
inactive,active,active,inactive,active
inactive,active,inactive,active,inactive

Biases for layer 1: 
2.27630e-01,
-1.88762e-01,
5.34094e-02,
-3.77861e-01,
-8.12531e-02,

active,
inactive,
active,
inactive,
inactive

Biases for layer 2: 

-5.88651e-01,
7.46065e-02,
-3.92887e-01,
-3.56303e-01,
-1.67712e-01,

inactive,
active,
inactive,
inactive,
inactive

Our condition for layer (2,2) is: 

ActivationLogic(2,2,edge_results) =
 ((extract_sequence(1, edge_results) == active or extract_sequence(1, edge_results) == uncertain) and (extract_sequence(2, edge_results) == active or extract_sequence(2, edge_results) == uncertain) and (extract_sequence(3, edge_results) == active or extract_sequence(3, edge_results) == uncertain) and (extract_sequence(4, edge_results) == active or extract_sequence(4, edge_results) == uncertain) and (extract_sequence(5, edge_results) == active or extract_sequence(5, edge_results) == uncertain)) or
(extract_sequence(1,edge_results) == inactive and extract_sequence(2,edge_results) == inactive and extract_sequence(3,edge_results) == inactive and extract_sequence(4,edge_results) == inactive and extract_sequence(5,edge_results) == inactive)


It is active ONLY if, all are active or uncertain, or: 

all of them are inactive, that seems like an error. 

maximums: 

assume 1

bias: 

0.0746. 

Weights: 
4.02002e-01,2.24022e-01,-4.67160e-02,1.63890e-01,-1.60826e-01,
EVEN UNDER AN INFINITE range, only 3 and 5 being active could cause it to be inactive. 

Only looking at negative weights, actually the complement of these behaviours. 

Negative weights are the ONLY ONES WHERE IT COULD ACTUALLY BE POSITIVE. 

EVERY OTHER CONDITION WE ARE SURE OF. 

ONLY ONES WE ARE UNSURE OF, if max > bias, we are UNSURE of it. 
abs(sum) >= bias, then we ARE UNSURE. 
if its equal, because of 0, could be negative. 


ONLY FOR NEGATIVE VALUES, EVERYTHING ELSE, ITS FINE. 


ENCODE ONLY THOSE CONDITIONS where it could be. 

If any are any, and 3 or 5 is active. 



We do possible inactivation semantics for these too, conditions under which it 

FAILURE MEANS: must be active. 

SUCCESS MEANS: could be inactive, put unsure. 


WHen can we say that this will ACTIVATE. 

IF ALL ARE INACTIVE, or

everything is greater than 0 or 

Problem is, we don't know

Maximal negative value, it can be? 

-0.0467 * 1

-0.0467 + -0.16082

It is RESISTANT agaisnt node 3, doesn't matter what that does. 

The only way it will ever NOT ACTIVATE, is if 5 activates. 

everything else, it is invariant agaisnt. 

Inactivation, what could cause it to not be active? ONLY 5. 

true under any other valuations, if 

True under any other circumstance. 

Backwards perhaps. 

Even then, what do we do, if it could be inactive? unsure. 

Unsure semantics, its only NOT ACTIVE, then it could be unsure or inactive, we can just put unsure. 

when 

Forced to be active, 

I think the inactivation semantics are fine, a lot of clauses

Activation semantics, 

Unsure semantics? 

Encode everything that we aren't sure of as inactive? NO. 





